#install packages for build layer
FROM golang:1.22-alpine as builder
RUN apk add --no-cache git gcc make libc-dev linux-headers
RUN set -eux; apk add --no-cache ca-certificates build-base

ADD https://github.com/CosmWasm/wasmvm/releases/download/v2.1.5/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a
ADD https://github.com/CosmWasm/wasmvm/releases/download/v2.1.5/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a
RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 1bad0e3f9b72603082b8e48307c7a319df64ca9e26976ffc7a3c317a08fe4b1a
RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep c6612d17d82b0997696f1076f6d894e339241482570b9142f29b0d8f21b280bf

#Set architecture
RUN apk --print-arch > ./architecture
RUN cp /lib/libwasmvm_muslc.$(cat ./architecture).a /lib/libwasmvm_muslc.a
RUN rm ./architecture

#build binary
WORKDIR /src
COPY go.mod .
COPY go.sum .
ENV GO111MODULE=on
RUN go mod download
COPY . .

#build binary
RUN LEDGER_ENABLED=false BUILD_TAGS=muslc LINK_STATICALLY=true make install-ci

#build main container
FROM alpine:latest

# Add the "injective" non-root user and group
RUN addgroup -S injective && adduser -S -G injective injective

# Install dependencies
RUN apk add --no-cache ca-certificates curl tree python3 py3-pip

# Install AWS CLI
RUN pip3 install --upgrade pip && \
    pip3 install --no-cache-dir awscli && \
    rm -rf /var/cache/apk/*

# Copy the injectived binary and configuration files
COPY --from=builder /go/bin/* /usr/local/bin/
COPY --from=builder /src/injectived.sh .

#configure container
VOLUME /apps/data
WORKDIR /apps/data
EXPOSE 26657 26656 10337 9900 9091 9999

#default command
CMD sh /injectived.sh
