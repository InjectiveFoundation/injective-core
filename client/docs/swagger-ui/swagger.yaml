swagger: '2.0'
info:
  title: Injective Chain - Legacy REST and gRPC Gateway docs
  description: A REST interface for state queries, legacy transactions
  version: 1.0.0
paths:
  /injective/exchange/v1beta1/atomic_order_fee_multiplier:
    get:
      operationId: MarketAtomicExecutionFeeMultiplier
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              multiplier:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/balance_mismatches/{dust_factor}:
    get:
      summary: Retrieves mismatches between available vs. total balance
      operationId: BalanceMismatches
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance_mismatches:
                type: array
                items:
                  type: object
                  properties:
                    subaccountId:
                      type: string
                    denom:
                      type: string
                    available:
                      type: string
                    total:
                      type: string
                    balance_hold:
                      type: string
                    expected_total:
                      type: string
                    difference:
                      type: string
            description: |-
              QueryBalanceMismatchesResponse is the response type for the
              Query/QueryBalanceMismatches RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: dust_factor
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /injective/exchange/v1beta1/balances_with_balance_holds:
    get:
      summary: Retrieves available and total balances with balance holds
      operationId: BalanceWithBalanceHolds
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance_with_balance_holds:
                type: array
                items:
                  type: object
                  properties:
                    subaccountId:
                      type: string
                    denom:
                      type: string
                    available:
                      type: string
                    total:
                      type: string
                    balance_hold:
                      type: string
            description: |-
              QueryBalanceWithBalanceHoldsResponse is the response type for the
              Query/QueryBalanceWithBalanceHolds RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/binary_options/markets:
    get:
      summary: Retrieves a spot market's orderbook by marketID
      operationId: BinaryOptionsMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    ticker:
                      type: string
                      description: Ticker for the derivative contract.
                    oracle_symbol:
                      type: string
                      title: Oracle symbol
                    oracle_provider:
                      type: string
                      title: Oracle Provider
                    oracle_type:
                      title: Oracle type
                      type: string
                      enum:
                        - Unspecified
                        - Band
                        - PriceFeed
                        - Coinbase
                        - Chainlink
                        - Razor
                        - Dia
                        - API3
                        - Uma
                        - Pyth
                        - BandIBC
                        - Provider
                      default: Unspecified
                    oracle_scale_factor:
                      type: integer
                      format: int64
                      description: Scale factor for oracle prices.
                    expiration_timestamp:
                      type: string
                      format: int64
                      title: expiration timestamp
                    settlement_timestamp:
                      type: string
                      format: int64
                      title: expiration timestamp
                    admin:
                      type: string
                      title: admin of the market
                    quote_denom:
                      type: string
                      title: >-
                        Address of the quote currency denomination for the
                        binary options contract
                    market_id:
                      type: string
                      description: Unique market ID.
                    maker_fee_rate:
                      type: string
                      title: >-
                        maker_fee_rate defines the maker fee rate of a binary
                        options market
                    taker_fee_rate:
                      type: string
                      title: >-
                        taker_fee_rate defines the taker fee rate of a
                        derivative market
                    relayer_fee_share_rate:
                      type: string
                      title: >-
                        relayer_fee_share_rate defines the percentage of the
                        transaction fee shared

                        with the relayer in a derivative market
                    status:
                      title: Status of the market
                      type: string
                      enum:
                        - Unspecified
                        - Active
                        - Paused
                        - Demolished
                        - Expired
                      default: Unspecified
                    min_price_tick_size:
                      type: string
                      title: >-
                        min_price_tick_size defines the minimum tick size that
                        the price and margin

                        required for orders in the market
                    min_quantity_tick_size:
                      type: string
                      title: >-
                        min_quantity_tick_size defines the minimum tick size of
                        the quantity

                        required for orders in the market
                    settlement_price:
                      type: string
                  description: >-
                    An object describing a binary options market in Injective
                    Protocol.
            description: >-
              QueryBinaryMarketsResponse is the response type for the
              Query/BinaryMarkets

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: status
          description: >-
            Status of the market, for convenience it is set to string - not
            enum.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/market_address/{market_id}:
    get:
      summary: |-
        Retrieves a derivative market's corresponding address for fees that
        contribute to the market's insurance fund
      operationId: DerivativeMarketAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
                title: address for the market
              subaccount_id:
                type: string
                title: subaccountID for the market
            description: |-
              QueryDerivativeMarketAddressResponse is the response type for the
              Query/DerivativeMarketAddress RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/markets:
    get:
      summary: Retrieves a list of derivative markets.
      operationId: DerivativeMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    market:
                      type: object
                      properties:
                        ticker:
                          type: string
                          description: Ticker for the derivative contract.
                        oracle_base:
                          type: string
                          title: Oracle base currency
                        oracle_quote:
                          type: string
                          title: Oracle quote currency
                        oracle_type:
                          title: Oracle type
                          type: string
                          enum:
                            - Unspecified
                            - Band
                            - PriceFeed
                            - Coinbase
                            - Chainlink
                            - Razor
                            - Dia
                            - API3
                            - Uma
                            - Pyth
                            - BandIBC
                            - Provider
                          default: Unspecified
                        oracle_scale_factor:
                          type: integer
                          format: int64
                          description: Scale factor for oracle prices.
                        quote_denom:
                          type: string
                          title: >-
                            Address of the quote currency denomination for the
                            derivative contract
                        market_id:
                          type: string
                          description: Unique market ID.
                        initial_margin_ratio:
                          type: string
                          title: >-
                            initial_margin_ratio defines the initial margin
                            ratio of a derivative

                            market
                        maintenance_margin_ratio:
                          type: string
                          title: >-
                            maintenance_margin_ratio defines the maintenance
                            margin ratio of a

                            derivative market
                        maker_fee_rate:
                          type: string
                          title: >-
                            maker_fee_rate defines the maker fee rate of a
                            derivative market
                        taker_fee_rate:
                          type: string
                          title: >-
                            taker_fee_rate defines the taker fee rate of a
                            derivative market
                        relayer_fee_share_rate:
                          type: string
                          title: >-
                            relayer_fee_share_rate defines the percentage of the
                            transaction fee shared

                            with the relayer in a derivative market
                        isPerpetual:
                          type: boolean
                          title: >-
                            true if the market is a perpetual market. false if
                            the market is an expiry

                            futures market
                        status:
                          title: Status of the market
                          type: string
                          enum:
                            - Unspecified
                            - Active
                            - Paused
                            - Demolished
                            - Expired
                          default: Unspecified
                        min_price_tick_size:
                          type: string
                          title: >-
                            min_price_tick_size defines the minimum tick size
                            that the price and margin

                            required for orders in the market
                        min_quantity_tick_size:
                          type: string
                          title: >-
                            min_quantity_tick_size defines the minimum tick size
                            of the quantity

                            required for orders in the market
                      description: >-
                        An object describing a derivative market in the
                        Injective Futures Protocol.
                    perpetual_info:
                      type: object
                      properties:
                        market_info:
                          type: object
                          properties:
                            market_id:
                              type: string
                              description: market ID.
                            hourly_funding_rate_cap:
                              type: string
                              title: >-
                                hourly_funding_rate_cap defines the maximum
                                absolute value of the hourly

                                funding rate
                            hourly_interest_rate:
                              type: string
                              title: >-
                                hourly_interest_rate defines the hourly interest
                                rate
                            next_funding_timestamp:
                              type: string
                              format: int64
                              title: >-
                                next_funding_timestamp defines the next funding
                                timestamp in seconds of a

                                perpetual market
                            funding_interval:
                              type: string
                              format: int64
                              description: >-
                                funding_interval defines the next funding
                                interval in seconds of a

                                perpetual market.
                        funding_info:
                          type: object
                          properties:
                            cumulative_funding:
                              type: string
                              description: >-
                                cumulative_funding defines the cumulative
                                funding of a perpetual market.
                            cumulative_price:
                              type: string
                              title: >-
                                cumulative_price defines the cumulative price
                                for the current hour up to

                                the last timestamp
                            last_timestamp:
                              type: string
                              format: int64
                    futures_info:
                      type: object
                      properties:
                        market_id:
                          type: string
                          description: market ID.
                        expiration_timestamp:
                          type: string
                          format: int64
                          description: >-
                            expiration_timestamp defines the expiration time for
                            a time expiry futures

                            market.
                        twap_start_timestamp:
                          type: string
                          format: int64
                          title: >-
                            expiration_twap_start_timestamp defines the start
                            time of the TWAP

                            calculation window
                        expiration_twap_start_price_cumulative:
                          type: string
                          title: >-
                            expiration_twap_start_price_cumulative defines the
                            cumulative price for the

                            start of the TWAP window
                        settlement_price:
                          type: string
                          description: >-
                            settlement_price defines the settlement price for a
                            time expiry futures

                            market.
                    mark_price:
                      type: string
                    mid_price_and_tob:
                      title: >-
                        mid_price_and_tob defines the mid price for this market
                        and the best ask

                        and bid orders
                      type: object
                      properties:
                        mid_price:
                          type: string
                          title: mid price of the market
                        best_buy_price:
                          type: string
                          title: best buy price of the market
                        best_sell_price:
                          type: string
                          title: best sell price of the market
            description: |-
              QueryDerivativeMarketsResponse is the response type for the
              Query/DerivativeMarkets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: status
          description: >-
            Status of the market, for convenience it is set to string - not
            enum.
          in: query
          required: false
          type: string
        - name: market_ids
          description: Filter by market IDs.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: with_mid_price_and_tob
          description: >-
            Flag to return the markets mid price and top of the book buy and
            sell

            orders.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/markets/{market_id}:
    get:
      summary: Retrieves a derivative market by ticker
      operationId: DerivativeMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                type: object
                properties:
                  market:
                    type: object
                    properties:
                      ticker:
                        type: string
                        description: Ticker for the derivative contract.
                      oracle_base:
                        type: string
                        title: Oracle base currency
                      oracle_quote:
                        type: string
                        title: Oracle quote currency
                      oracle_type:
                        title: Oracle type
                        type: string
                        enum:
                          - Unspecified
                          - Band
                          - PriceFeed
                          - Coinbase
                          - Chainlink
                          - Razor
                          - Dia
                          - API3
                          - Uma
                          - Pyth
                          - BandIBC
                          - Provider
                        default: Unspecified
                      oracle_scale_factor:
                        type: integer
                        format: int64
                        description: Scale factor for oracle prices.
                      quote_denom:
                        type: string
                        title: >-
                          Address of the quote currency denomination for the
                          derivative contract
                      market_id:
                        type: string
                        description: Unique market ID.
                      initial_margin_ratio:
                        type: string
                        title: >-
                          initial_margin_ratio defines the initial margin ratio
                          of a derivative

                          market
                      maintenance_margin_ratio:
                        type: string
                        title: >-
                          maintenance_margin_ratio defines the maintenance
                          margin ratio of a

                          derivative market
                      maker_fee_rate:
                        type: string
                        title: >-
                          maker_fee_rate defines the maker fee rate of a
                          derivative market
                      taker_fee_rate:
                        type: string
                        title: >-
                          taker_fee_rate defines the taker fee rate of a
                          derivative market
                      relayer_fee_share_rate:
                        type: string
                        title: >-
                          relayer_fee_share_rate defines the percentage of the
                          transaction fee shared

                          with the relayer in a derivative market
                      isPerpetual:
                        type: boolean
                        title: >-
                          true if the market is a perpetual market. false if the
                          market is an expiry

                          futures market
                      status:
                        title: Status of the market
                        type: string
                        enum:
                          - Unspecified
                          - Active
                          - Paused
                          - Demolished
                          - Expired
                        default: Unspecified
                      min_price_tick_size:
                        type: string
                        title: >-
                          min_price_tick_size defines the minimum tick size that
                          the price and margin

                          required for orders in the market
                      min_quantity_tick_size:
                        type: string
                        title: >-
                          min_quantity_tick_size defines the minimum tick size
                          of the quantity

                          required for orders in the market
                    description: >-
                      An object describing a derivative market in the Injective
                      Futures Protocol.
                  perpetual_info:
                    type: object
                    properties:
                      market_info:
                        type: object
                        properties:
                          market_id:
                            type: string
                            description: market ID.
                          hourly_funding_rate_cap:
                            type: string
                            title: >-
                              hourly_funding_rate_cap defines the maximum
                              absolute value of the hourly

                              funding rate
                          hourly_interest_rate:
                            type: string
                            title: >-
                              hourly_interest_rate defines the hourly interest
                              rate
                          next_funding_timestamp:
                            type: string
                            format: int64
                            title: >-
                              next_funding_timestamp defines the next funding
                              timestamp in seconds of a

                              perpetual market
                          funding_interval:
                            type: string
                            format: int64
                            description: >-
                              funding_interval defines the next funding interval
                              in seconds of a

                              perpetual market.
                      funding_info:
                        type: object
                        properties:
                          cumulative_funding:
                            type: string
                            description: >-
                              cumulative_funding defines the cumulative funding
                              of a perpetual market.
                          cumulative_price:
                            type: string
                            title: >-
                              cumulative_price defines the cumulative price for
                              the current hour up to

                              the last timestamp
                          last_timestamp:
                            type: string
                            format: int64
                  futures_info:
                    type: object
                    properties:
                      market_id:
                        type: string
                        description: market ID.
                      expiration_timestamp:
                        type: string
                        format: int64
                        description: >-
                          expiration_timestamp defines the expiration time for a
                          time expiry futures

                          market.
                      twap_start_timestamp:
                        type: string
                        format: int64
                        title: >-
                          expiration_twap_start_timestamp defines the start time
                          of the TWAP

                          calculation window
                      expiration_twap_start_price_cumulative:
                        type: string
                        title: >-
                          expiration_twap_start_price_cumulative defines the
                          cumulative price for the

                          start of the TWAP window
                      settlement_price:
                        type: string
                        description: >-
                          settlement_price defines the settlement price for a
                          time expiry futures

                          market.
                  mark_price:
                    type: string
                  mid_price_and_tob:
                    title: >-
                      mid_price_and_tob defines the mid price for this market
                      and the best ask

                      and bid orders
                    type: object
                    properties:
                      mid_price:
                        type: string
                        title: mid price of the market
                      best_buy_price:
                        type: string
                        title: best buy price of the market
                      best_sell_price:
                        type: string
                        title: best sell price of the market
            description: |-
              QueryDerivativeMarketResponse is the response type for the
              Query/DerivativeMarket RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/mid_price_and_tob/{market_id}:
    get:
      summary: Retrieves a derivative market's mid-price
      operationId: DerivativeMidPriceAndTOB
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              mid_price:
                type: string
                title: mid price of the market
              best_buy_price:
                type: string
                title: best buy price of the market
              best_sell_price:
                type: string
                title: best sell price of the market
            description: |-
              QueryDerivativeMidPriceAndTOBResponse is the response type for the
              Query/GetDerivativeMidPriceAndTOB RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/orderbook/{market_id}:
    get:
      summary: Retrieves a derivative market's orderbook by marketID
      operationId: DerivativeOrderbook
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              buys_price_level:
                type: array
                items:
                  type: object
                  properties:
                    p:
                      type: string
                      title: price
                    q:
                      type: string
                      title: quantity
              sells_price_level:
                type: array
                items:
                  type: object
                  properties:
                    p:
                      type: string
                      title: price
                    q:
                      type: string
                      title: quantity
            description: |-
              QueryDerivativeOrderbookResponse is the response type for the
              Query/DerivativeOrderbook RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: string
          format: uint64
        - name: limit_cumulative_notional
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/orders/conditional/{market_id}/{subaccount_id}:
    get:
      summary: Retrieves a trader's derivative conditional orders
      operationId: TraderDerivativeConditionalOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    margin:
                      type: string
                      title: margin of the order
                    triggerPrice:
                      type: string
                      title: price to trigger the order
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    isLimit:
                      type: boolean
                    order_hash:
                      type: string
            description: |-
              QueryTraderDerivativeOrdersResponse is the response type for the
              Query/TraderDerivativeOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
        - name: subaccount_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/orders/{market_id}/account/{account_address}:
    get:
      summary: Retrieves all account address derivative orders
      operationId: AccountAddressDerivativeOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    margin:
                      type: string
                      title: margin of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: >-
              QueryAccountAddressDerivativeOrdersResponse is the response type
              for the

              Query/AccountAddressDerivativeOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: account_address
          description: Account address of the trader
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/orders/{market_id}/{subaccount_id}:
    get:
      summary: Retrieves a trader's derivative orders
      operationId: TraderDerivativeOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    margin:
                      type: string
                      title: margin of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QueryTraderDerivativeOrdersResponse is the response type for the
              Query/TraderDerivativeOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: subaccount_id
          description: SubaccountID of the trader
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/orders_by_hashes/{market_id}/{subaccount_id}:
    get:
      summary: Retrieves a trader's derivative orders
      operationId: DerivativeOrdersByHashes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    margin:
                      type: string
                      title: margin of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QueryDerivativeOrdersByHashesResponse is the response type for the
              Query/DerivativeOrdersByHashes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: subaccount_id
          description: SubaccountID of the trader
          in: path
          required: true
          type: string
        - name: order_hashes
          description: the order hashes.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/derivative/transient_orders/{market_id}/{subaccount_id}:
    get:
      summary: Retrieves a trader's transient derivative orders
      operationId: TraderDerivativeTransientOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    margin:
                      type: string
                      title: margin of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QueryTraderDerivativeOrdersResponse is the response type for the
              Query/TraderDerivativeOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: subaccount_id
          description: SubaccountID of the trader
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/effective_positions/{subaccount_id}/{market_id}:
    get:
      summary: Retrieves subaccount's position in market
      operationId: SubaccountEffectivePositionInMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  is_long:
                    type: boolean
                  quantity:
                    type: string
                  entry_price:
                    type: string
                  effective_margin:
                    type: string
            description: >-
              QuerySubaccountEffectivePositionInMarketResponse is the response
              type for the

              Query/SubaccountEffectivePositionInMarket RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: path
          required: true
          type: string
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/aggregateMarketVolume/{market_id}:
    get:
      summary: Retrieves the aggregate volume for the specified market
      operationId: AggregateMarketVolume
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              volume:
                type: object
                properties:
                  maker_volume:
                    type: string
                  taker_volume:
                    type: string
            description: |-
              QueryAggregateMarketVolumeResponse is the response type for the
              Query/AggregateMarketVolume RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/aggregateMarketVolumes:
    get:
      summary: Retrieves the aggregate market volumes for specified markets
      operationId: AggregateMarketVolumes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              volumes:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    volume:
                      type: object
                      properties:
                        maker_volume:
                          type: string
                        taker_volume:
                          type: string
                title: the aggregate volumes for the entire market
            description: |-
              QueryAggregateMarketVolumesResponse is the response type for the
              Query/AggregateMarketVolumes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_ids
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/aggregateVolume/{account}:
    get:
      summary: Retrieves the aggregate volumes for the specified account or subaccount
      operationId: AggregateVolume
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_volumes:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    volume:
                      type: object
                      properties:
                        maker_volume:
                          type: string
                        taker_volume:
                          type: string
                title: >-
                  if an address is specified, then the aggregate_volumes will
                  aggregate the

                  volumes across all subaccounts for the address
            description: |-
              QueryAggregateVolumeResponse is the response type for the
              Query/AggregateVolume RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: account
          description: can either be an address or a subaccount
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/aggregateVolumes:
    get:
      summary: Retrieves the aggregate volumes for specified accounts
      operationId: AggregateVolumes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_account_volumes:
                type: array
                items:
                  type: object
                  properties:
                    account:
                      type: string
                    market_volumes:
                      type: array
                      items:
                        type: object
                        properties:
                          market_id:
                            type: string
                          volume:
                            type: object
                            properties:
                              maker_volume:
                                type: string
                              taker_volume:
                                type: string
                title: the aggregate volume records for the accounts specified
              aggregate_market_volumes:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    volume:
                      type: object
                      properties:
                        maker_volume:
                          type: string
                        taker_volume:
                          type: string
                title: the aggregate volumes for the markets specified
            description: |-
              QueryAggregateVolumesResponse is the response type for the
              Query/AggregateVolumes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: accounts
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: market_ids
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/denom_decimal/{denom}:
    get:
      summary: Retrieves the denom decimals for a denom.
      operationId: DenomDecimal
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              decimal:
                type: string
                format: uint64
            description: >-
              QueryDenomDecimalResponse is the response type for the
              Query/DenomDecimal RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/denom_decimals:
    get:
      summary: |-
        Retrieves the denom decimals for multiple denoms. Returns all denom
        decimals if unspecified.
      operationId: DenomDecimals
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denom_decimals:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    decimals:
                      type: string
                      format: uint64
            description: >-
              QueryDenomDecimalsRequest is the response type for the
              Query/DenomDecimals

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denoms
          description: denoms can be empty to query all denom decimals.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/exchangeBalances:
    get:
      summary: Retrieves all of the balances of all users on the exchange.
      operationId: ExchangeBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  type: object
                  properties:
                    subaccount_id:
                      type: string
                    denom:
                      type: string
                    deposits:
                      type: object
                      properties:
                        available_balance:
                          type: string
                        total_balance:
                          type: string
                      title: A subaccount's deposit for a given base currency
            description: |-
              QuerySubaccountDepositsResponse is the response type for the
              Query/SubaccountDeposits RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/subaccountDeposit:
    get:
      summary: Retrieves a Subaccount's Deposits
      operationId: SubaccountDeposit
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposits:
                type: object
                properties:
                  available_balance:
                    type: string
                  total_balance:
                    type: string
                title: A subaccount's deposit for a given base currency
            description: |-
              QuerySubaccountDepositsResponse is the response type for the
              Query/SubaccountDeposits RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: query
          required: false
          type: string
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/subaccountDeposits:
    get:
      summary: Retrieves a Subaccount's Deposits
      operationId: SubaccountDeposits
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposits:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    available_balance:
                      type: string
                    total_balance:
                      type: string
                  title: A subaccount's deposit for a given base currency
            description: |-
              QuerySubaccountDepositsResponse is the response type for the
              Query/SubaccountDeposits RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: query
          required: false
          type: string
        - name: subaccount.trader
          in: query
          required: false
          type: string
        - name: subaccount.subaccount_nonce
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Query
  /injective/exchange/v1beta1/exchange/{subaccount_id}:
    get:
      summary: Retrieves a subaccount's trade nonce
      operationId: SubaccountTradeNonce
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              nonce:
                type: integer
                format: int64
            description: |-
              QuerySubaccountTradeNonceResponse is the response type for the
              Query/SubaccountTradeNonce RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchangeParams:
    get:
      summary: Retrieves exchange params
      operationId: QueryExchangeParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  spot_market_instant_listing_fee:
                    title: >-
                      spot_market_instant_listing_fee defines the expedited fee
                      in INJ required

                      to create a spot market by bypassing governance
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  derivative_market_instant_listing_fee:
                    title: >-
                      derivative_market_instant_listing_fee defines the
                      expedited fee in INJ

                      required to create a derivative market by bypassing
                      governance
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  default_spot_maker_fee_rate:
                    type: string
                    title: >-
                      default_spot_maker_fee defines the default exchange trade
                      fee for makers on

                      a spot market
                  default_spot_taker_fee_rate:
                    type: string
                    title: >-
                      default_spot_taker_fee_rate defines the default exchange
                      trade fee rate for

                      takers on a new spot market
                  default_derivative_maker_fee_rate:
                    type: string
                    title: >-
                      default_derivative_maker_fee defines the default exchange
                      trade fee for

                      makers on a new derivative market
                  default_derivative_taker_fee_rate:
                    type: string
                    title: >-
                      default_derivative_taker_fee defines the default exchange
                      trade fee for

                      takers on a new derivative market
                  default_initial_margin_ratio:
                    type: string
                    title: >-
                      default_initial_margin_ratio defines the default initial
                      margin ratio on a

                      new derivative market
                  default_maintenance_margin_ratio:
                    type: string
                    title: >-
                      default_maintenance_margin_ratio defines the default
                      maintenance margin

                      ratio on a new derivative market
                  default_funding_interval:
                    type: string
                    format: int64
                    title: >-
                      default_funding_interval defines the default funding
                      interval on a

                      derivative market
                  funding_multiple:
                    type: string
                    format: int64
                    title: >-
                      funding_multiple defines the timestamp multiple that the
                      funding timestamp

                      should be a multiple of
                  relayer_fee_share_rate:
                    type: string
                    title: >-
                      relayer_fee_share_rate defines the trade fee share
                      percentage that goes to

                      relayers
                  default_hourly_funding_rate_cap:
                    type: string
                    title: >-
                      default_hourly_funding_rate_cap defines the default
                      maximum absolute value

                      of the hourly funding rate
                  default_hourly_interest_rate:
                    type: string
                    title: hourly_interest_rate defines the hourly interest rate
                  max_derivative_order_side_count:
                    type: integer
                    format: int64
                    title: >-
                      max_derivative_order_side_count defines the maximum number
                      of derivative

                      active orders a subaccount can have for a given orderbook
                      side
                  inj_reward_staked_requirement_threshold:
                    type: string
                    title: >-
                      inj_reward_staked_requirement_threshold defines the
                      threshold on INJ

                      rewards after which one also needs staked INJ to receive
                      more
                  trading_rewards_vesting_duration:
                    type: string
                    format: int64
                    title: >-
                      the trading_rewards_vesting_duration defines the vesting
                      times for trading

                      rewards
                  liquidator_reward_share_rate:
                    type: string
                    title: >-
                      liquidator_reward_share_rate defines the ratio of the
                      split of the surplus

                      collateral that goes to the liquidator
                  binary_options_market_instant_listing_fee:
                    title: >-
                      binary_options_market_instant_listing_fee defines the
                      expedited fee in INJ

                      required to create a derivative market by bypassing
                      governance
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  atomic_market_order_access_level:
                    title: >-
                      atomic_market_order_access_level defines the required
                      access permissions

                      for executing atomic market orders
                    type: string
                    enum:
                      - Nobody
                      - BeginBlockerSmartContractsOnly
                      - SmartContractsOnly
                      - Everyone
                    default: Nobody
                  spot_atomic_market_order_fee_multiplier:
                    type: string
                    title: >-
                      spot_atomic_market_order_fee_multiplier defines the
                      default multiplier for

                      executing atomic market orders in spot markets
                  derivative_atomic_market_order_fee_multiplier:
                    type: string
                    title: >-
                      derivative_atomic_market_order_fee_multiplier defines the
                      default

                      multiplier for executing atomic market orders in
                      derivative markets
                  binary_options_atomic_market_order_fee_multiplier:
                    type: string
                    title: >-
                      binary_options_atomic_market_order_fee_multiplier defines
                      the default

                      multiplier for executing atomic market orders in binary
                      markets
                  minimal_protocol_fee_rate:
                    type: string
                    title: >-
                      minimal_protocol_fee_rate defines the minimal protocol fee
                      rate
                  is_instant_derivative_market_launch_enabled:
                    type: boolean
                    title: >-
                      is_instant_derivative_market_launch_enabled defines
                      whether instant

                      derivative market launch is enabled
                  post_only_mode_height_threshold:
                    type: string
                    format: int64
            description: >-
              QueryExchangeParamsRequest is the response type for the
              Query/ExchangeParams

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/expiry_market_info/{market_id}:
    get:
      summary: Retrieves expiry market info
      operationId: ExpiryFuturesMarketInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              info:
                type: object
                properties:
                  market_id:
                    type: string
                    description: market ID.
                  expiration_timestamp:
                    type: string
                    format: int64
                    description: >-
                      expiration_timestamp defines the expiration time for a
                      time expiry futures

                      market.
                  twap_start_timestamp:
                    type: string
                    format: int64
                    title: >-
                      expiration_twap_start_timestamp defines the start time of
                      the TWAP

                      calculation window
                  expiration_twap_start_price_cumulative:
                    type: string
                    title: >-
                      expiration_twap_start_price_cumulative defines the
                      cumulative price for the

                      start of the TWAP window
                  settlement_price:
                    type: string
                    description: >-
                      settlement_price defines the settlement price for a time
                      expiry futures

                      market.
            description: >-
              QueryExpiryFuturesMarketInfoResponse is the response type for the
              Query/

              ExpiryFuturesMarketInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/fee_discount_account_info/{account}:
    get:
      summary: Retrieves the account's fee discount info
      operationId: FeeDiscountAccountInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tier_level:
                type: string
                format: uint64
              account_info:
                type: object
                properties:
                  maker_discount_rate:
                    type: string
                  taker_discount_rate:
                    type: string
                  staked_amount:
                    type: string
                  volume:
                    type: string
              account_ttl:
                type: object
                properties:
                  tier:
                    type: string
                    format: uint64
                  ttl_timestamp:
                    type: string
                    format: int64
            description: |-
              QueryFeeDiscountAccountInfoResponse is the response type for the
              Query/FeeDiscountAccountInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: account
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/fee_discount_schedule:
    get:
      summary: Retrieves the fee discount schedule
      operationId: FeeDiscountSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              fee_discount_schedule:
                type: object
                properties:
                  bucket_count:
                    type: string
                    format: uint64
                  bucket_duration:
                    type: string
                    format: int64
                  quote_denoms:
                    type: array
                    items:
                      type: string
                    title: >-
                      the trading fee quote denoms which will be counted for the
                      fee paid

                      contribution
                  tier_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        maker_discount_rate:
                          type: string
                        taker_discount_rate:
                          type: string
                        staked_amount:
                          type: string
                        volume:
                          type: string
                    title: the fee discount tiers
                  disqualified_market_ids:
                    type: array
                    items:
                      type: string
                    title: >-
                      the marketIDs which are disqualified from contributing to
                      the fee paid

                      amount
            description: |-
              QueryFeeDiscountScheduleResponse is the response type for the
              Query/FeeDiscountSchedule RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/fee_discount_tier_stats:
    get:
      summary: Retrieves fee discount tier stats
      operationId: FeeDiscountTierStatistics
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              statistics:
                type: array
                items:
                  type: object
                  properties:
                    tier:
                      type: string
                      format: uint64
                    count:
                      type: string
                      format: uint64
            description: >-
              QueryFeeDiscountTierStatisticsResponse is the response type for
              the

              Query/QueryFeeDiscountTierStatistics RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/historical_trade_records:
    get:
      summary: Retrieves historical trade records for a given market ID
      operationId: HistoricalTradeRecords
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              trade_records:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    latest_trade_records:
                      type: array
                      items:
                        type: object
                        properties:
                          timestamp:
                            type: string
                            format: int64
                          price:
                            type: string
                          quantity:
                            type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/is_opted_out_of_rewards/{account}:
    get:
      summary: Retrieves if the account is opted out of rewards
      operationId: IsOptedOutOfRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              is_opted_out:
                type: boolean
            description: |-
              QueryIsRegisteredDMMResponse is the response type for the
              Query/IsRegisteredDMM RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: account
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/market_volatility/{market_id}:
    get:
      summary: |-
        MarketVolatility computes the volatility for spot and derivative markets
        trading history.
      operationId: MarketVolatility
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              volatility:
                type: string
              history_metadata:
                type: object
                properties:
                  group_count:
                    type: integer
                    format: int64
                    title: >-
                      GroupCount refers to the number of groups used. Equals
                      RecordsSampleSize if

                      no grouping is used
                  records_sample_size:
                    type: integer
                    format: int64
                    description: >-
                      RecordsSampleSize refers to the total number of records
                      used.
                  mean:
                    type: string
                    title: >-
                      Mean refers to the arithmetic mean

                      For trades, the mean is the VWAP computed over the grouped
                      trade records ∑

                      (price * quantity) / ∑ quantity For oracle prices, the
                      mean is computed

                      over the price records ∑ (price) / prices_count
                  twap:
                    type: string
                    title: >-
                      TWAP refers to the time-weighted average price which
                      equals ∑ (price_i *

                      ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
                  first_timestamp:
                    type: string
                    format: int64
                    title: >-
                      FirstTimestamp is the timestamp of the oldest record
                      considered
                  last_timestamp:
                    type: string
                    format: int64
                    title: >-
                      LastTimestamp is the timestamp of the youngest record
                      considered
                  min_price:
                    type: string
                    title: >-
                      MinPrice refers to the smallest individual raw price
                      considered
                  max_price:
                    type: string
                    title: >-
                      MaxPrice refers to the largest individual raw price
                      considered
                  median_price:
                    type: string
                    title: >-
                      MedianPrice refers to the median individual raw price
                      considered
                title: >-
                  MetadataStatistics refers to the metadata summary statistics
                  of the

                  historical sample considered
              raw_history:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: int64
                    price:
                      type: string
                    quantity:
                      type: string
            description: |-
              QueryMarketVolatilityResponse is the response type for the
              Query/MarketVolatility RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
        - name: trade_history_options.trade_grouping_sec
          description: TradeGroupingSec of 0 means use the chain's default grouping.
          in: query
          required: false
          type: string
          format: uint64
        - name: trade_history_options.max_age
          description: >-
            MaxAge restricts the trade records oldest age in seconds from the
            current

            block time to consider. A value of 0 means use all the records
            present on

            the chain.
          in: query
          required: false
          type: string
          format: uint64
        - name: trade_history_options.include_raw_history
          description: |-
            If IncludeRawHistory is true, the raw underlying data used for the
            computation is included in the response.
          in: query
          required: false
          type: boolean
        - name: trade_history_options.include_metadata
          description: >-
            If IncludeMetadata is true, metadata on the computation is included
            in the

            response.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /injective/exchange/v1beta1/mito_vault_infos:
    get:
      summary: Retrieves market making pool info
      operationId: MitoVaultInfos
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              master_addresses:
                type: array
                items:
                  type: string
              derivative_addresses:
                type: array
                items:
                  type: string
              spot_addresses:
                type: array
                items:
                  type: string
              cw20_addresses:
                type: array
                items:
                  type: string
            description: >-
              MitoVaultInfosResponse is the response type for the
              Query/MitoVaultInfos RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/module_state:
    get:
      summary: Retrieves the entire exchange module's state
      operationId: ExchangeModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      spot_market_instant_listing_fee:
                        title: >-
                          spot_market_instant_listing_fee defines the expedited
                          fee in INJ required

                          to create a spot market by bypassing governance
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      derivative_market_instant_listing_fee:
                        title: >-
                          derivative_market_instant_listing_fee defines the
                          expedited fee in INJ

                          required to create a derivative market by bypassing
                          governance
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      default_spot_maker_fee_rate:
                        type: string
                        title: >-
                          default_spot_maker_fee defines the default exchange
                          trade fee for makers on

                          a spot market
                      default_spot_taker_fee_rate:
                        type: string
                        title: >-
                          default_spot_taker_fee_rate defines the default
                          exchange trade fee rate for

                          takers on a new spot market
                      default_derivative_maker_fee_rate:
                        type: string
                        title: >-
                          default_derivative_maker_fee defines the default
                          exchange trade fee for

                          makers on a new derivative market
                      default_derivative_taker_fee_rate:
                        type: string
                        title: >-
                          default_derivative_taker_fee defines the default
                          exchange trade fee for

                          takers on a new derivative market
                      default_initial_margin_ratio:
                        type: string
                        title: >-
                          default_initial_margin_ratio defines the default
                          initial margin ratio on a

                          new derivative market
                      default_maintenance_margin_ratio:
                        type: string
                        title: >-
                          default_maintenance_margin_ratio defines the default
                          maintenance margin

                          ratio on a new derivative market
                      default_funding_interval:
                        type: string
                        format: int64
                        title: >-
                          default_funding_interval defines the default funding
                          interval on a

                          derivative market
                      funding_multiple:
                        type: string
                        format: int64
                        title: >-
                          funding_multiple defines the timestamp multiple that
                          the funding timestamp

                          should be a multiple of
                      relayer_fee_share_rate:
                        type: string
                        title: >-
                          relayer_fee_share_rate defines the trade fee share
                          percentage that goes to

                          relayers
                      default_hourly_funding_rate_cap:
                        type: string
                        title: >-
                          default_hourly_funding_rate_cap defines the default
                          maximum absolute value

                          of the hourly funding rate
                      default_hourly_interest_rate:
                        type: string
                        title: hourly_interest_rate defines the hourly interest rate
                      max_derivative_order_side_count:
                        type: integer
                        format: int64
                        title: >-
                          max_derivative_order_side_count defines the maximum
                          number of derivative

                          active orders a subaccount can have for a given
                          orderbook side
                      inj_reward_staked_requirement_threshold:
                        type: string
                        title: >-
                          inj_reward_staked_requirement_threshold defines the
                          threshold on INJ

                          rewards after which one also needs staked INJ to
                          receive more
                      trading_rewards_vesting_duration:
                        type: string
                        format: int64
                        title: >-
                          the trading_rewards_vesting_duration defines the
                          vesting times for trading

                          rewards
                      liquidator_reward_share_rate:
                        type: string
                        title: >-
                          liquidator_reward_share_rate defines the ratio of the
                          split of the surplus

                          collateral that goes to the liquidator
                      binary_options_market_instant_listing_fee:
                        title: >-
                          binary_options_market_instant_listing_fee defines the
                          expedited fee in INJ

                          required to create a derivative market by bypassing
                          governance
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      atomic_market_order_access_level:
                        title: >-
                          atomic_market_order_access_level defines the required
                          access permissions

                          for executing atomic market orders
                        type: string
                        enum:
                          - Nobody
                          - BeginBlockerSmartContractsOnly
                          - SmartContractsOnly
                          - Everyone
                        default: Nobody
                      spot_atomic_market_order_fee_multiplier:
                        type: string
                        title: >-
                          spot_atomic_market_order_fee_multiplier defines the
                          default multiplier for

                          executing atomic market orders in spot markets
                      derivative_atomic_market_order_fee_multiplier:
                        type: string
                        title: >-
                          derivative_atomic_market_order_fee_multiplier defines
                          the default

                          multiplier for executing atomic market orders in
                          derivative markets
                      binary_options_atomic_market_order_fee_multiplier:
                        type: string
                        title: >-
                          binary_options_atomic_market_order_fee_multiplier
                          defines the default

                          multiplier for executing atomic market orders in
                          binary markets
                      minimal_protocol_fee_rate:
                        type: string
                        title: >-
                          minimal_protocol_fee_rate defines the minimal protocol
                          fee rate
                      is_instant_derivative_market_launch_enabled:
                        type: boolean
                        title: >-
                          is_instant_derivative_market_launch_enabled defines
                          whether instant

                          derivative market launch is enabled
                      post_only_mode_height_threshold:
                        type: string
                        format: int64
                    description: params defines all the parameters of related to exchange.
                  spot_markets:
                    type: array
                    items:
                      type: object
                      properties:
                        ticker:
                          type: string
                          description: >-
                            A name of the pair in format AAA/BBB, where AAA is
                            base asset, BBB is quote

                            asset.
                        base_denom:
                          type: string
                          title: Coin denom used for the base asset
                        quote_denom:
                          type: string
                          title: Coin used for the quote asset
                        maker_fee_rate:
                          type: string
                          title: >-
                            maker_fee_rate defines the fee percentage makers pay
                            when trading
                        taker_fee_rate:
                          type: string
                          title: >-
                            taker_fee_rate defines the fee percentage takers pay
                            when trading
                        relayer_fee_share_rate:
                          type: string
                          title: >-
                            relayer_fee_share_rate defines the percentage of the
                            transaction fee shared

                            with the relayer in a derivative market
                        market_id:
                          type: string
                          description: Unique market ID.
                        status:
                          title: Status of the market
                          type: string
                          enum:
                            - Unspecified
                            - Active
                            - Paused
                            - Demolished
                            - Expired
                          default: Unspecified
                        min_price_tick_size:
                          type: string
                          title: >-
                            min_price_tick_size defines the minimum tick size
                            that the price required

                            for orders in the market
                        min_quantity_tick_size:
                          type: string
                          title: >-
                            min_quantity_tick_size defines the minimum tick size
                            of the quantity

                            required for orders in the market
                      description: An object describing trade pair of two assets.
                    title: >-
                      spot_markets is an array containing the genesis trade
                      pairs
                  derivative_markets:
                    type: array
                    items:
                      type: object
                      properties:
                        ticker:
                          type: string
                          description: Ticker for the derivative contract.
                        oracle_base:
                          type: string
                          title: Oracle base currency
                        oracle_quote:
                          type: string
                          title: Oracle quote currency
                        oracle_type:
                          title: Oracle type
                          type: string
                          enum:
                            - Unspecified
                            - Band
                            - PriceFeed
                            - Coinbase
                            - Chainlink
                            - Razor
                            - Dia
                            - API3
                            - Uma
                            - Pyth
                            - BandIBC
                            - Provider
                          default: Unspecified
                        oracle_scale_factor:
                          type: integer
                          format: int64
                          description: Scale factor for oracle prices.
                        quote_denom:
                          type: string
                          title: >-
                            Address of the quote currency denomination for the
                            derivative contract
                        market_id:
                          type: string
                          description: Unique market ID.
                        initial_margin_ratio:
                          type: string
                          title: >-
                            initial_margin_ratio defines the initial margin
                            ratio of a derivative

                            market
                        maintenance_margin_ratio:
                          type: string
                          title: >-
                            maintenance_margin_ratio defines the maintenance
                            margin ratio of a

                            derivative market
                        maker_fee_rate:
                          type: string
                          title: >-
                            maker_fee_rate defines the maker fee rate of a
                            derivative market
                        taker_fee_rate:
                          type: string
                          title: >-
                            taker_fee_rate defines the taker fee rate of a
                            derivative market
                        relayer_fee_share_rate:
                          type: string
                          title: >-
                            relayer_fee_share_rate defines the percentage of the
                            transaction fee shared

                            with the relayer in a derivative market
                        isPerpetual:
                          type: boolean
                          title: >-
                            true if the market is a perpetual market. false if
                            the market is an expiry

                            futures market
                        status:
                          title: Status of the market
                          type: string
                          enum:
                            - Unspecified
                            - Active
                            - Paused
                            - Demolished
                            - Expired
                          default: Unspecified
                        min_price_tick_size:
                          type: string
                          title: >-
                            min_price_tick_size defines the minimum tick size
                            that the price and margin

                            required for orders in the market
                        min_quantity_tick_size:
                          type: string
                          title: >-
                            min_quantity_tick_size defines the minimum tick size
                            of the quantity

                            required for orders in the market
                      description: >-
                        An object describing a derivative market in the
                        Injective Futures Protocol.
                    title: >-
                      derivative_markets is an array containing the genesis
                      derivative markets
                  spot_orderbook:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        isBuySide:
                          type: boolean
                        orders:
                          type: array
                          items:
                            type: object
                            properties:
                              order_info:
                                title: >-
                                  order_info contains the information of the
                                  order
                                type: object
                                properties:
                                  subaccount_id:
                                    type: string
                                    title: >-
                                      bytes32 subaccount ID that created the
                                      order
                                  fee_recipient:
                                    type: string
                                    title: >-
                                      address fee_recipient address that will
                                      receive fees for the order
                                  price:
                                    type: string
                                    title: price of the order
                                  quantity:
                                    type: string
                                    title: quantity of the order
                                  cid:
                                    type: string
                              order_type:
                                title: order types
                                type: string
                                enum:
                                  - UNSPECIFIED
                                  - BUY
                                  - SELL
                                  - STOP_BUY
                                  - STOP_SELL
                                  - TAKE_BUY
                                  - TAKE_SELL
                                  - BUY_PO
                                  - SELL_PO
                                  - BUY_ATOMIC
                                  - SELL_ATOMIC
                                default: UNSPECIFIED
                              fillable:
                                type: string
                                title: the amount of the quantity remaining fillable
                              trigger_price:
                                type: string
                                title: >-
                                  trigger_price is the trigger price used by
                                  stop/take orders
                              order_hash:
                                type: string
                                format: byte
                            description: A valid Spot limit order with Metadata.
                      title: Spot Exchange Limit Orderbook
                    description: >-
                      spot_orderbook defines the spot exchange limit orderbook
                      active at genesis.
                  derivative_orderbook:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        isBuySide:
                          type: boolean
                        orders:
                          type: array
                          items:
                            type: object
                            properties:
                              order_info:
                                title: >-
                                  order_info contains the information of the
                                  order
                                type: object
                                properties:
                                  subaccount_id:
                                    type: string
                                    title: >-
                                      bytes32 subaccount ID that created the
                                      order
                                  fee_recipient:
                                    type: string
                                    title: >-
                                      address fee_recipient address that will
                                      receive fees for the order
                                  price:
                                    type: string
                                    title: price of the order
                                  quantity:
                                    type: string
                                    title: quantity of the order
                                  cid:
                                    type: string
                              order_type:
                                title: order types
                                type: string
                                enum:
                                  - UNSPECIFIED
                                  - BUY
                                  - SELL
                                  - STOP_BUY
                                  - STOP_SELL
                                  - TAKE_BUY
                                  - TAKE_SELL
                                  - BUY_PO
                                  - SELL_PO
                                  - BUY_ATOMIC
                                  - SELL_ATOMIC
                                default: UNSPECIFIED
                              margin:
                                type: string
                                title: margin is the margin used by the limit order
                              fillable:
                                type: string
                                title: the amount of the quantity remaining fillable
                              trigger_price:
                                type: string
                                title: >-
                                  trigger_price is the trigger price used by
                                  stop/take orders
                              order_hash:
                                type: string
                                format: byte
                            description: A valid Derivative limit order with Metadata.
                      title: Derivative Exchange Limit Orderbook
                    description: >-
                      derivative_orderbook defines the derivative exchange limit
                      orderbook active

                      at genesis.
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        subaccount_id:
                          type: string
                        denom:
                          type: string
                        deposits:
                          type: object
                          properties:
                            available_balance:
                              type: string
                            total_balance:
                              type: string
                          title: A subaccount's deposit for a given base currency
                    description: >-
                      balances defines the exchange users balances active at
                      genesis.
                  positions:
                    type: array
                    items:
                      type: object
                      properties:
                        subaccount_id:
                          type: string
                        market_id:
                          type: string
                        position:
                          type: object
                          properties:
                            isLong:
                              type: boolean
                            quantity:
                              type: string
                            entry_price:
                              type: string
                            margin:
                              type: string
                            cumulative_funding_entry:
                              type: string
                    title: >-
                      positions defines the exchange derivative positions at
                      genesis
                  subaccount_trade_nonces:
                    type: array
                    items:
                      type: object
                      properties:
                        subaccount_id:
                          type: string
                        subaccount_trade_nonce:
                          type: object
                          properties:
                            nonce:
                              type: integer
                              format: int64
                    title: >-
                      subaccount_trade_nonces defines the subaccount trade
                      nonces for the

                      subaccounts at genesis
                  expiry_futures_market_info_state:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        market_info:
                          type: object
                          properties:
                            market_id:
                              type: string
                              description: market ID.
                            expiration_timestamp:
                              type: string
                              format: int64
                              description: >-
                                expiration_timestamp defines the expiration time
                                for a time expiry futures

                                market.
                            twap_start_timestamp:
                              type: string
                              format: int64
                              title: >-
                                expiration_twap_start_timestamp defines the
                                start time of the TWAP

                                calculation window
                            expiration_twap_start_price_cumulative:
                              type: string
                              title: >-
                                expiration_twap_start_price_cumulative defines
                                the cumulative price for the

                                start of the TWAP window
                            settlement_price:
                              type: string
                              description: >-
                                settlement_price defines the settlement price
                                for a time expiry futures

                                market.
                    title: >-
                      expiry_futures_market_info defines the market info for the
                      expiry futures

                      markets at genesis
                  perpetual_market_info:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                          description: market ID.
                        hourly_funding_rate_cap:
                          type: string
                          title: >-
                            hourly_funding_rate_cap defines the maximum absolute
                            value of the hourly

                            funding rate
                        hourly_interest_rate:
                          type: string
                          title: >-
                            hourly_interest_rate defines the hourly interest
                            rate
                        next_funding_timestamp:
                          type: string
                          format: int64
                          title: >-
                            next_funding_timestamp defines the next funding
                            timestamp in seconds of a

                            perpetual market
                        funding_interval:
                          type: string
                          format: int64
                          description: >-
                            funding_interval defines the next funding interval
                            in seconds of a

                            perpetual market.
                    title: >-
                      perpetual_market_info defines the market info for the
                      perpetual derivative

                      markets at genesis
                  perpetual_market_funding_state:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        funding:
                          type: object
                          properties:
                            cumulative_funding:
                              type: string
                              description: >-
                                cumulative_funding defines the cumulative
                                funding of a perpetual market.
                            cumulative_price:
                              type: string
                              title: >-
                                cumulative_price defines the cumulative price
                                for the current hour up to

                                the last timestamp
                            last_timestamp:
                              type: string
                              format: int64
                    title: >-
                      perpetual_market_funding_state defines the funding state
                      for the perpetual

                      derivative markets at genesis
                  derivative_market_settlement_scheduled:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                          description: market ID.
                        settlement_price:
                          type: string
                          title: settlement_price defines the settlement price
                    title: >-
                      derivative_market_settlement_scheduled defines the
                      scheduled markets for

                      settlement at genesis
                  is_spot_exchange_enabled:
                    type: boolean
                    title: sets spot markets as enabled
                  is_derivatives_exchange_enabled:
                    type: boolean
                    title: sets derivative markets as enabled
                  trading_reward_campaign_info:
                    title: the current trading reward campaign info
                    type: object
                    properties:
                      campaign_duration_seconds:
                        type: string
                        format: int64
                        title: number of seconds of the duration of each campaign
                      quote_denoms:
                        type: array
                        items:
                          type: string
                        title: >-
                          the trading fee quote denoms which will be counted for
                          the rewards
                      trading_reward_boost_info:
                        title: the optional boost info for markets
                        type: object
                        properties:
                          boosted_spot_market_ids:
                            type: array
                            items:
                              type: string
                          spot_market_multipliers:
                            type: array
                            items:
                              type: object
                              properties:
                                maker_points_multiplier:
                                  type: string
                                taker_points_multiplier:
                                  type: string
                          boosted_derivative_market_ids:
                            type: array
                            items:
                              type: string
                          derivative_market_multipliers:
                            type: array
                            items:
                              type: object
                              properties:
                                maker_points_multiplier:
                                  type: string
                                taker_points_multiplier:
                                  type: string
                      disqualified_market_ids:
                        type: array
                        items:
                          type: string
                        title: >-
                          the marketIDs which are disqualified from being
                          rewarded
                  trading_reward_pool_campaign_schedule:
                    type: array
                    items:
                      type: object
                      properties:
                        start_timestamp:
                          type: string
                          format: int64
                        max_campaign_rewards:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements
                              the custom method

                              signatures required by gogoproto.
                          title: >-
                            max_campaign_rewards are the maximum reward amounts
                            to be disbursed at the

                            end of the campaign
                    title: the current and upcoming trading reward campaign pools
                  trading_reward_campaign_account_points:
                    type: array
                    items:
                      type: object
                      properties:
                        account:
                          type: string
                        points:
                          type: string
                    title: the current trading reward account points
                  fee_discount_schedule:
                    type: object
                    properties:
                      bucket_count:
                        type: string
                        format: uint64
                      bucket_duration:
                        type: string
                        format: int64
                      quote_denoms:
                        type: array
                        items:
                          type: string
                        title: >-
                          the trading fee quote denoms which will be counted for
                          the fee paid

                          contribution
                      tier_infos:
                        type: array
                        items:
                          type: object
                          properties:
                            maker_discount_rate:
                              type: string
                            taker_discount_rate:
                              type: string
                            staked_amount:
                              type: string
                            volume:
                              type: string
                        title: the fee discount tiers
                      disqualified_market_ids:
                        type: array
                        items:
                          type: string
                        title: >-
                          the marketIDs which are disqualified from contributing
                          to the fee paid

                          amount
                    title: the fee discount schedule
                  fee_discount_account_tier_ttl:
                    type: array
                    items:
                      type: object
                      properties:
                        account:
                          type: string
                        tier_ttl:
                          type: object
                          properties:
                            tier:
                              type: string
                              format: uint64
                            ttl_timestamp:
                              type: string
                              format: int64
                    title: the cached fee discount account tiers with TTL
                  fee_discount_bucket_volume_accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        bucket_start_timestamp:
                          type: string
                          format: int64
                        account_volume:
                          type: array
                          items:
                            type: object
                            properties:
                              account:
                                type: string
                              volume:
                                type: string
                    title: the fee discount paid by accounts in all buckets
                  is_first_fee_cycle_finished:
                    type: boolean
                    title: sets the first fee cycle as finished
                  pending_trading_reward_pool_campaign_schedule:
                    type: array
                    items:
                      type: object
                      properties:
                        start_timestamp:
                          type: string
                          format: int64
                        max_campaign_rewards:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements
                              the custom method

                              signatures required by gogoproto.
                          title: >-
                            max_campaign_rewards are the maximum reward amounts
                            to be disbursed at the

                            end of the campaign
                    title: >-
                      the current and upcoming trading reward campaign pending
                      pools
                  pending_trading_reward_campaign_account_points:
                    type: array
                    items:
                      type: object
                      properties:
                        reward_pool_start_timestamp:
                          type: string
                          format: int64
                        account_points:
                          type: array
                          items:
                            type: object
                            properties:
                              account:
                                type: string
                              points:
                                type: string
                    title: the pending trading reward account points
                  rewards_opt_out_addresses:
                    type: array
                    items:
                      type: string
                    title: the addresses opting out of trading rewards
                  historical_trade_records:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        latest_trade_records:
                          type: array
                          items:
                            type: object
                            properties:
                              timestamp:
                                type: string
                                format: int64
                              price:
                                type: string
                              quantity:
                                type: string
                  binary_options_markets:
                    type: array
                    items:
                      type: object
                      properties:
                        ticker:
                          type: string
                          description: Ticker for the derivative contract.
                        oracle_symbol:
                          type: string
                          title: Oracle symbol
                        oracle_provider:
                          type: string
                          title: Oracle Provider
                        oracle_type:
                          title: Oracle type
                          type: string
                          enum:
                            - Unspecified
                            - Band
                            - PriceFeed
                            - Coinbase
                            - Chainlink
                            - Razor
                            - Dia
                            - API3
                            - Uma
                            - Pyth
                            - BandIBC
                            - Provider
                          default: Unspecified
                        oracle_scale_factor:
                          type: integer
                          format: int64
                          description: Scale factor for oracle prices.
                        expiration_timestamp:
                          type: string
                          format: int64
                          title: expiration timestamp
                        settlement_timestamp:
                          type: string
                          format: int64
                          title: expiration timestamp
                        admin:
                          type: string
                          title: admin of the market
                        quote_denom:
                          type: string
                          title: >-
                            Address of the quote currency denomination for the
                            binary options contract
                        market_id:
                          type: string
                          description: Unique market ID.
                        maker_fee_rate:
                          type: string
                          title: >-
                            maker_fee_rate defines the maker fee rate of a
                            binary options market
                        taker_fee_rate:
                          type: string
                          title: >-
                            taker_fee_rate defines the taker fee rate of a
                            derivative market
                        relayer_fee_share_rate:
                          type: string
                          title: >-
                            relayer_fee_share_rate defines the percentage of the
                            transaction fee shared

                            with the relayer in a derivative market
                        status:
                          title: Status of the market
                          type: string
                          enum:
                            - Unspecified
                            - Active
                            - Paused
                            - Demolished
                            - Expired
                          default: Unspecified
                        min_price_tick_size:
                          type: string
                          title: >-
                            min_price_tick_size defines the minimum tick size
                            that the price and margin

                            required for orders in the market
                        min_quantity_tick_size:
                          type: string
                          title: >-
                            min_quantity_tick_size defines the minimum tick size
                            of the quantity

                            required for orders in the market
                        settlement_price:
                          type: string
                      description: >-
                        An object describing a binary options market in
                        Injective Protocol.
                    title: >-
                      binary_options_markets is an array containing the genesis
                      binary options

                      markets
                  binary_options_market_ids_scheduled_for_settlement:
                    type: array
                    items:
                      type: string
                    title: >-
                      binary_options_markets_scheduled_for_settlement contains
                      the marketIDs of

                      binary options markets scheduled for next-block settlement
                  spot_market_ids_scheduled_to_force_close:
                    type: array
                    items:
                      type: string
                    title: >-
                      spot_market_ids_scheduled_to_force_close defines the
                      scheduled markets for

                      forced closings at genesis
                  denom_decimals:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        decimals:
                          type: string
                          format: uint64
                    description: >-
                      denom_decimals defines the denom decimals for the
                      exchange.
                  conditional_derivative_orderbooks:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        limit_buy_orders:
                          type: array
                          items:
                            type: object
                            properties:
                              order_info:
                                title: >-
                                  order_info contains the information of the
                                  order
                                type: object
                                properties:
                                  subaccount_id:
                                    type: string
                                    title: >-
                                      bytes32 subaccount ID that created the
                                      order
                                  fee_recipient:
                                    type: string
                                    title: >-
                                      address fee_recipient address that will
                                      receive fees for the order
                                  price:
                                    type: string
                                    title: price of the order
                                  quantity:
                                    type: string
                                    title: quantity of the order
                                  cid:
                                    type: string
                              order_type:
                                title: order types
                                type: string
                                enum:
                                  - UNSPECIFIED
                                  - BUY
                                  - SELL
                                  - STOP_BUY
                                  - STOP_SELL
                                  - TAKE_BUY
                                  - TAKE_SELL
                                  - BUY_PO
                                  - SELL_PO
                                  - BUY_ATOMIC
                                  - SELL_ATOMIC
                                default: UNSPECIFIED
                              margin:
                                type: string
                                title: margin is the margin used by the limit order
                              fillable:
                                type: string
                                title: the amount of the quantity remaining fillable
                              trigger_price:
                                type: string
                                title: >-
                                  trigger_price is the trigger price used by
                                  stop/take orders
                              order_hash:
                                type: string
                                format: byte
                            description: A valid Derivative limit order with Metadata.
                        market_buy_orders:
                          type: array
                          items:
                            type: object
                            properties:
                              order_info:
                                title: >-
                                  order_info contains the information of the
                                  order
                                type: object
                                properties:
                                  subaccount_id:
                                    type: string
                                    title: >-
                                      bytes32 subaccount ID that created the
                                      order
                                  fee_recipient:
                                    type: string
                                    title: >-
                                      address fee_recipient address that will
                                      receive fees for the order
                                  price:
                                    type: string
                                    title: price of the order
                                  quantity:
                                    type: string
                                    title: quantity of the order
                                  cid:
                                    type: string
                              order_type:
                                title: order types
                                type: string
                                enum:
                                  - UNSPECIFIED
                                  - BUY
                                  - SELL
                                  - STOP_BUY
                                  - STOP_SELL
                                  - TAKE_BUY
                                  - TAKE_SELL
                                  - BUY_PO
                                  - SELL_PO
                                  - BUY_ATOMIC
                                  - SELL_ATOMIC
                                default: UNSPECIFIED
                              margin:
                                type: string
                              margin_hold:
                                type: string
                              trigger_price:
                                type: string
                                title: >-
                                  trigger_price is the trigger price used by
                                  stop/take orders
                              order_hash:
                                type: string
                                format: byte
                            description: A valid Derivative market order with Metadata.
                        limit_sell_orders:
                          type: array
                          items:
                            type: object
                            properties:
                              order_info:
                                title: >-
                                  order_info contains the information of the
                                  order
                                type: object
                                properties:
                                  subaccount_id:
                                    type: string
                                    title: >-
                                      bytes32 subaccount ID that created the
                                      order
                                  fee_recipient:
                                    type: string
                                    title: >-
                                      address fee_recipient address that will
                                      receive fees for the order
                                  price:
                                    type: string
                                    title: price of the order
                                  quantity:
                                    type: string
                                    title: quantity of the order
                                  cid:
                                    type: string
                              order_type:
                                title: order types
                                type: string
                                enum:
                                  - UNSPECIFIED
                                  - BUY
                                  - SELL
                                  - STOP_BUY
                                  - STOP_SELL
                                  - TAKE_BUY
                                  - TAKE_SELL
                                  - BUY_PO
                                  - SELL_PO
                                  - BUY_ATOMIC
                                  - SELL_ATOMIC
                                default: UNSPECIFIED
                              margin:
                                type: string
                                title: margin is the margin used by the limit order
                              fillable:
                                type: string
                                title: the amount of the quantity remaining fillable
                              trigger_price:
                                type: string
                                title: >-
                                  trigger_price is the trigger price used by
                                  stop/take orders
                              order_hash:
                                type: string
                                format: byte
                            description: A valid Derivative limit order with Metadata.
                        market_sell_orders:
                          type: array
                          items:
                            type: object
                            properties:
                              order_info:
                                title: >-
                                  order_info contains the information of the
                                  order
                                type: object
                                properties:
                                  subaccount_id:
                                    type: string
                                    title: >-
                                      bytes32 subaccount ID that created the
                                      order
                                  fee_recipient:
                                    type: string
                                    title: >-
                                      address fee_recipient address that will
                                      receive fees for the order
                                  price:
                                    type: string
                                    title: price of the order
                                  quantity:
                                    type: string
                                    title: quantity of the order
                                  cid:
                                    type: string
                              order_type:
                                title: order types
                                type: string
                                enum:
                                  - UNSPECIFIED
                                  - BUY
                                  - SELL
                                  - STOP_BUY
                                  - STOP_SELL
                                  - TAKE_BUY
                                  - TAKE_SELL
                                  - BUY_PO
                                  - SELL_PO
                                  - BUY_ATOMIC
                                  - SELL_ATOMIC
                                default: UNSPECIFIED
                              margin:
                                type: string
                              margin_hold:
                                type: string
                              trigger_price:
                                type: string
                                title: >-
                                  trigger_price is the trigger price used by
                                  stop/take orders
                              order_hash:
                                type: string
                                format: byte
                            description: A valid Derivative market order with Metadata.
                      title: Orderbook containing limit & market conditional orders
                    title: >-
                      conditional_derivative_orderbook contains conditional
                      orderbooks for all

                      markets (both lmit and market conditional orders)
                  market_fee_multipliers:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        fee_multiplier:
                          type: string
                    title: >-
                      market_fee_multipliers contains any non-default atomic
                      order fee

                      multipliers
                  orderbook_sequences:
                    type: array
                    items:
                      type: object
                      properties:
                        sequence:
                          type: string
                          format: uint64
                        market_id:
                          type: string
                  subaccount_volumes:
                    type: array
                    items:
                      type: object
                      properties:
                        subaccount_id:
                          type: string
                        market_volumes:
                          type: array
                          items:
                            type: object
                            properties:
                              market_id:
                                type: string
                              volume:
                                type: object
                                properties:
                                  maker_volume:
                                    type: string
                                  taker_volume:
                                    type: string
                  market_volumes:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        volume:
                          type: object
                          properties:
                            maker_volume:
                              type: string
                            taker_volume:
                              type: string
                description: GenesisState defines the exchange module's genesis state.
            description: |-
              QueryModuleStateResponse is the response type for the
              Query/ExchangeModuleState RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/opted_out_of_rewards_accounts:
    get:
      summary: Retrieves all accounts opted out of rewards
      operationId: OptedOutOfRewardsAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: string
            description: >-
              QueryRegisteredDMMsResponse is the response type for the
              Query/RegisteredDMMs

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/order_metadata/{subaccount_id}:
    get:
      summary: Retrieves subaccount's order metadata
      operationId: SubaccountOrderMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadata:
                type: array
                items:
                  type: object
                  properties:
                    metadata:
                      type: object
                      properties:
                        vanilla_limit_order_count:
                          type: integer
                          format: int64
                        reduce_only_limit_order_count:
                          type: integer
                          format: int64
                        aggregate_reduce_only_quantity:
                          type: string
                          description: >-
                            AggregateReduceOnlyQuantity is the aggregate
                            fillable quantity of the

                            subaccount's reduce-only limit orders in the given
                            direction.
                        aggregate_vanilla_quantity:
                          type: string
                          description: >-
                            AggregateVanillaQuantity is the aggregate fillable
                            quantity of the

                            subaccount's vanilla limit orders in the given
                            direction.
                        vanilla_conditional_order_count:
                          type: integer
                          format: int64
                        reduce_only_conditional_order_count:
                          type: integer
                          format: int64
                    market_id:
                      type: string
                    isBuy:
                      type: boolean
            description: |-
              QuerySubaccountOrderMetadataResponse is the response type for the
              Query/SubaccountOrderMetadata RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/orders/{subaccount_id}:
    get:
      summary: Retrieves subaccount's orders
      operationId: SubaccountOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              buy_orders:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        price:
                          type: string
                          title: price of the order
                        quantity:
                          type: string
                          title: the amount of the quantity remaining fillable
                        isReduceOnly:
                          type: boolean
                    order_hash:
                      type: string
                      format: byte
              sell_orders:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        price:
                          type: string
                          title: price of the order
                        quantity:
                          type: string
                          title: the amount of the quantity remaining fillable
                        isReduceOnly:
                          type: boolean
                    order_hash:
                      type: string
                      format: byte
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: path
          required: true
          type: string
        - name: market_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/pending_trade_reward_points:
    get:
      summary: Retrieves the pending account and total trade rewards points
      operationId: PendingTradeRewardPoints
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account_trade_reward_points:
                type: array
                items:
                  type: string
            description: |-
              QueryTradeRewardPointsResponse is the response type for the
              Query/TradeRewardPoints RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: accounts
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: pending_pool_timestamp
          in: query
          required: false
          type: string
          format: int64
      tags:
        - Query
  /injective/exchange/v1beta1/perpetual_market_funding/{market_id}:
    get:
      summary: Retrieves perpetual market funding
      operationId: PerpetualMarketFunding
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  cumulative_funding:
                    type: string
                    description: >-
                      cumulative_funding defines the cumulative funding of a
                      perpetual market.
                  cumulative_price:
                    type: string
                    title: >-
                      cumulative_price defines the cumulative price for the
                      current hour up to

                      the last timestamp
                  last_timestamp:
                    type: string
                    format: int64
            description: |-
              QueryPerpetualMarketFundingResponse is the response type for the
              Query/PerpetualMarketFunding RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/perpetual_market_info/{market_id}:
    get:
      summary: Retrieves perpetual market info
      operationId: PerpetualMarketInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              info:
                type: object
                properties:
                  market_id:
                    type: string
                    description: market ID.
                  hourly_funding_rate_cap:
                    type: string
                    title: >-
                      hourly_funding_rate_cap defines the maximum absolute value
                      of the hourly

                      funding rate
                  hourly_interest_rate:
                    type: string
                    title: hourly_interest_rate defines the hourly interest rate
                  next_funding_timestamp:
                    type: string
                    format: int64
                    title: >-
                      next_funding_timestamp defines the next funding timestamp
                      in seconds of a

                      perpetual market
                  funding_interval:
                    type: string
                    format: int64
                    description: >-
                      funding_interval defines the next funding interval in
                      seconds of a

                      perpetual market.
            description: |-
              QueryPerpetualMarketInfoResponse is the response type for the
              Query/PerpetualMarketInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/positions:
    get:
      summary: Retrieves the entire exchange module's positions
      operationId: Positions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: array
                items:
                  type: object
                  properties:
                    subaccount_id:
                      type: string
                    market_id:
                      type: string
                    position:
                      type: object
                      properties:
                        isLong:
                          type: boolean
                        quantity:
                          type: string
                        entry_price:
                          type: string
                        margin:
                          type: string
                        cumulative_funding_entry:
                          type: string
            description: >-
              QueryPositionsResponse is the response type for the
              Query/Positions RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/positions/{subaccount_id}:
    get:
      summary: Retrieves subaccount's positions
      operationId: SubaccountPositions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: array
                items:
                  type: object
                  properties:
                    subaccount_id:
                      type: string
                    market_id:
                      type: string
                    position:
                      type: object
                      properties:
                        isLong:
                          type: boolean
                        quantity:
                          type: string
                        entry_price:
                          type: string
                        margin:
                          type: string
                        cumulative_funding_entry:
                          type: string
            description: |-
              QuerySubaccountPositionsResponse is the response type for the
              Query/SubaccountPositions RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/positions/{subaccount_id}/{market_id}:
    get:
      summary: Retrieves subaccount's position in market
      operationId: SubaccountPositionInMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  isLong:
                    type: boolean
                  quantity:
                    type: string
                  entry_price:
                    type: string
                  margin:
                    type: string
                  cumulative_funding_entry:
                    type: string
            description: >-
              QuerySubaccountPositionInMarketResponse is the response type for
              the

              Query/SubaccountPositionInMarket RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subaccount_id
          in: path
          required: true
          type: string
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spot/full_market/{market_id}:
    get:
      summary: Retrieves a spot market with extra information.
      operationId: FullSpotMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                type: object
                properties:
                  market:
                    type: object
                    properties:
                      ticker:
                        type: string
                        description: >-
                          A name of the pair in format AAA/BBB, where AAA is
                          base asset, BBB is quote

                          asset.
                      base_denom:
                        type: string
                        title: Coin denom used for the base asset
                      quote_denom:
                        type: string
                        title: Coin used for the quote asset
                      maker_fee_rate:
                        type: string
                        title: >-
                          maker_fee_rate defines the fee percentage makers pay
                          when trading
                      taker_fee_rate:
                        type: string
                        title: >-
                          taker_fee_rate defines the fee percentage takers pay
                          when trading
                      relayer_fee_share_rate:
                        type: string
                        title: >-
                          relayer_fee_share_rate defines the percentage of the
                          transaction fee shared

                          with the relayer in a derivative market
                      market_id:
                        type: string
                        description: Unique market ID.
                      status:
                        title: Status of the market
                        type: string
                        enum:
                          - Unspecified
                          - Active
                          - Paused
                          - Demolished
                          - Expired
                        default: Unspecified
                      min_price_tick_size:
                        type: string
                        title: >-
                          min_price_tick_size defines the minimum tick size that
                          the price required

                          for orders in the market
                      min_quantity_tick_size:
                        type: string
                        title: >-
                          min_quantity_tick_size defines the minimum tick size
                          of the quantity

                          required for orders in the market
                    description: An object describing trade pair of two assets.
                  mid_price_and_tob:
                    title: >-
                      mid_price_and_tob defines the mid price for this market
                      and the best ask

                      and bid orders
                    type: object
                    properties:
                      mid_price:
                        type: string
                        title: mid price of the market
                      best_buy_price:
                        type: string
                        title: best buy price of the market
                      best_sell_price:
                        type: string
                        title: best sell price of the market
            description: >-
              QuerySpotMarketResponse is the response type for the
              Query/SpotMarket RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: with_mid_price_and_tob
          description: >-
            Flag to return the markets mid price and top of the book buy and
            sell

            orders.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /injective/exchange/v1beta1/spot/full_markets:
    get:
      summary: Retrieves a list of spot markets with extra information.
      operationId: FullSpotMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    market:
                      type: object
                      properties:
                        ticker:
                          type: string
                          description: >-
                            A name of the pair in format AAA/BBB, where AAA is
                            base asset, BBB is quote

                            asset.
                        base_denom:
                          type: string
                          title: Coin denom used for the base asset
                        quote_denom:
                          type: string
                          title: Coin used for the quote asset
                        maker_fee_rate:
                          type: string
                          title: >-
                            maker_fee_rate defines the fee percentage makers pay
                            when trading
                        taker_fee_rate:
                          type: string
                          title: >-
                            taker_fee_rate defines the fee percentage takers pay
                            when trading
                        relayer_fee_share_rate:
                          type: string
                          title: >-
                            relayer_fee_share_rate defines the percentage of the
                            transaction fee shared

                            with the relayer in a derivative market
                        market_id:
                          type: string
                          description: Unique market ID.
                        status:
                          title: Status of the market
                          type: string
                          enum:
                            - Unspecified
                            - Active
                            - Paused
                            - Demolished
                            - Expired
                          default: Unspecified
                        min_price_tick_size:
                          type: string
                          title: >-
                            min_price_tick_size defines the minimum tick size
                            that the price required

                            for orders in the market
                        min_quantity_tick_size:
                          type: string
                          title: >-
                            min_quantity_tick_size defines the minimum tick size
                            of the quantity

                            required for orders in the market
                      description: An object describing trade pair of two assets.
                    mid_price_and_tob:
                      title: >-
                        mid_price_and_tob defines the mid price for this market
                        and the best ask

                        and bid orders
                      type: object
                      properties:
                        mid_price:
                          type: string
                          title: mid price of the market
                        best_buy_price:
                          type: string
                          title: best buy price of the market
                        best_sell_price:
                          type: string
                          title: best sell price of the market
            description: |-
              QueryFullSpotMarketsResponse is the response type for the
              Query/FullSpotMarkets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: status
          description: >-
            Status of the market, for convenience it is set to string - not
            enum.
          in: query
          required: false
          type: string
        - name: market_ids
          description: Filter by market IDs.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: with_mid_price_and_tob
          description: >-
            Flag to return the markets mid price and top of the book buy and
            sell

            orders.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /injective/exchange/v1beta1/spot/markets:
    get:
      summary: Retrieves a list of spot markets.
      operationId: SpotMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    ticker:
                      type: string
                      description: >-
                        A name of the pair in format AAA/BBB, where AAA is base
                        asset, BBB is quote

                        asset.
                    base_denom:
                      type: string
                      title: Coin denom used for the base asset
                    quote_denom:
                      type: string
                      title: Coin used for the quote asset
                    maker_fee_rate:
                      type: string
                      title: >-
                        maker_fee_rate defines the fee percentage makers pay
                        when trading
                    taker_fee_rate:
                      type: string
                      title: >-
                        taker_fee_rate defines the fee percentage takers pay
                        when trading
                    relayer_fee_share_rate:
                      type: string
                      title: >-
                        relayer_fee_share_rate defines the percentage of the
                        transaction fee shared

                        with the relayer in a derivative market
                    market_id:
                      type: string
                      description: Unique market ID.
                    status:
                      title: Status of the market
                      type: string
                      enum:
                        - Unspecified
                        - Active
                        - Paused
                        - Demolished
                        - Expired
                      default: Unspecified
                    min_price_tick_size:
                      type: string
                      title: >-
                        min_price_tick_size defines the minimum tick size that
                        the price required

                        for orders in the market
                    min_quantity_tick_size:
                      type: string
                      title: >-
                        min_quantity_tick_size defines the minimum tick size of
                        the quantity

                        required for orders in the market
                  description: An object describing trade pair of two assets.
            description: >-
              QuerySpotMarketsResponse is the response type for the
              Query/SpotMarkets RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: status
          description: >-
            Status of the market, for convenience it is set to string - not
            enum.
          in: query
          required: false
          type: string
        - name: market_ids
          description: Filter by market IDs.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/spot/markets/{market_id}:
    get:
      summary: Retrieves a spot market by ticker
      operationId: SpotMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                type: object
                properties:
                  ticker:
                    type: string
                    description: >-
                      A name of the pair in format AAA/BBB, where AAA is base
                      asset, BBB is quote

                      asset.
                  base_denom:
                    type: string
                    title: Coin denom used for the base asset
                  quote_denom:
                    type: string
                    title: Coin used for the quote asset
                  maker_fee_rate:
                    type: string
                    title: >-
                      maker_fee_rate defines the fee percentage makers pay when
                      trading
                  taker_fee_rate:
                    type: string
                    title: >-
                      taker_fee_rate defines the fee percentage takers pay when
                      trading
                  relayer_fee_share_rate:
                    type: string
                    title: >-
                      relayer_fee_share_rate defines the percentage of the
                      transaction fee shared

                      with the relayer in a derivative market
                  market_id:
                    type: string
                    description: Unique market ID.
                  status:
                    title: Status of the market
                    type: string
                    enum:
                      - Unspecified
                      - Active
                      - Paused
                      - Demolished
                      - Expired
                    default: Unspecified
                  min_price_tick_size:
                    type: string
                    title: >-
                      min_price_tick_size defines the minimum tick size that the
                      price required

                      for orders in the market
                  min_quantity_tick_size:
                    type: string
                    title: >-
                      min_quantity_tick_size defines the minimum tick size of
                      the quantity

                      required for orders in the market
                description: An object describing trade pair of two assets.
            description: >-
              QuerySpotMarketResponse is the response type for the
              Query/SpotMarket RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spot/mid_price_and_tob/{market_id}:
    get:
      summary: Retrieves a spot market's mid-price
      operationId: SpotMidPriceAndTOB
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              mid_price:
                type: string
                title: mid price of the market
              best_buy_price:
                type: string
                title: best buy price of the market
              best_sell_price:
                type: string
                title: best sell price of the market
            description: |-
              QuerySpotMidPriceAndTOBResponse is the response type for the
              Query/SpotMidPriceAndTOB RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spot/orderbook/{market_id}:
    get:
      summary: Retrieves a spot market's orderbook by marketID
      operationId: SpotOrderbook
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              buys_price_level:
                type: array
                items:
                  type: object
                  properties:
                    p:
                      type: string
                      title: price
                    q:
                      type: string
                      title: quantity
              sells_price_level:
                type: array
                items:
                  type: object
                  properties:
                    p:
                      type: string
                      title: price
                    q:
                      type: string
                      title: quantity
            description: >-
              QuerySpotOrderbookResponse is the response type for the
              Query/SpotOrderbook

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: string
          format: uint64
        - name: order_side
          description: ' - Side_Unspecified: will return both'
          in: query
          required: false
          type: string
          enum:
            - Side_Unspecified
            - Buy
            - Sell
          default: Side_Unspecified
        - name: limit_cumulative_notional
          in: query
          required: false
          type: string
        - name: limit_cumulative_quantity
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spot/orders/{market_id}/account/{account_address}:
    get:
      summary: Retrieves all account address spot orders
      operationId: AccountAddressSpotOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QueryAccountAddressSpotOrdersResponse is the response type for the
              Query/AccountAddressSpotOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: account_address
          description: Account address of the trader
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spot/orders/{market_id}/{subaccount_id}:
    get:
      summary: Retrieves a trader's spot orders
      operationId: TraderSpotOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QueryTraderSpotOrdersResponse is the response type for the
              Query/TraderSpotOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: subaccount_id
          description: SubaccountID of the trader
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spot/orders_by_hashes/{market_id}/{subaccount_id}:
    get:
      summary: >-
        Retrieves spot orders corresponding to specified order hashes for a
        given

        subaccountID and marketID
      operationId: SpotOrdersByHashes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QuerySpotOrdersByHashesResponse is the response type for the
              Query/SpotOrdersByHashes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: subaccount_id
          description: SubaccountID of the trader
          in: path
          required: true
          type: string
        - name: order_hashes
          description: the order hashes.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/spot/transient_orders/{market_id}/{subaccount_id}:
    get:
      summary: Retrieves a trader's transient spot orders
      operationId: TraderSpotTransientOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: string
                      title: price of the order
                    quantity:
                      type: string
                      title: quantity of the order
                    fillable:
                      type: string
                      title: the amount of the quantity remaining fillable
                    isBuy:
                      type: boolean
                      title: true if the order is a buy
                    order_hash:
                      type: string
            description: |-
              QueryTraderSpotOrdersResponse is the response type for the
              Query/TraderSpotOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
        - name: subaccount_id
          description: SubaccountID of the trader
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/trade_reward_campaign:
    get:
      summary: Retrieves the trade reward campaign
      operationId: TradeRewardCampaign
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              trading_reward_campaign_info:
                type: object
                properties:
                  campaign_duration_seconds:
                    type: string
                    format: int64
                    title: number of seconds of the duration of each campaign
                  quote_denoms:
                    type: array
                    items:
                      type: string
                    title: >-
                      the trading fee quote denoms which will be counted for the
                      rewards
                  trading_reward_boost_info:
                    title: the optional boost info for markets
                    type: object
                    properties:
                      boosted_spot_market_ids:
                        type: array
                        items:
                          type: string
                      spot_market_multipliers:
                        type: array
                        items:
                          type: object
                          properties:
                            maker_points_multiplier:
                              type: string
                            taker_points_multiplier:
                              type: string
                      boosted_derivative_market_ids:
                        type: array
                        items:
                          type: string
                      derivative_market_multipliers:
                        type: array
                        items:
                          type: object
                          properties:
                            maker_points_multiplier:
                              type: string
                            taker_points_multiplier:
                              type: string
                  disqualified_market_ids:
                    type: array
                    items:
                      type: string
                    title: the marketIDs which are disqualified from being rewarded
              trading_reward_pool_campaign_schedule:
                type: array
                items:
                  type: object
                  properties:
                    start_timestamp:
                      type: string
                      format: int64
                    max_campaign_rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: >-
                        max_campaign_rewards are the maximum reward amounts to
                        be disbursed at the

                        end of the campaign
              total_trade_reward_points:
                type: string
              pending_trading_reward_pool_campaign_schedule:
                type: array
                items:
                  type: object
                  properties:
                    start_timestamp:
                      type: string
                      format: int64
                    max_campaign_rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: >-
                        max_campaign_rewards are the maximum reward amounts to
                        be disbursed at the

                        end of the campaign
              pending_total_trade_reward_points:
                type: array
                items:
                  type: string
            description: |-
              QueryTradeRewardCampaignResponse is the response type for the
              Query/TradeRewardCampaign RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/trade_reward_points:
    get:
      summary: Retrieves the account and total trade rewards points
      operationId: TradeRewardPoints
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account_trade_reward_points:
                type: array
                items:
                  type: string
            description: |-
              QueryTradeRewardPointsResponse is the response type for the
              Query/TradeRewardPoints RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: accounts
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: pending_pool_timestamp
          in: query
          required: false
          type: string
          format: int64
      tags:
        - Query
  /injective/exchange/v1beta1/vault_market_id/{vault_address}:
    get:
      summary: >-
        QueryMarketIDFromVault returns the market ID for a given vault
        subaccount

        ID
      operationId: QueryMarketIDFromVault
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market_id:
                type: string
            description: |-
              QueryMarketIDFromVaultResponse is the response type for the
              Query/QueryMarketIDFromVault RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: vault_address
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/wasmx/v1/module_state:
    get:
      summary: Retrieves the entire wasmx module's state
      operationId: WasmxModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    description: params defines all the parameters of related to wasmx.
                    type: object
                    properties:
                      is_execution_enabled:
                        type: boolean
                        description: >-
                          Set the status to active to indicate that contracts
                          can be executed in

                          begin blocker.
                      max_begin_block_total_gas:
                        type: string
                        format: uint64
                        description: >-
                          Maximum aggregate total gas to be used for the
                          contract executions in the

                          BeginBlocker.
                      max_contract_gas_limit:
                        type: string
                        format: uint64
                        description: >-
                          the maximum gas limit each individual contract can
                          consume in the

                          BeginBlocker.
                      min_gas_price:
                        type: string
                        format: uint64
                        description: >-
                          min_gas_price defines the minimum gas price the
                          contracts must pay to be

                          executed in the BeginBlocker.
                  registered_contracts:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        registered_contract:
                          type: object
                          properties:
                            gas_limit:
                              type: string
                              format: uint64
                              title: limit of gas per BB execution
                            gas_price:
                              type: string
                              format: uint64
                              title: >-
                                gas price that contract is willing to pay for
                                execution in BeginBlocker
                            is_executable:
                              type: boolean
                              title: is contract currently active
                            code_id:
                              type: string
                              format: uint64
                              title: >-
                                code_id that is allowed to be executed (to
                                prevent malicious updates) - if

                                nil/0 any code_id can be executed
                            admin_address:
                              type: string
                              title: >-
                                optional - admin addr that is allowed to update
                                contract data
                            granter_address:
                              type: string
                              title: |-
                                Optional: address of the contract granting fee
                                Must be set if fund_mode is GrantOnly
                            fund_mode:
                              title: funding mode
                              type: string
                              enum:
                                - Unspecified
                                - SelfFunded
                                - GrantOnly
                                - Dual
                              default: Unspecified
                    title: >-
                      registered_contracts is an array containing the genesis
                      registered

                      contracts
                description: GenesisState defines the wasmx module's genesis state.
            description: >-
              QueryModuleStateResponse is the response type for the
              Query/WasmxModuleState

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /injective/wasmx/v1/params:
    get:
      summary: Retrieves wasmx params
      operationId: WasmxParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  is_execution_enabled:
                    type: boolean
                    description: >-
                      Set the status to active to indicate that contracts can be
                      executed in

                      begin blocker.
                  max_begin_block_total_gas:
                    type: string
                    format: uint64
                    description: >-
                      Maximum aggregate total gas to be used for the contract
                      executions in the

                      BeginBlocker.
                  max_contract_gas_limit:
                    type: string
                    format: uint64
                    description: >-
                      the maximum gas limit each individual contract can consume
                      in the

                      BeginBlocker.
                  min_gas_price:
                    type: string
                    format: uint64
                    description: >-
                      min_gas_price defines the minimum gas price the contracts
                      must pay to be

                      executed in the BeginBlocker.
            description: >-
              QueryWasmxParamsRequest is the response type for the
              Query/WasmxParams RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /injective/wasmx/v1/registration_info/{contract_address}:
    get:
      summary: Retrieves contract registration info
      operationId: ContractRegistrationInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contract:
                type: object
                properties:
                  gas_limit:
                    type: string
                    format: uint64
                    title: limit of gas per BB execution
                  gas_price:
                    type: string
                    format: uint64
                    title: >-
                      gas price that contract is willing to pay for execution in
                      BeginBlocker
                  is_executable:
                    type: boolean
                    title: is contract currently active
                  code_id:
                    type: string
                    format: uint64
                    title: >-
                      code_id that is allowed to be executed (to prevent
                      malicious updates) - if

                      nil/0 any code_id can be executed
                  admin_address:
                    type: string
                    title: >-
                      optional - admin addr that is allowed to update contract
                      data
                  granter_address:
                    type: string
                    title: |-
                      Optional: address of the contract granting fee
                      Must be set if fund_mode is GrantOnly
                  fund_mode:
                    title: funding mode
                    type: string
                    enum:
                      - Unspecified
                      - SelfFunded
                      - GrantOnly
                      - Dual
                    default: Unspecified
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: contract_address
          in: path
          required: true
          type: string
      tags:
        - Query
  /chainlink/ocr/v1beta1/feed_config/{feed_id}:
    get:
      summary: Retrieves the OCR FeedConfig for a given FeedId
      operationId: FeedConfig
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              feed_config_info:
                type: object
                properties:
                  latest_config_digest:
                    type: string
                    format: byte
                  f:
                    type: integer
                    format: int64
                  'n':
                    type: integer
                    format: int64
                  config_count:
                    type: string
                    format: uint64
                    title: >-
                      config_count ordinal number of this config setting among
                      all config

                      settings
                  latest_config_block_number:
                    type: string
                    format: int64
              feed_config:
                type: object
                properties:
                  signers:
                    type: array
                    items:
                      type: string
                    title: >-
                      signers ith element is address ith oracle uses to sign a
                      report
                  transmitters:
                    type: array
                    items:
                      type: string
                    title: >-
                      transmitters ith element is address ith oracle uses to
                      transmit a report

                      via the transmit method
                  f:
                    type: integer
                    format: int64
                    title: >-
                      f maximum number of faulty/dishonest oracles the protocol
                      can tolerate

                      while still working correctly
                  onchain_config:
                    type: string
                    format: byte
                    description: >-
                      onchain_config serialized data with reporting plugin
                      params on chain.
                  offchain_config_version:
                    type: string
                    format: uint64
                    title: >-
                      offchain_config_version version of the serialization
                      format used for

                      "offchain_config" parameter
                  offchain_config:
                    type: string
                    format: byte
                    title: >-
                      offchain_config serialized data used by oracles to
                      configure their offchain

                      operation
                  module_params:
                    description: feed-specific params for the Cosmos module.
                    type: object
                    properties:
                      feed_id:
                        type: string
                        title: feed_id is an unique ID for the target of this config
                      min_answer:
                        type: string
                        title: lowest answer the median of a report is allowed to be
                      max_answer:
                        type: string
                        title: highest answer the median of a report is allowed to be
                      link_per_observation:
                        type: string
                        title: Fixed LINK reward for each observer
                      link_per_transmission:
                        type: string
                        title: Fixed LINK reward for transmitter
                      link_denom:
                        type: string
                        title: Native denom for LINK coin in the bank keeper
                      unique_reports:
                        type: boolean
                        title: Enables unique reports
                      description:
                        type: string
                        title: >-
                          short human-readable description of observable this
                          feed's answers pertain

                          to
                      feed_admin:
                        type: string
                        title: feed administrator
                      billing_admin:
                        type: string
                        title: feed billing administrator
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: feed_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /chainlink/ocr/v1beta1/feed_config_info/{feed_id}:
    get:
      summary: Retrieves the OCR FeedConfigInfo for a given FeedId
      operationId: FeedConfigInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              feed_config_info:
                type: object
                properties:
                  latest_config_digest:
                    type: string
                    format: byte
                  f:
                    type: integer
                    format: int64
                  'n':
                    type: integer
                    format: int64
                  config_count:
                    type: string
                    format: uint64
                    title: >-
                      config_count ordinal number of this config setting among
                      all config

                      settings
                  latest_config_block_number:
                    type: string
                    format: int64
              epoch_and_round:
                type: object
                properties:
                  epoch:
                    type: string
                    format: uint64
                  round:
                    type: string
                    format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: feed_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /chainlink/ocr/v1beta1/latest_round/{feed_id}:
    get:
      summary: >-
        Retrieves latest round ID and data, including median answer for that
        round
      operationId: LatestRound
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              latest_round_id:
                type: string
                format: uint64
              data:
                type: object
                properties:
                  answer:
                    type: string
                  observations_timestamp:
                    type: string
                    format: int64
                  transmission_timestamp:
                    type: string
                    format: int64
                title: >-
                  Transmission records the median answer from the transmit
                  transaction at

                  time timestamp
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: feed_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /chainlink/ocr/v1beta1/latest_transmission_details/{feed_id}:
    get:
      summary: |-
        LatestTransmissionDetails returns details about the latest trasmission
        recorded on chain for the given feed ID.
      operationId: LatestTransmissionDetails
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              config_digest:
                type: string
                format: byte
              epoch_and_round:
                type: object
                properties:
                  epoch:
                    type: string
                    format: uint64
                  round:
                    type: string
                    format: uint64
              data:
                type: object
                properties:
                  answer:
                    type: string
                  observations_timestamp:
                    type: string
                    format: int64
                  transmission_timestamp:
                    type: string
                    format: int64
                title: >-
                  Transmission records the median answer from the transmit
                  transaction at

                  time timestamp
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: feed_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /chainlink/ocr/v1beta1/module_state:
    get:
      summary: Retrieves the entire OCR module's state
      operationId: OcrModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    description: params defines all the parameters of related to OCR.
                    type: object
                    properties:
                      link_denom:
                        type: string
                        title: Native denom for LINK coin in the bank keeper
                      payout_block_interval:
                        type: string
                        format: uint64
                        title: The block number interval at which payouts are made
                      module_admin:
                        type: string
                        title: The admin for the OCR module
                  feed_configs:
                    type: array
                    items:
                      type: object
                      properties:
                        signers:
                          type: array
                          items:
                            type: string
                          title: >-
                            signers ith element is address ith oracle uses to
                            sign a report
                        transmitters:
                          type: array
                          items:
                            type: string
                          title: >-
                            transmitters ith element is address ith oracle uses
                            to transmit a report

                            via the transmit method
                        f:
                          type: integer
                          format: int64
                          title: >-
                            f maximum number of faulty/dishonest oracles the
                            protocol can tolerate

                            while still working correctly
                        onchain_config:
                          type: string
                          format: byte
                          description: >-
                            onchain_config serialized data with reporting plugin
                            params on chain.
                        offchain_config_version:
                          type: string
                          format: uint64
                          title: >-
                            offchain_config_version version of the serialization
                            format used for

                            "offchain_config" parameter
                        offchain_config:
                          type: string
                          format: byte
                          title: >-
                            offchain_config serialized data used by oracles to
                            configure their offchain

                            operation
                        module_params:
                          description: feed-specific params for the Cosmos module.
                          type: object
                          properties:
                            feed_id:
                              type: string
                              title: >-
                                feed_id is an unique ID for the target of this
                                config
                            min_answer:
                              type: string
                              title: >-
                                lowest answer the median of a report is allowed
                                to be
                            max_answer:
                              type: string
                              title: >-
                                highest answer the median of a report is allowed
                                to be
                            link_per_observation:
                              type: string
                              title: Fixed LINK reward for each observer
                            link_per_transmission:
                              type: string
                              title: Fixed LINK reward for transmitter
                            link_denom:
                              type: string
                              title: Native denom for LINK coin in the bank keeper
                            unique_reports:
                              type: boolean
                              title: Enables unique reports
                            description:
                              type: string
                              title: >-
                                short human-readable description of observable
                                this feed's answers pertain

                                to
                            feed_admin:
                              type: string
                              title: feed administrator
                            billing_admin:
                              type: string
                              title: feed billing administrator
                    title: feed_configs stores all of the supported OCR feeds
                  latest_epoch_and_rounds:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        epoch_and_round:
                          type: object
                          properties:
                            epoch:
                              type: string
                              format: uint64
                            round:
                              type: string
                              format: uint64
                    title: >-
                      latest_epoch_and_rounds stores the latest epoch and round
                      for each feedId
                  feed_transmissions:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        transmission:
                          type: object
                          properties:
                            answer:
                              type: string
                            observations_timestamp:
                              type: string
                              format: int64
                            transmission_timestamp:
                              type: string
                              format: int64
                          title: >-
                            Transmission records the median answer from the
                            transmit transaction at

                            time timestamp
                    title: >-
                      feed_transmissions stores the last transmission for each
                      feed
                  latest_aggregator_round_ids:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        aggregator_round_id:
                          type: string
                          format: uint64
                    title: >-
                      latest_aggregator_round_ids stores the latest aggregator
                      round ID for each

                      feedId
                  reward_pools:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                    title: reward_pools stores the reward pools
                  feed_observation_counts:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        counts:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              count:
                                type: string
                                format: uint64
                    title: feed_observation_counts stores the feed observation counts
                  feed_transmission_counts:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        counts:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              count:
                                type: string
                                format: uint64
                    title: >-
                      feed_transmission_counts stores the feed transmission
                      counts
                  pending_payeeships:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        transmitter:
                          type: string
                        proposed_payee:
                          type: string
                    title: pending_payeeships stores the pending payeeships
                description: GenesisState defines the OCR module's genesis state.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /chainlink/ocr/v1beta1/owed_amount/{transmitter}:
    get:
      summary: Retrieves transmitter's owed amount
      operationId: OwedAmount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: transmitter
          in: path
          required: true
          type: string
      tags:
        - Query
  /chainlink/ocr/v1beta1/params:
    get:
      operationId: OcrParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  link_denom:
                    type: string
                    title: Native denom for LINK coin in the bank keeper
                  payout_block_interval:
                    type: string
                    format: uint64
                    title: The block number interval at which payouts are made
                  module_admin:
                    type: string
                    title: The admin for the OCR module
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/auction/v1beta1/basket:
    get:
      summary: Retrieves current auction basket with current highest bid and bidder
      operationId: CurrentAuctionBasket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: amount describes the amount put on auction
              auctionRound:
                type: string
                format: uint64
                title: auctionRound describes current auction round
              auctionClosingTime:
                type: string
                format: int64
                title: auctionClosingTime describes auction close time for the round
              highestBidder:
                type: string
                title: highestBidder describes highest bidder on current round
              highestBidAmount:
                type: string
                title: highestBidAmount describes highest bid amount on current round
            description: |-
              QueryCurrentAuctionBasketResponse is the response type for the
              Query/CurrentAuctionBasket RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/auction/v1beta1/module_state:
    get:
      summary: Retrieves the entire auction module's state
      operationId: AuctionModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    description: params defines all the parameters of related to auction.
                    type: object
                    properties:
                      auction_period:
                        type: string
                        format: int64
                        title: >-
                          auction_period_duration defines the auction period
                          duration
                      min_next_bid_increment_rate:
                        type: string
                        title: >-
                          min_next_bid_increment_rate defines the minimum
                          increment rate for new bids
                  auction_round:
                    type: string
                    format: uint64
                    title: current auction round
                  highest_bid:
                    title: current highest bid
                    type: object
                    properties:
                      bidder:
                        type: string
                      amount:
                        type: string
                  auction_ending_timestamp:
                    type: string
                    format: int64
                    title: auction ending timestamp
                description: GenesisState defines the auction module's genesis state.
            description: |-
              QueryModuleStateResponse is the response type for the
              Query/AuctionModuleState RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/auction/v1beta1/params:
    get:
      summary: Retrieves auction params
      operationId: AuctionParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  auction_period:
                    type: string
                    format: int64
                    title: >-
                      auction_period_duration defines the auction period
                      duration
                  min_next_bid_increment_rate:
                    type: string
                    title: >-
                      min_next_bid_increment_rate defines the minimum increment
                      rate for new bids
            description: >-
              QueryAuctionParamsRequest is the response type for the
              Query/AuctionParams

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/band_ibc_price_states:
    get:
      summary: Retrieves the state for all band ibc price feeds
      operationId: BandIBCPriceStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_states:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                    rate:
                      type: string
                    resolve_time:
                      type: string
                      format: uint64
                    request_ID:
                      type: string
                      format: uint64
                    price_state:
                      type: object
                      properties:
                        price:
                          type: string
                        cumulative_price:
                          type: string
                        timestamp:
                          type: string
                          format: int64
            description: |-
              QueryBandIBCPriceStatesResponse is the response type for the
              Query/BandIBCPriceStates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/band_price_states:
    get:
      summary: Retrieves the state for all band price feeds
      operationId: BandPriceStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_states:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                    rate:
                      type: string
                    resolve_time:
                      type: string
                      format: uint64
                    request_ID:
                      type: string
                      format: uint64
                    price_state:
                      type: object
                      properties:
                        price:
                          type: string
                        cumulative_price:
                          type: string
                        timestamp:
                          type: string
                          format: int64
            description: |-
              QueryBandPriceStatesResponse is the response type for the
              Query/BandPriceStates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/band_relayers:
    get:
      summary: Retrieves the band relayers
      operationId: BandRelayers
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              relayers:
                type: array
                items:
                  type: string
            description: >-
              QueryBandRelayersResponse is the response type for the
              Query/BandRelayers RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/coinbase_price_states:
    get:
      summary: Retrieves the state for all coinbase price feeds
      operationId: CoinbasePriceStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_states:
                type: array
                items:
                  type: object
                  properties:
                    kind:
                      type: string
                      title: kind should always be "prices"
                    timestamp:
                      type: string
                      format: uint64
                      title: timestamp of the when the price was signed by coinbase
                    key:
                      type: string
                      title: the symbol of the price, e.g. BTC
                    value:
                      type: string
                      format: uint64
                      title: the value of the price scaled by 1e6
                    price_state:
                      type: object
                      properties:
                        price:
                          type: string
                        cumulative_price:
                          type: string
                        timestamp:
                          type: string
                          format: int64
                      title: the price state
            description: |-
              QueryCoinbasePriceStatesResponse is the response type for the
              Query/CoinbasePriceStates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/historical_price_records:
    get:
      summary: Retrieves historical price records for a given OracleType and Symbol
      operationId: HistoricalPriceRecords
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_records:
                type: array
                items:
                  type: object
                  properties:
                    oracle:
                      type: string
                      enum:
                        - Unspecified
                        - Band
                        - PriceFeed
                        - Coinbase
                        - Chainlink
                        - Razor
                        - Dia
                        - API3
                        - Uma
                        - Pyth
                        - BandIBC
                        - Provider
                      default: Unspecified
                    symbol_id:
                      type: string
                    latest_price_records:
                      type: array
                      items:
                        type: object
                        properties:
                          timestamp:
                            type: string
                            format: int64
                          price:
                            type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: oracle
          in: query
          required: false
          type: string
          enum:
            - Unspecified
            - Band
            - PriceFeed
            - Coinbase
            - Chainlink
            - Razor
            - Dia
            - API3
            - Uma
            - Pyth
            - BandIBC
            - Provider
          default: Unspecified
        - name: symbol_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/oracle/v1beta1/module_state:
    get:
      summary: Retrieves the entire oracle module's state
      operationId: OracleModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    description: params defines all the parameters of related to oracle.
                    type: object
                    properties:
                      pyth_contract:
                        type: string
                  band_relayers:
                    type: array
                    items:
                      type: string
                  band_price_states:
                    type: array
                    items:
                      type: object
                      properties:
                        symbol:
                          type: string
                        rate:
                          type: string
                        resolve_time:
                          type: string
                          format: uint64
                        request_ID:
                          type: string
                          format: uint64
                        price_state:
                          type: object
                          properties:
                            price:
                              type: string
                            cumulative_price:
                              type: string
                            timestamp:
                              type: string
                              format: int64
                  price_feed_price_states:
                    type: array
                    items:
                      type: object
                      properties:
                        base:
                          type: string
                        quote:
                          type: string
                        price_state:
                          type: object
                          properties:
                            price:
                              type: string
                            cumulative_price:
                              type: string
                            timestamp:
                              type: string
                              format: int64
                        relayers:
                          type: array
                          items:
                            type: string
                  coinbase_price_states:
                    type: array
                    items:
                      type: object
                      properties:
                        kind:
                          type: string
                          title: kind should always be "prices"
                        timestamp:
                          type: string
                          format: uint64
                          title: >-
                            timestamp of the when the price was signed by
                            coinbase
                        key:
                          type: string
                          title: the symbol of the price, e.g. BTC
                        value:
                          type: string
                          format: uint64
                          title: the value of the price scaled by 1e6
                        price_state:
                          type: object
                          properties:
                            price:
                              type: string
                            cumulative_price:
                              type: string
                            timestamp:
                              type: string
                              format: int64
                          title: the price state
                  band_ibc_price_states:
                    type: array
                    items:
                      type: object
                      properties:
                        symbol:
                          type: string
                        rate:
                          type: string
                        resolve_time:
                          type: string
                          format: uint64
                        request_ID:
                          type: string
                          format: uint64
                        price_state:
                          type: object
                          properties:
                            price:
                              type: string
                            cumulative_price:
                              type: string
                            timestamp:
                              type: string
                              format: int64
                  band_ibc_oracle_requests:
                    type: array
                    items:
                      type: object
                      properties:
                        request_id:
                          type: string
                          format: uint64
                          title: Unique Identifier for band ibc oracle request
                        oracle_script_id:
                          type: string
                          format: int64
                          description: >-
                            OracleScriptID is the unique identifier of the
                            oracle script to be

                            executed.
                        symbols:
                          type: array
                          items:
                            type: string
                          title: >-
                            Symbols is the list of symbols to prepare in the
                            calldata
                        ask_count:
                          type: string
                          format: uint64
                          description: >-
                            AskCount is the number of validators that are
                            requested to respond to this

                            oracle request. Higher value means more security, at
                            a higher gas cost.
                        min_count:
                          type: string
                          format: uint64
                          description: >-
                            MinCount is the minimum number of validators
                            necessary for the request to

                            proceed to the execution phase. Higher value means
                            more security, at the

                            cost of liveness.
                        fee_limit:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements
                              the custom method

                              signatures required by gogoproto.
                          description: >-
                            FeeLimit is the maximum tokens that will be paid to
                            all data source

                            providers.
                        prepare_gas:
                          type: string
                          format: uint64
                          title: >-
                            PrepareGas is amount of gas to pay to prepare raw
                            requests
                        execute_gas:
                          type: string
                          format: uint64
                          title: ExecuteGas is amount of gas to reserve for executing
                        min_source_count:
                          type: string
                          format: uint64
                          title: >-
                            MinSourceCount is the minimum number of data sources
                            that must be used by

                            each validator
                  band_ibc_params:
                    type: object
                    properties:
                      band_ibc_enabled:
                        type: boolean
                        title: true if Band IBC should be enabled
                      ibc_request_interval:
                        type: string
                        format: int64
                        title: block request interval to send Band IBC prices
                      ibc_source_channel:
                        type: string
                        title: band IBC source channel
                      ibc_version:
                        type: string
                        title: band IBC version
                      ibc_port_id:
                        type: string
                        title: band IBC portID
                      legacy_oracle_ids:
                        type: array
                        items:
                          type: string
                          format: int64
                        title: legacy oracle scheme ids
                  band_ibc_latest_client_id:
                    type: string
                    format: uint64
                  calldata_records:
                    type: array
                    items:
                      type: object
                      properties:
                        client_id:
                          type: string
                          format: uint64
                        calldata:
                          type: string
                          format: byte
                  band_ibc_latest_request_id:
                    type: string
                    format: uint64
                  chainlink_price_states:
                    type: array
                    items:
                      type: object
                      properties:
                        feed_id:
                          type: string
                        answer:
                          type: string
                        timestamp:
                          type: string
                          format: uint64
                        price_state:
                          type: object
                          properties:
                            price:
                              type: string
                            cumulative_price:
                              type: string
                            timestamp:
                              type: string
                              format: int64
                  historical_price_records:
                    type: array
                    items:
                      type: object
                      properties:
                        oracle:
                          type: string
                          enum:
                            - Unspecified
                            - Band
                            - PriceFeed
                            - Coinbase
                            - Chainlink
                            - Razor
                            - Dia
                            - API3
                            - Uma
                            - Pyth
                            - BandIBC
                            - Provider
                          default: Unspecified
                        symbol_id:
                          type: string
                        latest_price_records:
                          type: array
                          items:
                            type: object
                            properties:
                              timestamp:
                                type: string
                                format: int64
                              price:
                                type: string
                  provider_states:
                    type: array
                    items:
                      type: object
                      properties:
                        provider_info:
                          type: object
                          properties:
                            provider:
                              type: string
                            relayers:
                              type: array
                              items:
                                type: string
                        provider_price_states:
                          type: array
                          items:
                            type: object
                            properties:
                              symbol:
                                type: string
                              state:
                                type: object
                                properties:
                                  price:
                                    type: string
                                  cumulative_price:
                                    type: string
                                  timestamp:
                                    type: string
                                    format: int64
                  pyth_price_states:
                    type: array
                    items:
                      type: object
                      properties:
                        price_id:
                          type: string
                        ema_price:
                          type: string
                        ema_conf:
                          type: string
                        conf:
                          type: string
                        publish_time:
                          type: string
                          format: uint64
                        price_state:
                          type: object
                          properties:
                            price:
                              type: string
                            cumulative_price:
                              type: string
                            timestamp:
                              type: string
                              format: int64
                description: GenesisState defines the oracle module's genesis state.
            description: >-
              QueryModuleStateResponse is the response type for the
              Query/OracleModuleState

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/params:
    get:
      summary: Retrieves oracle params
      operationId: OracleParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  pyth_contract:
                    type: string
            description: >-
              QueryOracleParamsResponse is the response type for the
              Query/OracleParams RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/price:
    get:
      operationId: OraclePrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_pair_state:
                type: object
                properties:
                  pair_price:
                    type: string
                  base_price:
                    type: string
                  quote_price:
                    type: string
                  base_cumulative_price:
                    type: string
                  quote_cumulative_price:
                    type: string
                  base_timestamp:
                    type: string
                    format: int64
                  quote_timestamp:
                    type: string
                    format: int64
            description: >-
              QueryOraclePriceResponse is the response type for the
              Query/OraclePrice RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: oracle_type
          in: query
          required: false
          type: string
          enum:
            - Unspecified
            - Band
            - PriceFeed
            - Coinbase
            - Chainlink
            - Razor
            - Dia
            - API3
            - Uma
            - Pyth
            - BandIBC
            - Provider
          default: Unspecified
        - name: base
          in: query
          required: false
          type: string
        - name: quote
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/oracle/v1beta1/pricefeed_price_states:
    get:
      summary: Retrieves the state for all price feeds
      operationId: PriceFeedPriceStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_states:
                type: array
                items:
                  type: object
                  properties:
                    base:
                      type: string
                    quote:
                      type: string
                    price_state:
                      type: object
                      properties:
                        price:
                          type: string
                        cumulative_price:
                          type: string
                        timestamp:
                          type: string
                          format: int64
                    relayers:
                      type: array
                      items:
                        type: string
            description: |-
              QueryPriceFeedPriceStatesResponse is the response type for the
              Query/PriceFeedPriceStates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/provider_price_state/{provider}/{symbol}:
    get:
      summary: Retrieves the state for all provider price feeds
      operationId: ProviderPriceState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_state:
                type: object
                properties:
                  price:
                    type: string
                  cumulative_price:
                    type: string
                  timestamp:
                    type: string
                    format: int64
            description: |-
              QueryProviderPriceStatesResponse is the response type for the
              Query/ProviderPriceStates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: symbol
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/oracle/v1beta1/provider_prices:
    get:
      operationId: OracleProviderPrices
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              providerState:
                type: array
                items:
                  type: object
                  properties:
                    provider_info:
                      type: object
                      properties:
                        provider:
                          type: string
                        relayers:
                          type: array
                          items:
                            type: string
                    provider_price_states:
                      type: array
                      items:
                        type: object
                        properties:
                          symbol:
                            type: string
                          state:
                            type: object
                            properties:
                              price:
                                type: string
                              cumulative_price:
                                type: string
                              timestamp:
                                type: string
                                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: provider
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/oracle/v1beta1/providers:
    get:
      operationId: OracleProvidersInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              providers:
                type: array
                items:
                  type: object
                  properties:
                    provider:
                      type: string
                    relayers:
                      type: array
                      items:
                        type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/pyth_price:
    get:
      operationId: PythPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_state:
                type: object
                properties:
                  price_id:
                    type: string
                  ema_price:
                    type: string
                  ema_conf:
                    type: string
                  conf:
                    type: string
                  publish_time:
                    type: string
                    format: uint64
                  price_state:
                    type: object
                    properties:
                      price:
                        type: string
                      cumulative_price:
                        type: string
                      timestamp:
                        type: string
                        format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: price_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/oracle/v1beta1/pyth_price_states:
    get:
      summary: Retrieves the state for all pyth price feeds
      operationId: PythPriceStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price_states:
                type: array
                items:
                  type: object
                  properties:
                    price_id:
                      type: string
                    ema_price:
                      type: string
                    ema_conf:
                      type: string
                    conf:
                      type: string
                    publish_time:
                      type: string
                      format: uint64
                    price_state:
                      type: object
                      properties:
                        price:
                          type: string
                        cumulative_price:
                          type: string
                        timestamp:
                          type: string
                          format: int64
            description: |-
              QueryPythPriceStatesResponse is the response type for the
              Query/CoinbasePriceStates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/oracle/v1beta1/volatility:
    get:
      summary: Retrieves mixed volatility value for the specified pair of base/quote
      operationId: OracleVolatility
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              volatility:
                type: string
              history_metadata:
                type: object
                properties:
                  group_count:
                    type: integer
                    format: int64
                    title: >-
                      GroupCount refers to the number of groups used. Equals
                      RecordsSampleSize if

                      no grouping is used
                  records_sample_size:
                    type: integer
                    format: int64
                    description: >-
                      RecordsSampleSize refers to the total number of records
                      used.
                  mean:
                    type: string
                    title: >-
                      Mean refers to the arithmetic mean

                      For trades, the mean is the VWAP computed over the grouped
                      trade records ∑

                      (price * quantity) / ∑ quantity For oracle prices, the
                      mean is computed

                      over the price records ∑ (price) / prices_count
                  twap:
                    type: string
                    title: >-
                      TWAP refers to the time-weighted average price which
                      equals ∑ (price_i *

                      ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
                  first_timestamp:
                    type: string
                    format: int64
                    title: >-
                      FirstTimestamp is the timestamp of the oldest record
                      considered
                  last_timestamp:
                    type: string
                    format: int64
                    title: >-
                      LastTimestamp is the timestamp of the youngest record
                      considered
                  min_price:
                    type: string
                    title: >-
                      MinPrice refers to the smallest individual raw price
                      considered
                  max_price:
                    type: string
                    title: >-
                      MaxPrice refers to the largest individual raw price
                      considered
                  median_price:
                    type: string
                    title: >-
                      MedianPrice refers to the median individual raw price
                      considered
                title: >-
                  MetadataStatistics refers to the metadata summary statistics
                  of the

                  historical sample considered
              raw_history:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: int64
                    price:
                      type: string
            description: >-
              QueryOracleVolatilityResponse is the response type for
              Query/OracleVolatility

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: base_info.symbol
          in: query
          required: false
          type: string
        - name: base_info.oracle_type
          in: query
          required: false
          type: string
          enum:
            - Unspecified
            - Band
            - PriceFeed
            - Coinbase
            - Chainlink
            - Razor
            - Dia
            - API3
            - Uma
            - Pyth
            - BandIBC
            - Provider
          default: Unspecified
        - name: quote_info.symbol
          in: query
          required: false
          type: string
        - name: quote_info.oracle_type
          in: query
          required: false
          type: string
          enum:
            - Unspecified
            - Band
            - PriceFeed
            - Coinbase
            - Chainlink
            - Razor
            - Dia
            - API3
            - Uma
            - Pyth
            - BandIBC
            - Provider
          default: Unspecified
        - name: oracle_history_options.max_age
          description: >-
            MaxAge restricts the oracle price records oldest age in seconds from
            the

            current block time to consider. A value of 0 means use all the
            records

            present on the chain.
          in: query
          required: false
          type: string
          format: uint64
        - name: oracle_history_options.include_raw_history
          description: |-
            If IncludeRawHistory is true, the raw underlying data used for the
            computation is included in the response.
          in: query
          required: false
          type: boolean
        - name: oracle_history_options.include_metadata
          description: >-
            If IncludeMetadata is true, metadata on the computation is included
            in the

            response.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /injective/insurance/v1beta1/estimated_redemptions:
    get:
      summary: |-
        Retrives the value of insurance fund share token at current price (not
        pending redemption)
      operationId: EstimatedRedemptions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: |-
              QueryEstimatedRedemptionsResponse is the response type for the
              Query/EstimatedRedemptions RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: marketId
          in: query
          required: false
          type: string
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/insurance/v1beta1/insurance_fund/{market_id}:
    get:
      summary: Retrieves individual insurance fund information from market id
      operationId: InsuranceFund
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              fund:
                type: object
                properties:
                  deposit_denom:
                    type: string
                    title: deposit denomination for the given insurance fund
                  insurance_pool_token_denom:
                    type: string
                    title: >-
                      insurance fund pool token denomination for the given
                      insurance fund
                  redemption_notice_period_duration:
                    type: string
                    title: >-
                      redemption_notice_period_duration defines the minimum
                      notice period

                      duration that must pass after an underwriter sends a
                      redemption request

                      before the underwriter can claim his tokens
                  balance:
                    type: string
                    title: balance of fund
                  total_share:
                    type: string
                    title: total share tokens minted
                  market_id:
                    type: string
                    title: marketID of the derivative market
                  market_ticker:
                    type: string
                    title: ticker of the derivative market
                  oracle_base:
                    type: string
                    description: >-
                      Oracle base currency of the derivative market OR the
                      oracle symbol for the

                      binary options market.
                  oracle_quote:
                    type: string
                    description: >-
                      Oracle quote currency of the derivative market OR the
                      oracle provider for

                      the binary options market.
                  oracle_type:
                    title: Oracle type of the binary options or derivative market
                    type: string
                    enum:
                      - Unspecified
                      - Band
                      - PriceFeed
                      - Coinbase
                      - Chainlink
                      - Razor
                      - Dia
                      - API3
                      - Uma
                      - Pyth
                      - BandIBC
                      - Provider
                    default: Unspecified
                  expiry:
                    type: string
                    format: int64
                    description: >-
                      Expiration time of the derivative market. Should be -1 for
                      perpetual or -2

                      for binary options markets.
            description: >-
              QueryInsuranceFundResponse is the response type for the
              Query/InsuranceFund

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: Market ID for the market
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/insurance/v1beta1/insurance_funds:
    get:
      summary: Retrieves all insurance funds
      operationId: InsuranceFunds
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              funds:
                type: array
                items:
                  type: object
                  properties:
                    deposit_denom:
                      type: string
                      title: deposit denomination for the given insurance fund
                    insurance_pool_token_denom:
                      type: string
                      title: >-
                        insurance fund pool token denomination for the given
                        insurance fund
                    redemption_notice_period_duration:
                      type: string
                      title: >-
                        redemption_notice_period_duration defines the minimum
                        notice period

                        duration that must pass after an underwriter sends a
                        redemption request

                        before the underwriter can claim his tokens
                    balance:
                      type: string
                      title: balance of fund
                    total_share:
                      type: string
                      title: total share tokens minted
                    market_id:
                      type: string
                      title: marketID of the derivative market
                    market_ticker:
                      type: string
                      title: ticker of the derivative market
                    oracle_base:
                      type: string
                      description: >-
                        Oracle base currency of the derivative market OR the
                        oracle symbol for the

                        binary options market.
                    oracle_quote:
                      type: string
                      description: >-
                        Oracle quote currency of the derivative market OR the
                        oracle provider for

                        the binary options market.
                    oracle_type:
                      title: Oracle type of the binary options or derivative market
                      type: string
                      enum:
                        - Unspecified
                        - Band
                        - PriceFeed
                        - Coinbase
                        - Chainlink
                        - Razor
                        - Dia
                        - API3
                        - Uma
                        - Pyth
                        - BandIBC
                        - Provider
                      default: Unspecified
                    expiry:
                      type: string
                      format: int64
                      description: >-
                        Expiration time of the derivative market. Should be -1
                        for perpetual or -2

                        for binary options markets.
            description: >-
              QueryInsuranceFundsResponse is the response type for the
              Query/InsuranceFunds

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/insurance/v1beta1/module_state:
    get:
      summary: Retrieves the entire insurance module's state
      operationId: InsuranceModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    description: params defines all the parameters of related to insurance.
                    type: object
                    properties:
                      default_redemption_notice_period_duration:
                        type: string
                        title: >-
                          default_redemption_notice_period_duration defines the
                          default minimum

                          notice period duration that must pass after an
                          underwriter sends a

                          redemption request before the underwriter can claim
                          his tokens
                  insurance_funds:
                    type: array
                    items:
                      type: object
                      properties:
                        deposit_denom:
                          type: string
                          title: deposit denomination for the given insurance fund
                        insurance_pool_token_denom:
                          type: string
                          title: >-
                            insurance fund pool token denomination for the given
                            insurance fund
                        redemption_notice_period_duration:
                          type: string
                          title: >-
                            redemption_notice_period_duration defines the
                            minimum notice period

                            duration that must pass after an underwriter sends a
                            redemption request

                            before the underwriter can claim his tokens
                        balance:
                          type: string
                          title: balance of fund
                        total_share:
                          type: string
                          title: total share tokens minted
                        market_id:
                          type: string
                          title: marketID of the derivative market
                        market_ticker:
                          type: string
                          title: ticker of the derivative market
                        oracle_base:
                          type: string
                          description: >-
                            Oracle base currency of the derivative market OR the
                            oracle symbol for the

                            binary options market.
                        oracle_quote:
                          type: string
                          description: >-
                            Oracle quote currency of the derivative market OR
                            the oracle provider for

                            the binary options market.
                        oracle_type:
                          title: >-
                            Oracle type of the binary options or derivative
                            market
                          type: string
                          enum:
                            - Unspecified
                            - Band
                            - PriceFeed
                            - Coinbase
                            - Chainlink
                            - Razor
                            - Dia
                            - API3
                            - Uma
                            - Pyth
                            - BandIBC
                            - Provider
                          default: Unspecified
                        expiry:
                          type: string
                          format: int64
                          description: >-
                            Expiration time of the derivative market. Should be
                            -1 for perpetual or -2

                            for binary options markets.
                    title: >-
                      insurance_funds describes the insurance funds available
                      for derivative

                      markets
                  redemption_schedule:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                          title: id of redemption schedule
                        marketId:
                          type: string
                          title: marketId of insurance fund for the redemption
                        redeemer:
                          type: string
                          title: address of the redeemer
                        claimable_redemption_time:
                          type: string
                          format: date-time
                          title: the time after which the redemption can be claimed
                        redemption_amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          title: the insurance_pool_token amount to redeem
                    title: >-
                      redemption_schedule describes the redemption requests
                      pending
                  next_share_denom_id:
                    type: string
                    format: uint64
                    title: >-
                      next_share_denom_id describes the next share denom id to
                      be used for newly

                      creating insurance fund incremented by 1 per insurance
                      fund creation
                  next_redemption_schedule_id:
                    type: string
                    format: uint64
                    title: >-
                      next_redemption_schedule_id describes next redemption
                      schedule id to be

                      used for next schedule incremented by 1 per redemption
                      request
                description: GenesisState defines the insurance module's genesis state.
            description: |-
              QueryModuleStateResponse is the response type for the
              Query/InsuranceModuleState RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/insurance/v1beta1/params:
    get:
      summary: Retrieves insurance params
      operationId: InsuranceParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  default_redemption_notice_period_duration:
                    type: string
                    title: >-
                      default_redemption_notice_period_duration defines the
                      default minimum

                      notice period duration that must pass after an underwriter
                      sends a

                      redemption request before the underwriter can claim his
                      tokens
            description: |-
              QueryInsuranceParamsRequest is the response type for the
              Query/InsuranceParams RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/insurance/v1beta1/pending_redemptions:
    get:
      summary: Retrieves pending redemptions' share token at current price
      operationId: PendingRedemptions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: |-
              QueryPendingRedemptionsResponse is the response type for the
              Query/PendingRedemptions RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: marketId
          in: query
          required: false
          type: string
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/batch:
    get:
      operationId: BatchRequestByNonce
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batch:
                type: object
                properties:
                  batch_nonce:
                    type: string
                    format: uint64
                  batch_timeout:
                    type: string
                    format: uint64
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        sender:
                          type: string
                        dest_address:
                          type: string
                        erc20_token:
                          type: object
                          properties:
                            contract:
                              type: string
                            amount:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token, this could
                            be a Cosmos

                            originated token, if so it will be the ERC20 address
                            of the representation

                            (note: developers should look up the token symbol
                            using the address on ETH to

                            display for UI)
                        erc20_fee:
                          type: object
                          properties:
                            contract:
                              type: string
                            amount:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token, this could
                            be a Cosmos

                            originated token, if so it will be the ERC20 address
                            of the representation

                            (note: developers should look up the token symbol
                            using the address on ETH to

                            display for UI)
                      title: >-
                        OutgoingTransferTx represents an individual send from
                        Peggy to ETH
                  token_contract:
                    type: string
                  block:
                    type: string
                    format: uint64
                title: >-
                  OutgoingTxBatch represents a batch of transactions going from
                  Peggy to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
        - name: contract_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/batch/confirms:
    get:
      operationId: BatchConfirms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              confirms:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    token_contract:
                      type: string
                    eth_signer:
                      type: string
                    orchestrator:
                      type: string
                    signature:
                      type: string
                  title: >-
                    MsgConfirmBatch

                    When validators observe a MsgRequestBatch they form a batch
                    by ordering

                    transactions currently in the txqueue in order of highest to
                    lowest fee,

                    cutting off when the batch either reaches a hardcoded
                    maximum size (to be

                    decided, probably around 100) or when transactions stop
                    being profitable

                    (TODO determine this without nondeterminism) This message
                    includes the batch

                    as well as an Ethereum signature over this batch by the
                    validator

                    -------------
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
        - name: contract_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/batch/last:
    get:
      operationId: LastPendingBatchRequestByAddr
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batch:
                type: object
                properties:
                  batch_nonce:
                    type: string
                    format: uint64
                  batch_timeout:
                    type: string
                    format: uint64
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        sender:
                          type: string
                        dest_address:
                          type: string
                        erc20_token:
                          type: object
                          properties:
                            contract:
                              type: string
                            amount:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token, this could
                            be a Cosmos

                            originated token, if so it will be the ERC20 address
                            of the representation

                            (note: developers should look up the token symbol
                            using the address on ETH to

                            display for UI)
                        erc20_fee:
                          type: object
                          properties:
                            contract:
                              type: string
                            amount:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token, this could
                            be a Cosmos

                            originated token, if so it will be the ERC20 address
                            of the representation

                            (note: developers should look up the token symbol
                            using the address on ETH to

                            display for UI)
                      title: >-
                        OutgoingTransferTx represents an individual send from
                        Peggy to ETH
                  token_contract:
                    type: string
                  block:
                    type: string
                    format: uint64
                title: >-
                  OutgoingTxBatch represents a batch of transactions going from
                  Peggy to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/batch/outgoingtx:
    get:
      operationId: OutgoingTxBatches
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batches:
                type: array
                items:
                  type: object
                  properties:
                    batch_nonce:
                      type: string
                      format: uint64
                    batch_timeout:
                      type: string
                      format: uint64
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uint64
                          sender:
                            type: string
                          dest_address:
                            type: string
                          erc20_token:
                            type: object
                            properties:
                              contract:
                                type: string
                              amount:
                                type: string
                            title: >-
                              ERC20Token unique identifier for an Ethereum ERC20
                              token.

                              CONTRACT:

                              The contract address on ETH of the token, this
                              could be a Cosmos

                              originated token, if so it will be the ERC20
                              address of the representation

                              (note: developers should look up the token symbol
                              using the address on ETH to

                              display for UI)
                          erc20_fee:
                            type: object
                            properties:
                              contract:
                                type: string
                              amount:
                                type: string
                            title: >-
                              ERC20Token unique identifier for an Ethereum ERC20
                              token.

                              CONTRACT:

                              The contract address on ETH of the token, this
                              could be a Cosmos

                              originated token, if so it will be the ERC20
                              address of the representation

                              (note: developers should look up the token symbol
                              using the address on ETH to

                              display for UI)
                        title: >-
                          OutgoingTransferTx represents an individual send from
                          Peggy to ETH
                    token_contract:
                      type: string
                    block:
                      type: string
                      format: uint64
                  title: >-
                    OutgoingTxBatch represents a batch of transactions going
                    from Peggy to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /peggy/v1/batchfees:
    get:
      operationId: BatchFees
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batchFees:
                type: array
                items:
                  type: object
                  properties:
                    token:
                      type: string
                    total_fees:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /peggy/v1/confirms/{nonce}:
    get:
      operationId: ValsetConfirmsByNonce
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              confirms:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    orchestrator:
                      type: string
                    eth_address:
                      type: string
                    signature:
                      type: string
                  description: >-
                    MsgValsetConfirm

                    this is the message sent by the validators when they wish to
                    submit their

                    signatures over the validator set at a given block height. A
                    validator must

                    first call MsgSetEthAddress to set their Ethereum address to
                    be used for

                    signing. Then someone (anyone) must make a ValsetRequest the
                    request is

                    essentially a messaging mechanism to determine which block
                    all validators

                    should submit signatures over. Finally validators sign the
                    validator set,

                    powers, and Ethereum addresses of the entire validator set
                    at the height of a

                    ValsetRequest and submit that signature with this message.


                    If a sufficient number of validators (66% of voting power)
                    (A) have set

                    Ethereum addresses and (B) submit ValsetConfirm messages
                    with their

                    signatures it is then possible for anyone to view these
                    signatures in the

                    chain store and submit them to Ethereum to update the
                    validator set

                    -------------
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: nonce
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /peggy/v1/cosmos_originated/denom_to_erc20:
    get:
      operationId: DenomToERC20
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              erc20:
                type: string
              cosmos_originated:
                type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/cosmos_originated/erc20_to_denom:
    get:
      operationId: ERC20ToDenom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denom:
                type: string
              cosmos_originated:
                type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: erc20
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/missing_nonces:
    get:
      operationId: MissingPeggoNonces
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              operator_addresses:
                type: array
                items:
                  type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /peggy/v1/module_state:
    get:
      summary: Retrieves the entire peggy module's state
      operationId: PeggyModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      peggy_id:
                        type: string
                      contract_source_hash:
                        type: string
                      bridge_ethereum_address:
                        type: string
                      bridge_chain_id:
                        type: string
                        format: uint64
                      signed_valsets_window:
                        type: string
                        format: uint64
                      signed_batches_window:
                        type: string
                        format: uint64
                      signed_claims_window:
                        type: string
                        format: uint64
                      target_batch_timeout:
                        type: string
                        format: uint64
                      average_block_time:
                        type: string
                        format: uint64
                      average_ethereum_block_time:
                        type: string
                        format: uint64
                      slash_fraction_valset:
                        type: string
                        format: byte
                      slash_fraction_batch:
                        type: string
                        format: byte
                      slash_fraction_claim:
                        type: string
                        format: byte
                      slash_fraction_conflicting_claim:
                        type: string
                        format: byte
                      unbond_slashing_valsets_window:
                        type: string
                        format: uint64
                      slash_fraction_bad_eth_signature:
                        type: string
                        format: byte
                      cosmos_coin_denom:
                        type: string
                      cosmos_coin_erc20_contract:
                        type: string
                      claim_slashing_enabled:
                        type: boolean
                      bridge_contract_start_height:
                        type: string
                        format: uint64
                      valset_reward:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                  last_observed_nonce:
                    type: string
                    format: uint64
                  valsets:
                    type: array
                    items:
                      type: object
                      properties:
                        nonce:
                          type: string
                          format: uint64
                        members:
                          type: array
                          items:
                            type: object
                            properties:
                              power:
                                type: string
                                format: uint64
                              ethereum_address:
                                type: string
                            title: >-
                              BridgeValidator represents a validator's ETH
                              address and its power
                        height:
                          type: string
                          format: uint64
                        reward_amount:
                          type: string
                        reward_token:
                          type: string
                          title: >-
                            the reward token in it's Ethereum hex address
                            representation
                      title: >-
                        Valset is the Ethereum Bridge Multsig Set, each peggy
                        validator also

                        maintains an ETH key to sign messages, these are used to
                        check signatures on

                        ETH because of the significant gas savings
                  valset_confirms:
                    type: array
                    items:
                      type: object
                      properties:
                        nonce:
                          type: string
                          format: uint64
                        orchestrator:
                          type: string
                        eth_address:
                          type: string
                        signature:
                          type: string
                      description: >-
                        MsgValsetConfirm

                        this is the message sent by the validators when they
                        wish to submit their

                        signatures over the validator set at a given block
                        height. A validator must

                        first call MsgSetEthAddress to set their Ethereum
                        address to be used for

                        signing. Then someone (anyone) must make a ValsetRequest
                        the request is

                        essentially a messaging mechanism to determine which
                        block all validators

                        should submit signatures over. Finally validators sign
                        the validator set,

                        powers, and Ethereum addresses of the entire validator
                        set at the height of a

                        ValsetRequest and submit that signature with this
                        message.


                        If a sufficient number of validators (66% of voting
                        power) (A) have set

                        Ethereum addresses and (B) submit ValsetConfirm messages
                        with their

                        signatures it is then possible for anyone to view these
                        signatures in the

                        chain store and submit them to Ethereum to update the
                        validator set

                        -------------
                  batches:
                    type: array
                    items:
                      type: object
                      properties:
                        batch_nonce:
                          type: string
                          format: uint64
                        batch_timeout:
                          type: string
                          format: uint64
                        transactions:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uint64
                              sender:
                                type: string
                              dest_address:
                                type: string
                              erc20_token:
                                type: object
                                properties:
                                  contract:
                                    type: string
                                  amount:
                                    type: string
                                title: >-
                                  ERC20Token unique identifier for an Ethereum
                                  ERC20 token.

                                  CONTRACT:

                                  The contract address on ETH of the token, this
                                  could be a Cosmos

                                  originated token, if so it will be the ERC20
                                  address of the representation

                                  (note: developers should look up the token
                                  symbol using the address on ETH to

                                  display for UI)
                              erc20_fee:
                                type: object
                                properties:
                                  contract:
                                    type: string
                                  amount:
                                    type: string
                                title: >-
                                  ERC20Token unique identifier for an Ethereum
                                  ERC20 token.

                                  CONTRACT:

                                  The contract address on ETH of the token, this
                                  could be a Cosmos

                                  originated token, if so it will be the ERC20
                                  address of the representation

                                  (note: developers should look up the token
                                  symbol using the address on ETH to

                                  display for UI)
                            title: >-
                              OutgoingTransferTx represents an individual send
                              from Peggy to ETH
                        token_contract:
                          type: string
                        block:
                          type: string
                          format: uint64
                      title: >-
                        OutgoingTxBatch represents a batch of transactions going
                        from Peggy to ETH
                  batch_confirms:
                    type: array
                    items:
                      type: object
                      properties:
                        nonce:
                          type: string
                          format: uint64
                        token_contract:
                          type: string
                        eth_signer:
                          type: string
                        orchestrator:
                          type: string
                        signature:
                          type: string
                      title: >-
                        MsgConfirmBatch

                        When validators observe a MsgRequestBatch they form a
                        batch by ordering

                        transactions currently in the txqueue in order of
                        highest to lowest fee,

                        cutting off when the batch either reaches a hardcoded
                        maximum size (to be

                        decided, probably around 100) or when transactions stop
                        being profitable

                        (TODO determine this without nondeterminism) This
                        message includes the batch

                        as well as an Ethereum signature over this batch by the
                        validator

                        -------------
                  attestations:
                    type: array
                    items:
                      type: object
                      properties:
                        observed:
                          type: boolean
                        votes:
                          type: array
                          items:
                            type: string
                        height:
                          type: string
                          format: uint64
                        claim:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: >-
                                A URL/resource name that uniquely identifies the
                                type of the serialized

                                protocol buffer message. This string must
                                contain at least

                                one "/" character. The last segment of the URL's
                                path must represent

                                the fully qualified name of the type (as in

                                `path/google.protobuf.Duration`). The name
                                should be in a canonical form

                                (e.g., leading "." is not accepted).


                                In practice, teams usually precompile into the
                                binary all types that they

                                expect it to use in the context of Any. However,
                                for URLs which use the

                                scheme `http`, `https`, or no scheme, one can
                                optionally set up a type

                                server that maps type URLs to message
                                definitions as follows:


                                * If no scheme is provided, `https` is assumed.

                                * An HTTP GET on the URL must yield a
                                [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup
                                results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently
                                available in the official

                                protobuf release, and it is not used for type
                                URLs beginning with

                                type.googleapis.com.


                                Schemes other than `http`, `https` (or the empty
                                scheme) might be

                                used with implementation specific semantics.
                            value:
                              type: string
                              format: byte
                              description: >-
                                Must be a valid serialized protocol buffer of
                                the above specified type.
                          description: >-
                            `Any` contains an arbitrary serialized protocol
                            buffer message along with a

                            URL that describes the type of the serialized
                            message.


                            Protobuf library provides support to pack/unpack Any
                            values in the form

                            of utility functions or additional generated methods
                            of the Any type.


                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will
                            by default use

                            'type.googleapis.com/full.type.name' as the type URL
                            and the unpack

                            methods only use the fully qualified type name after
                            the last '/'

                            in the type URL, for example "foo.bar.com/x/y.z"
                            will yield type

                            name "y.z".



                            JSON


                            The JSON representation of an `Any` value uses the
                            regular

                            representation of the deserialized, embedded
                            message, with an

                            additional field `@type` which contains the type
                            URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a
                            custom JSON

                            representation, that representation will be embedded
                            adding a field

                            `value` which holds the custom JSON in addition to
                            the `@type`

                            field. Example (for message
                            [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      description: >-
                        The actual content of the claims is passed in with the
                        transaction making the

                        claim and then passed through the call stack alongside
                        the attestation while

                        it is processed the key in which the attestation is
                        stored is keyed on the

                        exact details of the claim but there is no reason to
                        store those exact

                        details becuause the next message sender will kindly
                        provide you with them.
                      title: >-
                        Attestation is an aggregate of `claims` that eventually
                        becomes `observed` by

                        all orchestrators

                        EVENT_NONCE:

                        EventNonce a nonce provided by the peggy contract that
                        is unique per event

                        fired These event nonces must be relayed in order. This
                        is a correctness

                        issue, if relaying out of order transaction replay
                        attacks become possible

                        OBSERVED:

                        Observed indicates that >67% of validators have attested
                        to the event,

                        and that the event should be executed by the peggy state
                        machine
                  orchestrator_addresses:
                    type: array
                    items:
                      type: object
                      properties:
                        sender:
                          type: string
                        orchestrator:
                          type: string
                        eth_address:
                          type: string
                      title: >-
                        MsgSetOrchestratorAddresses

                        this message allows validators to delegate their voting
                        responsibilities

                        to a given key. This key is then used as an optional
                        authentication method

                        for sigining oracle claims

                        VALIDATOR

                        The validator field is a cosmosvaloper1... string (i.e.
                        sdk.ValAddress)

                        that references a validator in the active set

                        ORCHESTRATOR

                        The orchestrator field is a cosmos1... string  (i.e.
                        sdk.AccAddress) that

                        references the key that is being delegated to

                        ETH_ADDRESS

                        This is a hex encoded 0x Ethereum public key that will
                        be used by this

                        validator on Ethereum
                  erc20_to_denoms:
                    type: array
                    items:
                      type: object
                      properties:
                        erc20:
                          type: string
                        denom:
                          type: string
                      title: >-
                        This records the relationship between an ERC20 token and
                        the denom

                        of the corresponding Cosmos originated asset
                  unbatched_transfers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        sender:
                          type: string
                        dest_address:
                          type: string
                        erc20_token:
                          type: object
                          properties:
                            contract:
                              type: string
                            amount:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token, this could
                            be a Cosmos

                            originated token, if so it will be the ERC20 address
                            of the representation

                            (note: developers should look up the token symbol
                            using the address on ETH to

                            display for UI)
                        erc20_fee:
                          type: object
                          properties:
                            contract:
                              type: string
                            amount:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token, this could
                            be a Cosmos

                            originated token, if so it will be the ERC20 address
                            of the representation

                            (note: developers should look up the token symbol
                            using the address on ETH to

                            display for UI)
                      title: >-
                        OutgoingTransferTx represents an individual send from
                        Peggy to ETH
                  last_observed_ethereum_height:
                    type: string
                    format: uint64
                  last_outgoing_batch_id:
                    type: string
                    format: uint64
                  last_outgoing_pool_id:
                    type: string
                    format: uint64
                  last_observed_valset:
                    type: object
                    properties:
                      nonce:
                        type: string
                        format: uint64
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            power:
                              type: string
                              format: uint64
                            ethereum_address:
                              type: string
                          title: >-
                            BridgeValidator represents a validator's ETH address
                            and its power
                      height:
                        type: string
                        format: uint64
                      reward_amount:
                        type: string
                      reward_token:
                        type: string
                        title: >-
                          the reward token in it's Ethereum hex address
                          representation
                    title: >-
                      Valset is the Ethereum Bridge Multsig Set, each peggy
                      validator also

                      maintains an ETH key to sign messages, these are used to
                      check signatures on

                      ETH because of the significant gas savings
                  ethereum_blacklist:
                    type: array
                    items:
                      type: string
                title: GenesisState struct
            description: >-
              QueryModuleStateResponse is the response type for the
              Query/PeggyModuleState

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /peggy/v1/oracle/event/{address}:
    get:
      summary: claim
      operationId: LastEventByAddr
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              last_claim_event:
                type: object
                properties:
                  ethereum_event_nonce:
                    type: string
                    format: uint64
                  ethereum_event_height:
                    type: string
                    format: uint64
                description: LastClaimEvent stores last claim event details of validator.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /peggy/v1/params:
    get:
      summary: Deployments queries deployments
      operationId: PeggyParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  peggy_id:
                    type: string
                  contract_source_hash:
                    type: string
                  bridge_ethereum_address:
                    type: string
                  bridge_chain_id:
                    type: string
                    format: uint64
                  signed_valsets_window:
                    type: string
                    format: uint64
                  signed_batches_window:
                    type: string
                    format: uint64
                  signed_claims_window:
                    type: string
                    format: uint64
                  target_batch_timeout:
                    type: string
                    format: uint64
                  average_block_time:
                    type: string
                    format: uint64
                  average_ethereum_block_time:
                    type: string
                    format: uint64
                  slash_fraction_valset:
                    type: string
                    format: byte
                  slash_fraction_batch:
                    type: string
                    format: byte
                  slash_fraction_claim:
                    type: string
                    format: byte
                  slash_fraction_conflicting_claim:
                    type: string
                    format: byte
                  unbond_slashing_valsets_window:
                    type: string
                    format: uint64
                  slash_fraction_bad_eth_signature:
                    type: string
                    format: byte
                  cosmos_coin_denom:
                    type: string
                  cosmos_coin_erc20_contract:
                    type: string
                  claim_slashing_enabled:
                    type: boolean
                  bridge_contract_start_height:
                    type: string
                    format: uint64
                  valset_reward:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /peggy/v1/pending_send_to_eth:
    get:
      summary: batch
      operationId: GetPendingSendToEth
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              transfers_in_batches:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    sender:
                      type: string
                    dest_address:
                      type: string
                    erc20_token:
                      type: object
                      properties:
                        contract:
                          type: string
                        amount:
                          type: string
                      title: >-
                        ERC20Token unique identifier for an Ethereum ERC20
                        token.

                        CONTRACT:

                        The contract address on ETH of the token, this could be
                        a Cosmos

                        originated token, if so it will be the ERC20 address of
                        the representation

                        (note: developers should look up the token symbol using
                        the address on ETH to

                        display for UI)
                    erc20_fee:
                      type: object
                      properties:
                        contract:
                          type: string
                        amount:
                          type: string
                      title: >-
                        ERC20Token unique identifier for an Ethereum ERC20
                        token.

                        CONTRACT:

                        The contract address on ETH of the token, this could be
                        a Cosmos

                        originated token, if so it will be the ERC20 address of
                        the representation

                        (note: developers should look up the token symbol using
                        the address on ETH to

                        display for UI)
                  title: >-
                    OutgoingTransferTx represents an individual send from Peggy
                    to ETH
              unbatched_transfers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    sender:
                      type: string
                    dest_address:
                      type: string
                    erc20_token:
                      type: object
                      properties:
                        contract:
                          type: string
                        amount:
                          type: string
                      title: >-
                        ERC20Token unique identifier for an Ethereum ERC20
                        token.

                        CONTRACT:

                        The contract address on ETH of the token, this could be
                        a Cosmos

                        originated token, if so it will be the ERC20 address of
                        the representation

                        (note: developers should look up the token symbol using
                        the address on ETH to

                        display for UI)
                    erc20_fee:
                      type: object
                      properties:
                        contract:
                          type: string
                        amount:
                          type: string
                      title: >-
                        ERC20Token unique identifier for an Ethereum ERC20
                        token.

                        CONTRACT:

                        The contract address on ETH of the token, this could be
                        a Cosmos

                        originated token, if so it will be the ERC20 address of
                        the representation

                        (note: developers should look up the token symbol using
                        the address on ETH to

                        display for UI)
                  title: >-
                    OutgoingTransferTx represents an individual send from Peggy
                    to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: sender_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/query_delegate_keys_by_eth:
    get:
      operationId: GetDelegateKeyByEth
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator_address:
                type: string
              orchestrator_address:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: eth_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/query_delegate_keys_by_orchestrator:
    get:
      operationId: GetDelegateKeyByOrchestrator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator_address:
                type: string
              eth_address:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: orchestrator_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/query_delegate_keys_by_validator:
    get:
      operationId: GetDelegateKeyByValidator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              eth_address:
                type: string
              orchestrator_address:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/valset:
    get:
      operationId: ValsetRequest
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valset:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        power:
                          type: string
                          format: uint64
                        ethereum_address:
                          type: string
                      title: >-
                        BridgeValidator represents a validator's ETH address and
                        its power
                  height:
                    type: string
                    format: uint64
                  reward_amount:
                    type: string
                  reward_token:
                    type: string
                    title: >-
                      the reward token in it's Ethereum hex address
                      representation
                title: >-
                  Valset is the Ethereum Bridge Multsig Set, each peggy
                  validator also

                  maintains an ETH key to sign messages, these are used to check
                  signatures on

                  ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Query
  /peggy/v1/valset/confirm:
    get:
      operationId: ValsetConfirm
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              confirm:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  orchestrator:
                    type: string
                  eth_address:
                    type: string
                  signature:
                    type: string
                description: >-
                  MsgValsetConfirm

                  this is the message sent by the validators when they wish to
                  submit their

                  signatures over the validator set at a given block height. A
                  validator must

                  first call MsgSetEthAddress to set their Ethereum address to
                  be used for

                  signing. Then someone (anyone) must make a ValsetRequest the
                  request is

                  essentially a messaging mechanism to determine which block all
                  validators

                  should submit signatures over. Finally validators sign the
                  validator set,

                  powers, and Ethereum addresses of the entire validator set at
                  the height of a

                  ValsetRequest and submit that signature with this message.


                  If a sufficient number of validators (66% of voting power) (A)
                  have set

                  Ethereum addresses and (B) submit ValsetConfirm messages with
                  their

                  signatures it is then possible for anyone to view these
                  signatures in the

                  chain store and submit them to Ethereum to update the
                  validator set

                  -------------
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/valset/current:
    get:
      summary: valset
      operationId: CurrentValset
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valset:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        power:
                          type: string
                          format: uint64
                        ethereum_address:
                          type: string
                      title: >-
                        BridgeValidator represents a validator's ETH address and
                        its power
                  height:
                    type: string
                    format: uint64
                  reward_amount:
                    type: string
                  reward_token:
                    type: string
                    title: >-
                      the reward token in it's Ethereum hex address
                      representation
                title: >-
                  Valset is the Ethereum Bridge Multsig Set, each peggy
                  validator also

                  maintains an ETH key to sign messages, these are used to check
                  signatures on

                  ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /peggy/v1/valset/last:
    get:
      operationId: LastPendingValsetRequestByAddr
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valsets:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          power:
                            type: string
                            format: uint64
                          ethereum_address:
                            type: string
                        title: >-
                          BridgeValidator represents a validator's ETH address
                          and its power
                    height:
                      type: string
                      format: uint64
                    reward_amount:
                      type: string
                    reward_token:
                      type: string
                      title: >-
                        the reward token in it's Ethereum hex address
                        representation
                  title: >-
                    Valset is the Ethereum Bridge Multsig Set, each peggy
                    validator also

                    maintains an ETH key to sign messages, these are used to
                    check signatures on

                    ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /peggy/v1/valset/requests:
    get:
      operationId: LastValsetRequests
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valsets:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          power:
                            type: string
                            format: uint64
                          ethereum_address:
                            type: string
                        title: >-
                          BridgeValidator represents a validator's ETH address
                          and its power
                    height:
                      type: string
                      format: uint64
                    reward_amount:
                      type: string
                    reward_token:
                      type: string
                      title: >-
                        the reward token in it's Ethereum hex address
                        representation
                  title: >-
                    Valset is the Ethereum Bridge Multsig Set, each peggy
                    validator also

                    maintains an ETH key to sign messages, these are used to
                    check signatures on

                    ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /injective/tokenfactory/v1beta1/denoms/{creator}/{sub_denom}/authority_metadata:
    get:
      summary: |-
        DenomAuthorityMetadata defines a gRPC query method for fetching
        DenomAuthorityMetadata for a particular denom.
      operationId: DenomAuthorityMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              authority_metadata:
                type: object
                properties:
                  admin:
                    type: string
                    title: Can be empty for no admin, or a valid injective address
                description: >-
                  DenomAuthorityMetadata specifies metadata for addresses that
                  have specific

                  capabilities over a token factory denom. Right now there is
                  only one Admin

                  permission, but is planned to be extended to the future.
            description: >-
              QueryDenomAuthorityMetadataResponse defines the response structure
              for the

              DenomAuthorityMetadata gRPC query.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: creator
          in: path
          required: true
          type: string
        - name: sub_denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/tokenfactory/v1beta1/denoms_from_creator/{creator}:
    get:
      summary: |-
        DenomsFromCreator defines a gRPC query method for fetching all
        denominations created by a specific admin/creator.
      operationId: DenomsFromCreator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denoms:
                type: array
                items:
                  type: string
            description: >-
              QueryDenomsFromCreatorRequest defines the response structure for
              the

              DenomsFromCreator gRPC query.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: creator
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/tokenfactory/v1beta1/module_state:
    get:
      summary: Retrieves the entire auction module's state
      operationId: TokenfactoryModuleState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              state:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      denom_creation_fee:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                  factory_denoms:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        authority_metadata:
                          type: object
                          properties:
                            admin:
                              type: string
                              title: >-
                                Can be empty for no admin, or a valid injective
                                address
                          description: >-
                            DenomAuthorityMetadata specifies metadata for
                            addresses that have specific

                            capabilities over a token factory denom. Right now
                            there is only one Admin

                            permission, but is planned to be extended to the
                            future.
                        name:
                          type: string
                        symbol:
                          type: string
                      description: >-
                        GenesisDenom defines a tokenfactory denom that is
                        defined within genesis

                        state. The structure contains DenomAuthorityMetadata
                        which defines the

                        denom's admin.
                description: GenesisState defines the tokenfactory module's genesis state.
            description: |-
              QueryModuleStateResponse is the response type for the
              Query/TokenfactoryModuleState RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/tokenfactory/v1beta1/params:
    get:
      summary: >-
        Params defines a gRPC query method that returns the tokenfactory
        module's

        parameters.
      operationId: TokenfactoryParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  denom_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      summary: AccountInfo queries account info which is common to all account types.
      description: 'Since: cosmos-sdk 0.47'
      operationId: AccountInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              info:
                description: info is the account info which is represented by BaseAccount.
                type: object
                properties:
                  address:
                    type: string
                  pub_key:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  account_number:
                    type: string
                    format: uint64
                  sequence:
                    type: string
                    format: uint64
            description: |-
              QueryAccountInfoResponse is the Query/AccountInfo response type.

              Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the account address string.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts:
    get:
      summary: Accounts returns all the existing accounts.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.43
      operationId: Accounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                title: accounts are the existing accounts
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAccountsResponse is the response type for the Query/Accounts
              RPC method.


              Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      summary: Account returns account details based on address.
      operationId: AuthAccount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryAccountResponse is the response type for the Query/Account
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address defines the address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      summary: AccountAddressByID returns account address based on account number.
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account_address:
                type: string
            description: 'Since: cosmos-sdk 0.46.2'
            title: >-
              QueryAccountAddressByIDResponse is the response type for
              AccountAddressByID rpc method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: |-
            Deprecated, use account_id instead

            id is the account number of the address to be queried. This field
            should have been an uint64 (like all account numbers), and will be
            updated to uint64 in a future version of the auth query.
          in: path
          required: true
          type: string
          format: int64
        - name: account_id
          description: |-
            account_id is the account number of the address to be queried.

            Since: cosmos-sdk 0.47
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32:
    get:
      summary: Bech32Prefix queries bech32Prefix
      description: 'Since: cosmos-sdk 0.46'
      operationId: Bech32Prefix
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bech32_prefix:
                type: string
            description: >-
              Bech32PrefixResponse is the response type for Bech32Prefix rpc
              method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      summary: AddressBytesToString converts Account Address bytes to string
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressBytesToString
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address_string:
                type: string
            description: >-
              AddressBytesToStringResponse is the response type for
              AddressString rpc method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address_bytes
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      summary: AddressStringToBytes converts Address string to bytes
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressStringToBytes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address_bytes:
                type: string
                format: byte
            description: >-
              AddressStringToBytesResponse is the response type for AddressBytes
              rpc method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address_string
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      summary: ModuleAccounts returns all the existing module accounts.
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
            description: >-
              QueryModuleAccountsResponse is the response type for the
              Query/ModuleAccounts RPC method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      summary: ModuleAccountByName returns the module account info by module name
      operationId: ModuleAccountByName
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryModuleAccountByNameResponse is the response type for the
              Query/ModuleAccountByName RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: name
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/params:
    get:
      summary: Params queries all parameters.
      operationId: AuthParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_memo_characters:
                    type: string
                    format: uint64
                  tx_sig_limit:
                    type: string
                    format: uint64
                  tx_size_cost_per_byte:
                    type: string
                    format: uint64
                  sig_verify_cost_ed25519:
                    type: string
                    format: uint64
                  sig_verify_cost_secp256k1:
                    type: string
                    format: uint64
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/authz/v1beta1/grants:
    get:
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      operationId: Grants
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              grants:
                type: array
                items:
                  type: object
                  properties:
                    authorization:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    expiration:
                      type: string
                      format: date-time
                      title: >-
                        time when the grant will expire and will be pruned. If
                        null, then the grant

                        doesn't have a time expiration (other conditions  in
                        `authorization`

                        may apply to invalidate the grant)
                  description: |-
                    Grant gives permissions to execute
                    the provide method with expiration time.
                description: >-
                  authorizations is a list of grants granted for grantee by
                  granter.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryGrantsResponse is the response type for the
              Query/Authorizations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: granter
          in: query
          required: false
          type: string
        - name: grantee
          in: query
          required: false
          type: string
        - name: msg_type_url
          description: >-
            Optional, msg_type_url, when set, will query only grants matching
            given msg type.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              grants:
                type: array
                items:
                  type: object
                  properties:
                    granter:
                      type: string
                    grantee:
                      type: string
                    authorization:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    expiration:
                      type: string
                      format: date-time
                  title: >-
                    GrantAuthorization extends a grant with both the addresses
                    of the grantee and granter.

                    It is used in genesis.proto and query.proto
                description: grants is a list of grants granted to the grantee.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryGranteeGrantsResponse is the response type for the
              Query/GranteeGrants RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: grantee
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              grants:
                type: array
                items:
                  type: object
                  properties:
                    granter:
                      type: string
                    grantee:
                      type: string
                    authorization:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    expiration:
                      type: string
                      format: date-time
                  title: >-
                    GrantAuthorization extends a grant with both the addresses
                    of the grantee and granter.

                    It is used in genesis.proto and query.proto
                description: grants is a list of grants granted by the granter.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryGranterGrantsResponse is the response type for the
              Query/GranterGrants RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: granter
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      summary: AllBalances queries the balance of all coins for a single account.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: AllBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: balances is the balances of all the coins.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllBalancesResponse is the response type for the
              Query/AllBalances RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      summary: Balance queries the balance of a single coin for a single account.
      operationId: BankBalance
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: denom
          description: denom is the coin denom to query balances for.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      summary: >-
        DenomOwners queries for all account addresses that own a particular
        token

        denomination.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.46
      operationId: DenomOwners
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denom_owners:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: >-
                        address defines the address that owns a particular
                        denomination.
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    DenomOwner defines structure representing an account that
                    owns or holds a

                    particular denominated token. It contains the account
                    address and account

                    balance of the denominated token.


                    Since: cosmos-sdk 0.46
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryDenomOwnersResponse defines the RPC response of a DenomOwners
              RPC query.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: >-
            denom defines the coin denomination to query all account holders
            for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadatas:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                    denom_units:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            description: >-
                              denom represents the string name of the given
                              denom unit (e.g uatom).
                          exponent:
                            type: integer
                            format: int64
                            description: >-
                              exponent represents power of 10 exponent that one
                              must

                              raise the base_denom to in order to equal the
                              given DenomUnit's denom

                              1 denom = 10^exponent base_denom

                              (e.g. with a base_denom of uatom, one can create a
                              DenomUnit of 'atom' with

                              exponent = 6, thus: 1 atom = 10^6 uatom).
                          aliases:
                            type: array
                            items:
                              type: string
                            title: >-
                              aliases is a list of string aliases for the given
                              denom
                        description: |-
                          DenomUnit represents a struct that describes a given
                          denomination unit of the basic token.
                      title: >-
                        denom_units represents the list of DenomUnit's for a
                        given coin
                    base:
                      type: string
                      description: >-
                        base represents the base denom (should be the DenomUnit
                        with exponent = 0).
                    display:
                      type: string
                      description: |-
                        display indicates the suggested denom that should be
                        displayed in clients.
                    name:
                      type: string
                      description: 'Since: cosmos-sdk 0.43'
                      title: 'name defines the name of the token (eg: Cosmos Atom)'
                    symbol:
                      type: string
                      description: >-
                        symbol is the token symbol usually shown on exchanges
                        (eg: ATOM). This can

                        be the same as the display.


                        Since: cosmos-sdk 0.43
                    uri:
                      type: string
                      description: >-
                        URI to a document (on or off-chain) that contains
                        additional information. Optional.


                        Since: cosmos-sdk 0.46
                    uri_hash:
                      type: string
                      description: >-
                        URIHash is a sha256 hash of a document pointed by URI.
                        It's used to verify that

                        the document didn't change. Optional.


                        Since: cosmos-sdk 0.46
                  description: |-
                    Metadata represents a struct that describes
                    a basic token.
                description: >-
                  metadata provides the client information for all the
                  registered tokens.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryDenomsMetadataResponse is the response type for the
              Query/DenomsMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadata:
                type: object
                properties:
                  description:
                    type: string
                  denom_units:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          description: >-
                            denom represents the string name of the given denom
                            unit (e.g uatom).
                        exponent:
                          type: integer
                          format: int64
                          description: >-
                            exponent represents power of 10 exponent that one
                            must

                            raise the base_denom to in order to equal the given
                            DenomUnit's denom

                            1 denom = 10^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a
                            DenomUnit of 'atom' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).
                        aliases:
                          type: array
                          items:
                            type: string
                          title: >-
                            aliases is a list of string aliases for the given
                            denom
                      description: |-
                        DenomUnit represents a struct that describes a given
                        denomination unit of the basic token.
                    title: >-
                      denom_units represents the list of DenomUnit's for a given
                      coin
                  base:
                    type: string
                    description: >-
                      base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                  display:
                    type: string
                    description: |-
                      display indicates the suggested denom that should be
                      displayed in clients.
                  name:
                    type: string
                    description: 'Since: cosmos-sdk 0.43'
                    title: 'name defines the name of the token (eg: Cosmos Atom)'
                  symbol:
                    type: string
                    description: >-
                      symbol is the token symbol usually shown on exchanges (eg:
                      ATOM). This can

                      be the same as the display.


                      Since: cosmos-sdk 0.43
                  uri:
                    type: string
                    description: >-
                      URI to a document (on or off-chain) that contains
                      additional information. Optional.


                      Since: cosmos-sdk 0.46
                  uri_hash:
                    type: string
                    description: >-
                      URIHash is a sha256 hash of a document pointed by URI.
                      It's used to verify that

                      the document didn't change. Optional.


                      Since: cosmos-sdk 0.46
                description: |-
                  Metadata represents a struct that describes
                  a basic token.
            description: >-
              QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query the metadata for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/params:
    get:
      summary: Params queries the parameters of x/bank module.
      operationId: BankParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  send_enabled:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      description: >-
                        SendEnabled maps coin denom to a send_enabled status
                        (whether a denom is

                        sendable).
                    description: >-
                      Deprecated: Use of SendEnabled in params is deprecated.

                      For genesis, use the newly added send_enabled field in the
                      genesis object.

                      Storage, lookup, and manipulation of this information is
                      now in the keeper.


                      As of cosmos-sdk 0.47, this only exists for backwards
                      compatibility of genesis files.
                  default_send_enabled:
                    type: boolean
                description: Params defines the parameters for the bank module.
            description: >-
              QueryParamsResponse defines the response type for querying x/bank
              parameters.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/bank/v1beta1/send_enabled:
    get:
      summary: SendEnabled queries for SendEnabled entries.
      description: >-
        This query only returns denominations that have specific SendEnabled
        settings.

        Any denomination that does not have a specific setting will use the
        default

        params.default_send_enabled, and will not be returned by this query.


        Since: cosmos-sdk 0.47
      operationId: SendEnabled
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              send_enabled:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    enabled:
                      type: boolean
                  description: >-
                    SendEnabled maps coin denom to a send_enabled status
                    (whether a denom is

                    sendable).
              pagination:
                description: >-
                  pagination defines the pagination in the response. This field
                  is only

                  populated if the denoms field in the request is empty.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QuerySendEnabledResponse defines the RPC response of a SendEnable
              query.


              Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denoms
          description: >-
            denoms is the specific denoms you want look up. Leave empty to get
            all entries.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      summary: >-
        SpendableBalances queries the spendable balance of all coins for a
        single

        account.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.46
      operationId: SpendableBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: balances is the spendable balances of all the coins.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QuerySpendableBalancesResponse defines the gRPC response structure
              for querying

              an account's spendable balances.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query spendable balances for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      summary: >-
        SpendableBalanceByDenom queries the spendable balance of a single denom
        for

        a single account.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.47
      operationId: SpendableBalanceByDenom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QuerySpendableBalanceByDenomResponse defines the gRPC response
              structure for

              querying an account's spendable balance for a specific denom.


              Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: denom
          description: denom is the coin denom to query balances for.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/supply:
    get:
      summary: TotalSupply queries the total supply of all coins.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: TotalSupply
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supply:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: supply is the supply of the coins
              pagination:
                description: |-
                  pagination defines the pagination in the response.

                  Since: cosmos-sdk 0.43
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryTotalSupplyResponse is the response type for the
              Query/TotalSupply RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      summary: SupplyOf queries the supply of a single coin.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: SupplyOf
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QuerySupplyOfResponse is the response type for the Query/SupplyOf
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query balances for.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      summary: >-
        ABCIQuery defines a query handler that supports ABCI queries directly to
        the

        application, bypassing Tendermint completely. The ABCI query must
        contain

        a valid and supported path, including app, custom, p2p, and store.
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int64
              log:
                type: string
              info:
                type: string
              index:
                type: string
                format: int64
              key:
                type: string
                format: byte
              value:
                type: string
                format: byte
              proof_ops:
                type: object
                properties:
                  ops:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        key:
                          type: string
                          format: byte
                        data:
                          type: string
                          format: byte
                      description: >-
                        ProofOp defines an operation used for calculating Merkle
                        root. The data could

                        be arbitrary format, providing necessary data for
                        example neighbouring node

                        hash.


                        Note: This type is a duplicate of the ProofOp proto type
                        defined in Tendermint.
                description: >-
                  ProofOps is Merkle proof defined by the list of ProofOps.


                  Note: This type is a duplicate of the ProofOps proto type
                  defined in Tendermint.
              height:
                type: string
                format: int64
              codespace:
                type: string
            description: >-
              ABCIQueryResponse defines the response structure for the ABCIQuery
              gRPC query.


              Note: This type is a duplicate of the ResponseQuery proto type
              defined in

              Tendermint.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: data
          in: query
          required: false
          type: string
          format: byte
        - name: path
          in: query
          required: false
          type: string
        - name: height
          in: query
          required: false
          type: string
          format: int64
        - name: prove
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      summary: GetLatestBlock returns the latest block.
      operationId: GetLatestBlock
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              block:
                title: 'Deprecated: please use `sdk_block` instead'
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        format: byte
                    description: Header defines the structure of a Tendermint block header.
                  data:
                    type: object
                    properties:
                      txs:
                        type: array
                        items:
                          type: string
                          format: byte
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                    title: >-
                      Data contains the set of transactions included in the
                      block
                  evidence:
                    type: object
                    properties:
                      evidence:
                        type: array
                        items:
                          type: object
                          properties:
                            duplicate_vote_evidence:
                              type: object
                              properties:
                                vote_a:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                vote_b:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                total_voting_power:
                                  type: string
                                  format: int64
                                validator_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                            light_client_attack_evidence:
                              type: object
                              properties:
                                conflicting_block:
                                  type: object
                                  properties:
                                    signed_header:
                                      type: object
                                      properties:
                                        header:
                                          type: object
                                          properties:
                                            version:
                                              title: basic block info
                                              type: object
                                              properties:
                                                block:
                                                  type: string
                                                  format: uint64
                                                app:
                                                  type: string
                                                  format: uint64
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                            chain_id:
                                              type: string
                                            height:
                                              type: string
                                              format: int64
                                            time:
                                              type: string
                                              format: date-time
                                            last_block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            last_commit_hash:
                                              type: string
                                              format: byte
                                              title: hashes of block data
                                            data_hash:
                                              type: string
                                              format: byte
                                            validators_hash:
                                              type: string
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                            next_validators_hash:
                                              type: string
                                              format: byte
                                            consensus_hash:
                                              type: string
                                              format: byte
                                            app_hash:
                                              type: string
                                              format: byte
                                            last_results_hash:
                                              type: string
                                              format: byte
                                            evidence_hash:
                                              type: string
                                              format: byte
                                              title: consensus info
                                            proposer_address:
                                              type: string
                                              format: byte
                                          description: >-
                                            Header defines the structure of a
                                            Tendermint block header.
                                        commit:
                                          type: object
                                          properties:
                                            height:
                                              type: string
                                              format: int64
                                            round:
                                              type: integer
                                              format: int32
                                            block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            signatures:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  block_id_flag:
                                                    type: string
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    title: >-
                                                      BlockIdFlag indicates which BlcokID the
                                                      signature is for
                                                  validator_address:
                                                    type: string
                                                    format: byte
                                                  timestamp:
                                                    type: string
                                                    format: date-time
                                                  signature:
                                                    type: string
                                                    format: byte
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                    validator_set:
                                      type: object
                                      properties:
                                        validators:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              address:
                                                type: string
                                                format: byte
                                              pub_key:
                                                type: object
                                                properties:
                                                  ed25519:
                                                    type: string
                                                    format: byte
                                                  secp256k1:
                                                    type: string
                                                    format: byte
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Tendermint Validators
                                              voting_power:
                                                type: string
                                                format: int64
                                              proposer_priority:
                                                type: string
                                                format: int64
                                        proposer:
                                          type: object
                                          properties:
                                            address:
                                              type: string
                                              format: byte
                                            pub_key:
                                              type: object
                                              properties:
                                                ed25519:
                                                  type: string
                                                  format: byte
                                                secp256k1:
                                                  type: string
                                                  format: byte
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Tendermint Validators
                                            voting_power:
                                              type: string
                                              format: int64
                                            proposer_priority:
                                              type: string
                                              format: int64
                                        total_voting_power:
                                          type: string
                                          format: int64
                                common_height:
                                  type: string
                                  format: int64
                                byzantine_validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                  last_commit:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      signatures:
                        type: array
                        items:
                          type: object
                          properties:
                            block_id_flag:
                              type: string
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              default: BLOCK_ID_FLAG_UNKNOWN
                              title: >-
                                BlockIdFlag indicates which BlcokID the
                                signature is for
                            validator_address:
                              type: string
                              format: byte
                            timestamp:
                              type: string
                              format: date-time
                            signature:
                              type: string
                              format: byte
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
              sdk_block:
                title: 'Since: cosmos-sdk 0.47'
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        description: >-
                          proposer_address is the original block proposer
                          address, formatted as a Bech32 string.

                          In Tendermint, this type is `bytes`, but in the SDK,
                          we convert it to a Bech32 string

                          for better UX.
                    description: Header defines the structure of a Tendermint block header.
                  data:
                    type: object
                    properties:
                      txs:
                        type: array
                        items:
                          type: string
                          format: byte
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                    title: >-
                      Data contains the set of transactions included in the
                      block
                  evidence:
                    type: object
                    properties:
                      evidence:
                        type: array
                        items:
                          type: object
                          properties:
                            duplicate_vote_evidence:
                              type: object
                              properties:
                                vote_a:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                vote_b:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                total_voting_power:
                                  type: string
                                  format: int64
                                validator_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                            light_client_attack_evidence:
                              type: object
                              properties:
                                conflicting_block:
                                  type: object
                                  properties:
                                    signed_header:
                                      type: object
                                      properties:
                                        header:
                                          type: object
                                          properties:
                                            version:
                                              title: basic block info
                                              type: object
                                              properties:
                                                block:
                                                  type: string
                                                  format: uint64
                                                app:
                                                  type: string
                                                  format: uint64
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                            chain_id:
                                              type: string
                                            height:
                                              type: string
                                              format: int64
                                            time:
                                              type: string
                                              format: date-time
                                            last_block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            last_commit_hash:
                                              type: string
                                              format: byte
                                              title: hashes of block data
                                            data_hash:
                                              type: string
                                              format: byte
                                            validators_hash:
                                              type: string
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                            next_validators_hash:
                                              type: string
                                              format: byte
                                            consensus_hash:
                                              type: string
                                              format: byte
                                            app_hash:
                                              type: string
                                              format: byte
                                            last_results_hash:
                                              type: string
                                              format: byte
                                            evidence_hash:
                                              type: string
                                              format: byte
                                              title: consensus info
                                            proposer_address:
                                              type: string
                                              format: byte
                                          description: >-
                                            Header defines the structure of a
                                            Tendermint block header.
                                        commit:
                                          type: object
                                          properties:
                                            height:
                                              type: string
                                              format: int64
                                            round:
                                              type: integer
                                              format: int32
                                            block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            signatures:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  block_id_flag:
                                                    type: string
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    title: >-
                                                      BlockIdFlag indicates which BlcokID the
                                                      signature is for
                                                  validator_address:
                                                    type: string
                                                    format: byte
                                                  timestamp:
                                                    type: string
                                                    format: date-time
                                                  signature:
                                                    type: string
                                                    format: byte
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                    validator_set:
                                      type: object
                                      properties:
                                        validators:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              address:
                                                type: string
                                                format: byte
                                              pub_key:
                                                type: object
                                                properties:
                                                  ed25519:
                                                    type: string
                                                    format: byte
                                                  secp256k1:
                                                    type: string
                                                    format: byte
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Tendermint Validators
                                              voting_power:
                                                type: string
                                                format: int64
                                              proposer_priority:
                                                type: string
                                                format: int64
                                        proposer:
                                          type: object
                                          properties:
                                            address:
                                              type: string
                                              format: byte
                                            pub_key:
                                              type: object
                                              properties:
                                                ed25519:
                                                  type: string
                                                  format: byte
                                                secp256k1:
                                                  type: string
                                                  format: byte
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Tendermint Validators
                                            voting_power:
                                              type: string
                                              format: int64
                                            proposer_priority:
                                              type: string
                                              format: int64
                                        total_voting_power:
                                          type: string
                                          format: int64
                                common_height:
                                  type: string
                                  format: int64
                                byzantine_validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                  last_commit:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      signatures:
                        type: array
                        items:
                          type: object
                          properties:
                            block_id_flag:
                              type: string
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              default: BLOCK_ID_FLAG_UNKNOWN
                              title: >-
                                BlockIdFlag indicates which BlcokID the
                                signature is for
                            validator_address:
                              type: string
                              format: byte
                            timestamp:
                              type: string
                              format: date-time
                            signature:
                              type: string
                              format: byte
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                description: >-
                  Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.
            description: >-
              GetLatestBlockResponse is the response type for the
              Query/GetLatestBlock RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      summary: GetBlockByHeight queries block for given height.
      operationId: GetBlockByHeight
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              block:
                title: 'Deprecated: please use `sdk_block` instead'
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        format: byte
                    description: Header defines the structure of a Tendermint block header.
                  data:
                    type: object
                    properties:
                      txs:
                        type: array
                        items:
                          type: string
                          format: byte
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                    title: >-
                      Data contains the set of transactions included in the
                      block
                  evidence:
                    type: object
                    properties:
                      evidence:
                        type: array
                        items:
                          type: object
                          properties:
                            duplicate_vote_evidence:
                              type: object
                              properties:
                                vote_a:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                vote_b:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                total_voting_power:
                                  type: string
                                  format: int64
                                validator_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                            light_client_attack_evidence:
                              type: object
                              properties:
                                conflicting_block:
                                  type: object
                                  properties:
                                    signed_header:
                                      type: object
                                      properties:
                                        header:
                                          type: object
                                          properties:
                                            version:
                                              title: basic block info
                                              type: object
                                              properties:
                                                block:
                                                  type: string
                                                  format: uint64
                                                app:
                                                  type: string
                                                  format: uint64
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                            chain_id:
                                              type: string
                                            height:
                                              type: string
                                              format: int64
                                            time:
                                              type: string
                                              format: date-time
                                            last_block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            last_commit_hash:
                                              type: string
                                              format: byte
                                              title: hashes of block data
                                            data_hash:
                                              type: string
                                              format: byte
                                            validators_hash:
                                              type: string
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                            next_validators_hash:
                                              type: string
                                              format: byte
                                            consensus_hash:
                                              type: string
                                              format: byte
                                            app_hash:
                                              type: string
                                              format: byte
                                            last_results_hash:
                                              type: string
                                              format: byte
                                            evidence_hash:
                                              type: string
                                              format: byte
                                              title: consensus info
                                            proposer_address:
                                              type: string
                                              format: byte
                                          description: >-
                                            Header defines the structure of a
                                            Tendermint block header.
                                        commit:
                                          type: object
                                          properties:
                                            height:
                                              type: string
                                              format: int64
                                            round:
                                              type: integer
                                              format: int32
                                            block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            signatures:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  block_id_flag:
                                                    type: string
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    title: >-
                                                      BlockIdFlag indicates which BlcokID the
                                                      signature is for
                                                  validator_address:
                                                    type: string
                                                    format: byte
                                                  timestamp:
                                                    type: string
                                                    format: date-time
                                                  signature:
                                                    type: string
                                                    format: byte
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                    validator_set:
                                      type: object
                                      properties:
                                        validators:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              address:
                                                type: string
                                                format: byte
                                              pub_key:
                                                type: object
                                                properties:
                                                  ed25519:
                                                    type: string
                                                    format: byte
                                                  secp256k1:
                                                    type: string
                                                    format: byte
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Tendermint Validators
                                              voting_power:
                                                type: string
                                                format: int64
                                              proposer_priority:
                                                type: string
                                                format: int64
                                        proposer:
                                          type: object
                                          properties:
                                            address:
                                              type: string
                                              format: byte
                                            pub_key:
                                              type: object
                                              properties:
                                                ed25519:
                                                  type: string
                                                  format: byte
                                                secp256k1:
                                                  type: string
                                                  format: byte
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Tendermint Validators
                                            voting_power:
                                              type: string
                                              format: int64
                                            proposer_priority:
                                              type: string
                                              format: int64
                                        total_voting_power:
                                          type: string
                                          format: int64
                                common_height:
                                  type: string
                                  format: int64
                                byzantine_validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                  last_commit:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      signatures:
                        type: array
                        items:
                          type: object
                          properties:
                            block_id_flag:
                              type: string
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              default: BLOCK_ID_FLAG_UNKNOWN
                              title: >-
                                BlockIdFlag indicates which BlcokID the
                                signature is for
                            validator_address:
                              type: string
                              format: byte
                            timestamp:
                              type: string
                              format: date-time
                            signature:
                              type: string
                              format: byte
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
              sdk_block:
                title: 'Since: cosmos-sdk 0.47'
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        description: >-
                          proposer_address is the original block proposer
                          address, formatted as a Bech32 string.

                          In Tendermint, this type is `bytes`, but in the SDK,
                          we convert it to a Bech32 string

                          for better UX.
                    description: Header defines the structure of a Tendermint block header.
                  data:
                    type: object
                    properties:
                      txs:
                        type: array
                        items:
                          type: string
                          format: byte
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                    title: >-
                      Data contains the set of transactions included in the
                      block
                  evidence:
                    type: object
                    properties:
                      evidence:
                        type: array
                        items:
                          type: object
                          properties:
                            duplicate_vote_evidence:
                              type: object
                              properties:
                                vote_a:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                vote_b:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                total_voting_power:
                                  type: string
                                  format: int64
                                validator_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                            light_client_attack_evidence:
                              type: object
                              properties:
                                conflicting_block:
                                  type: object
                                  properties:
                                    signed_header:
                                      type: object
                                      properties:
                                        header:
                                          type: object
                                          properties:
                                            version:
                                              title: basic block info
                                              type: object
                                              properties:
                                                block:
                                                  type: string
                                                  format: uint64
                                                app:
                                                  type: string
                                                  format: uint64
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                            chain_id:
                                              type: string
                                            height:
                                              type: string
                                              format: int64
                                            time:
                                              type: string
                                              format: date-time
                                            last_block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            last_commit_hash:
                                              type: string
                                              format: byte
                                              title: hashes of block data
                                            data_hash:
                                              type: string
                                              format: byte
                                            validators_hash:
                                              type: string
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                            next_validators_hash:
                                              type: string
                                              format: byte
                                            consensus_hash:
                                              type: string
                                              format: byte
                                            app_hash:
                                              type: string
                                              format: byte
                                            last_results_hash:
                                              type: string
                                              format: byte
                                            evidence_hash:
                                              type: string
                                              format: byte
                                              title: consensus info
                                            proposer_address:
                                              type: string
                                              format: byte
                                          description: >-
                                            Header defines the structure of a
                                            Tendermint block header.
                                        commit:
                                          type: object
                                          properties:
                                            height:
                                              type: string
                                              format: int64
                                            round:
                                              type: integer
                                              format: int32
                                            block_id:
                                              type: object
                                              properties:
                                                hash:
                                                  type: string
                                                  format: byte
                                                part_set_header:
                                                  type: object
                                                  properties:
                                                    total:
                                                      type: integer
                                                      format: int64
                                                    hash:
                                                      type: string
                                                      format: byte
                                                  title: PartsetHeader
                                              title: BlockID
                                            signatures:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  block_id_flag:
                                                    type: string
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    title: >-
                                                      BlockIdFlag indicates which BlcokID the
                                                      signature is for
                                                  validator_address:
                                                    type: string
                                                    format: byte
                                                  timestamp:
                                                    type: string
                                                    format: date-time
                                                  signature:
                                                    type: string
                                                    format: byte
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                    validator_set:
                                      type: object
                                      properties:
                                        validators:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              address:
                                                type: string
                                                format: byte
                                              pub_key:
                                                type: object
                                                properties:
                                                  ed25519:
                                                    type: string
                                                    format: byte
                                                  secp256k1:
                                                    type: string
                                                    format: byte
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Tendermint Validators
                                              voting_power:
                                                type: string
                                                format: int64
                                              proposer_priority:
                                                type: string
                                                format: int64
                                        proposer:
                                          type: object
                                          properties:
                                            address:
                                              type: string
                                              format: byte
                                            pub_key:
                                              type: object
                                              properties:
                                                ed25519:
                                                  type: string
                                                  format: byte
                                                secp256k1:
                                                  type: string
                                                  format: byte
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Tendermint Validators
                                            voting_power:
                                              type: string
                                              format: int64
                                            proposer_priority:
                                              type: string
                                              format: int64
                                        total_voting_power:
                                          type: string
                                          format: int64
                                common_height:
                                  type: string
                                  format: int64
                                byzantine_validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                  last_commit:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      signatures:
                        type: array
                        items:
                          type: object
                          properties:
                            block_id_flag:
                              type: string
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              default: BLOCK_ID_FLAG_UNKNOWN
                              title: >-
                                BlockIdFlag indicates which BlcokID the
                                signature is for
                            validator_address:
                              type: string
                              format: byte
                            timestamp:
                              type: string
                              format: date-time
                            signature:
                              type: string
                              format: byte
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                description: >-
                  Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.
            description: >-
              GetBlockByHeightResponse is the response type for the
              Query/GetBlockByHeight RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: height
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      summary: GetNodeInfo queries the current node info.
      operationId: GetNodeInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              default_node_info:
                type: object
                properties:
                  protocol_version:
                    type: object
                    properties:
                      p2p:
                        type: string
                        format: uint64
                      block:
                        type: string
                        format: uint64
                      app:
                        type: string
                        format: uint64
                  default_node_id:
                    type: string
                  listen_addr:
                    type: string
                  network:
                    type: string
                  version:
                    type: string
                  channels:
                    type: string
                    format: byte
                  moniker:
                    type: string
                  other:
                    type: object
                    properties:
                      tx_index:
                        type: string
                      rpc_address:
                        type: string
              application_version:
                type: object
                properties:
                  name:
                    type: string
                  app_name:
                    type: string
                  version:
                    type: string
                  git_commit:
                    type: string
                  build_tags:
                    type: string
                  go_version:
                    type: string
                  build_deps:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          title: module path
                        version:
                          type: string
                          title: module version
                        sum:
                          type: string
                          title: checksum
                      title: Module is the type for VersionInfo
                  cosmos_sdk_version:
                    type: string
                    title: 'Since: cosmos-sdk 0.43'
                description: VersionInfo is the type for the GetNodeInfoResponse message.
            description: >-
              GetNodeInfoResponse is the response type for the Query/GetNodeInfo
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      summary: GetSyncing queries node syncing.
      operationId: GetSyncing
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              syncing:
                type: boolean
            description: >-
              GetSyncingResponse is the response type for the Query/GetSyncing
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: GetLatestValidatorSet
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              block_height:
                type: string
                format: int64
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    pub_key:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                  description: Validator is the type for the validator-set.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              GetLatestValidatorSetResponse is the response type for the
              Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: GetValidatorSetByHeight
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              block_height:
                type: string
                format: int64
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    pub_key:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                  description: Validator is the type for the validator-set.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              GetValidatorSetByHeightResponse is the response type for the
              Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: height
          in: path
          required: true
          type: string
          format: int64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/consensus/v1/params:
    get:
      summary: Params queries the parameters of x/consensus_param module.
      operationId: ConsensusParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: >-
                  params are the tendermint consensus params stored in the
                  consensus module.

                  Please note that `params.version` is not populated in this
                  response, it is

                  tracked separately in the x/upgrade module.
                type: object
                properties:
                  block:
                    type: object
                    properties:
                      max_bytes:
                        type: string
                        format: int64
                        title: |-
                          Max block size, in bytes.
                          Note: must be greater than 0
                      max_gas:
                        type: string
                        format: int64
                        title: |-
                          Max gas per block.
                          Note: must be greater or equal to -1
                      time_iota_ms:
                        type: string
                        format: int64
                        description: >-
                          Minimum time increment between consecutive blocks (in
                          milliseconds) If the

                          block header timestamp is ahead of the system clock,
                          decrease this value.


                          Not exposed to the application.
                    description: BlockParams contains limits on the block size.
                  evidence:
                    type: object
                    properties:
                      max_age_num_blocks:
                        type: string
                        format: int64
                        description: >-
                          Max age of evidence, in blocks.


                          The basic formula for calculating this is:
                          MaxAgeDuration / {average block

                          time}.
                      max_age_duration:
                        type: string
                        description: >-
                          Max age of evidence, in time.


                          It should correspond with an app's "unbonding period"
                          or other similar

                          mechanism for handling [Nothing-At-Stake

                          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                      max_bytes:
                        type: string
                        format: int64
                        title: >-
                          This sets the maximum size of total evidence in bytes
                          that can be committed in a single block.

                          and should fall comfortably under the max block bytes.

                          Default is 1048576 or 1MB
                    description: >-
                      EvidenceParams determine how we handle evidence of
                      malfeasance.
                  validator:
                    type: object
                    properties:
                      pub_key_types:
                        type: array
                        items:
                          type: string
                    description: >-
                      ValidatorParams restrict the public key types validators
                      can use.

                      NOTE: uses ABCI pubkey naming, not Amino names.
                  version:
                    type: object
                    properties:
                      app_version:
                        type: string
                        format: uint64
                    description: VersionParams contains the ABCI application version.
            description: >-
              QueryParamsResponse defines the response type for querying
              x/consensus parameters.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/distribution/v1beta1/community_pool:
    get:
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: pool defines community pool's coins.
            description: >-
              QueryCommunityPoolResponse is the response type for the
              Query/CommunityPool

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    validator_address:
                      type: string
                    reward:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                  description: |-
                    DelegationDelegatorReward represents the properties
                    of a delegator's delegation reward.
                description: rewards defines all the rewards accrued by a delegator.
              total:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: total defines the sum of all the rewards.
            description: |-
              QueryDelegationTotalRewardsResponse is the response type for the
              Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: rewards defines the rewards accrued by a delegation.
            description: |-
              QueryDelegationRewardsResponse is the response type for the
              Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DistDelegatorValidators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: string
                description: >-
                  validators defines the validators a delegator is delegating
                  for.
            description: |-
              QueryDelegatorValidatorsResponse is the response type for the
              Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraw_address:
                type: string
                description: withdraw_address defines the delegator address to query for.
            description: |-
              QueryDelegatorWithdrawAddressResponse is the response type for the
              Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/params:
    get:
      summary: Params queries params of the distribution module.
      operationId: DistributionParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  community_tax:
                    type: string
                  base_proposer_reward:
                    type: string
                    description: >-
                      Deprecated: The base_proposer_reward field is deprecated
                      and is no longer used

                      in the x/distribution module's reward mechanism.
                  bonus_proposer_reward:
                    type: string
                    description: >-
                      Deprecated: The bonus_proposer_reward field is deprecated
                      and is no longer used

                      in the x/distribution module's reward mechanism.
                  withdraw_addr_enabled:
                    type: boolean
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}:
    get:
      summary: >-
        ValidatorDistributionInfo queries validator commission and
        self-delegation rewards for validator
      operationId: ValidatorDistributionInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the validator operator address.
              self_bond_rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: self_bond_rewards defines the self delegations rewards.
              commission:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: commission defines the commission the validator received.
            description: >-
              QueryValidatorDistributionInfoResponse is the response type for
              the Query/ValidatorDistributionInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              commission:
                description: commission defines the commission the validator received.
                type: object
                properties:
                  commission:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
            title: |-
              QueryValidatorCommissionResponse is the response type for the
              Query/ValidatorCommission RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                description: >-
                  ValidatorOutstandingRewards represents outstanding
                  (un-withdrawn) rewards

                  for a validator inexpensive to track, allows simple sanity
                  checks.
            description: >-
              QueryValidatorOutstandingRewardsResponse is the response type for
              the

              Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              slashes:
                type: array
                items:
                  type: object
                  properties:
                    validator_period:
                      type: string
                      format: uint64
                    fraction:
                      type: string
                  description: >-
                    ValidatorSlashEvent represents a validator slash event.

                    Height is implicit within the store key.

                    This is needed to calculate appropriate amount of staking
                    tokens

                    for delegations which are withdrawn after a slash has
                    occurred.
                description: slashes defines the slashes the validator received.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryValidatorSlashesResponse is the response type for the
              Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: starting_height
          description: >-
            starting_height defines the optional starting height to query the
            slashes.
          in: query
          required: false
          type: string
          format: uint64
        - name: ending_height
          description: >-
            starting_height defines the optional ending height to query the
            slashes.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              evidence:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                description: evidence returns all evidences.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllEvidenceResponse is the response type for the
              Query/AllEvidence RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              evidence:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryEvidenceResponse is the response type for the Query/Evidence
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: hash
          description: |-
            hash defines the evidence hash of the requested evidence.

            Since: cosmos-sdk 0.47
          in: path
          required: true
          type: string
        - name: evidence_hash
          description: |-
            evidence_hash defines the hash of the requested evidence.
            Deprecated: Use hash, a HEX encoded string, instead.
          in: query
          required: false
          type: string
          format: byte
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      summary: Allowance returns fee granted to the grantee by the granter.
      operationId: Allowance
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              allowance:
                description: allowance is a allowance granted for grantee by granter.
                type: object
                properties:
                  granter:
                    type: string
                    description: >-
                      granter is the address of the user granting an allowance
                      of their funds.
                  grantee:
                    type: string
                    description: >-
                      grantee is the address of the user being granted an
                      allowance of another user's funds.
                  allowance:
                    description: >-
                      allowance can be any of basic, periodic, allowed fee
                      allowance.
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                title: >-
                  Grant is stored in the KVStore to record a grant with full
                  context
            description: >-
              QueryAllowanceResponse is the response type for the
              Query/Allowance RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: granter
          description: >-
            granter is the address of the user granting an allowance of their
            funds.
          in: path
          required: true
          type: string
        - name: grantee
          description: >-
            grantee is the address of the user being granted an allowance of
            another user's funds.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      summary: Allowances returns all the grants for address.
      operationId: Allowances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              allowances:
                type: array
                items:
                  type: object
                  properties:
                    granter:
                      type: string
                      description: >-
                        granter is the address of the user granting an allowance
                        of their funds.
                    grantee:
                      type: string
                      description: >-
                        grantee is the address of the user being granted an
                        allowance of another user's funds.
                    allowance:
                      description: >-
                        allowance can be any of basic, periodic, allowed fee
                        allowance.
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                  title: >-
                    Grant is stored in the KVStore to record a grant with full
                    context
                description: allowances are allowance's granted for grantee by granter.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllowancesResponse is the response type for the
              Query/Allowances RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: grantee
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      summary: AllowancesByGranter returns all the grants given by an address
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              allowances:
                type: array
                items:
                  type: object
                  properties:
                    granter:
                      type: string
                      description: >-
                        granter is the address of the user granting an allowance
                        of their funds.
                    grantee:
                      type: string
                      description: >-
                        grantee is the address of the user being granted an
                        allowance of another user's funds.
                    allowance:
                      description: >-
                        allowance can be any of basic, periodic, allowed fee
                        allowance.
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                  title: >-
                    Grant is stored in the KVStore to record a grant with full
                    context
                description: allowances that have been issued by the granter.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllowancesByGranterResponse is the response type for the
              Query/AllowancesByGranter RPC method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: granter
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/params/{params_type}:
    get:
      summary: Params queries all parameters of the gov module.
      operationId: GovV1Params
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              voting_params:
                description: |-
                  Deprecated: Prefer to use `params` instead.
                  voting_params defines the parameters related to voting.
                type: object
                properties:
                  voting_period:
                    type: string
                    description: Duration of the voting period.
              deposit_params:
                description: |-
                  Deprecated: Prefer to use `params` instead.
                  deposit_params defines the parameters related to deposit.
                type: object
                properties:
                  min_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: Minimum deposit for a proposal to enter voting period.
                  max_deposit_period:
                    type: string
                    description: >-
                      Maximum period for Atom holders to deposit on a proposal.
                      Initial value: 2

                      months.
              tally_params:
                description: |-
                  Deprecated: Prefer to use `params` instead.
                  tally_params defines the parameters related to tally.
                type: object
                properties:
                  quorum:
                    type: string
                    description: >-
                      Minimum percentage of total stake needed to vote for a
                      result to be

                      considered valid.
                  threshold:
                    type: string
                    description: >-
                      Minimum proportion of Yes votes for proposal to pass.
                      Default value: 0.5.
                  veto_threshold:
                    type: string
                    description: >-
                      Minimum value of Veto votes to Total votes ratio for
                      proposal to be

                      vetoed. Default value: 1/3.
              params:
                description: |-
                  params defines all the paramaters of x/gov module.

                  Since: cosmos-sdk 0.47
                type: object
                properties:
                  min_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: Minimum deposit for a proposal to enter voting period.
                  max_deposit_period:
                    type: string
                    description: >-
                      Maximum period for Atom holders to deposit on a proposal.
                      Initial value: 2

                      months.
                  voting_period:
                    type: string
                    description: Duration of the voting period.
                  quorum:
                    type: string
                    description: >-
                      Minimum percentage of total stake needed to vote for a
                      result to be
                       considered valid.
                  threshold:
                    type: string
                    description: >-
                      Minimum proportion of Yes votes for proposal to pass.
                      Default value: 0.5.
                  veto_threshold:
                    type: string
                    description: >-
                      Minimum value of Veto votes to Total votes ratio for
                      proposal to be
                       vetoed. Default value: 1/3.
                  min_initial_deposit_ratio:
                    type: string
                    description: >-
                      The ratio representing the proportion of the deposit value
                      that must be paid at proposal submission.
                  burn_vote_quorum:
                    type: boolean
                    title: burn deposits if a proposal does not meet quorum
                  burn_proposal_deposit_prevote:
                    type: boolean
                    title: burn deposits if the proposal does not enter voting period
                  burn_vote_veto:
                    type: boolean
                    title: burn deposits if quorum with vote type no_veto is met
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: params_type
          description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1/proposals:
    get:
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposals:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      description: id defines the unique id of the proposal.
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: >-
                              A URL/resource name that uniquely identifies the
                              type of the serialized

                              protocol buffer message. This string must contain
                              at least

                              one "/" character. The last segment of the URL's
                              path must represent

                              the fully qualified name of the type (as in

                              `path/google.protobuf.Duration`). The name should
                              be in a canonical form

                              (e.g., leading "." is not accepted).


                              In practice, teams usually precompile into the
                              binary all types that they

                              expect it to use in the context of Any. However,
                              for URLs which use the

                              scheme `http`, `https`, or no scheme, one can
                              optionally set up a type

                              server that maps type URLs to message definitions
                              as follows:


                              * If no scheme is provided, `https` is assumed.

                              * An HTTP GET on the URL must yield a
                              [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results
                              based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently
                              available in the official

                              protobuf release, and it is not used for type URLs
                              beginning with

                              type.googleapis.com.


                              Schemes other than `http`, `https` (or the empty
                              scheme) might be

                              used with implementation specific semantics.
                          value:
                            type: string
                            format: byte
                            description: >-
                              Must be a valid serialized protocol buffer of the
                              above specified type.
                        description: >-
                          `Any` contains an arbitrary serialized protocol buffer
                          message along with a

                          URL that describes the type of the serialized message.


                          Protobuf library provides support to pack/unpack Any
                          values in the form

                          of utility functions or additional generated methods
                          of the Any type.


                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by
                          default use

                          'type.googleapis.com/full.type.name' as the type URL
                          and the unpack

                          methods only use the fully qualified type name after
                          the last '/'

                          in the type URL, for example "foo.bar.com/x/y.z" will
                          yield type

                          name "y.z".



                          JSON


                          The JSON representation of an `Any` value uses the
                          regular

                          representation of the deserialized, embedded message,
                          with an

                          additional field `@type` which contains the type URL.
                          Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a
                          custom JSON

                          representation, that representation will be embedded
                          adding a field

                          `value` which holds the custom JSON in addition to the
                          `@type`

                          field. Example (for message
                          [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      description: >-
                        messages are the arbitrary messages to be executed if
                        the proposal passes.
                    status:
                      description: status defines the proposal status.
                      type: string
                      enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      default: PROPOSAL_STATUS_UNSPECIFIED
                    final_tally_result:
                      description: >-
                        final_tally_result is the final tally result of the
                        proposal. When

                        querying a proposal via gRPC, this field is not
                        populated until the

                        proposal's voting period has ended.
                      type: object
                      properties:
                        yes_count:
                          type: string
                          description: yes_count is the number of yes votes on a proposal.
                        abstain_count:
                          type: string
                          description: >-
                            abstain_count is the number of abstain votes on a
                            proposal.
                        no_count:
                          type: string
                          description: no_count is the number of no votes on a proposal.
                        no_with_veto_count:
                          type: string
                          description: >-
                            no_with_veto_count is the number of no with veto
                            votes on a proposal.
                    submit_time:
                      type: string
                      format: date-time
                      description: submit_time is the time of proposal submission.
                    deposit_end_time:
                      type: string
                      format: date-time
                      description: deposit_end_time is the end time for deposition.
                    total_deposit:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      description: total_deposit is the total deposit on the proposal.
                    voting_start_time:
                      type: string
                      format: date-time
                      description: >-
                        voting_start_time is the starting time to vote on a
                        proposal.
                    voting_end_time:
                      type: string
                      format: date-time
                      description: voting_end_time is the end time of voting on a proposal.
                    metadata:
                      type: string
                      description: >-
                        metadata is any arbitrary metadata attached to the
                        proposal.
                    title:
                      type: string
                      description: 'Since: cosmos-sdk 0.47'
                      title: title is the title of the proposal
                    summary:
                      type: string
                      description: 'Since: cosmos-sdk 0.47'
                      title: summary is a short summary of the proposal
                    proposer:
                      type: string
                      description: 'Since: cosmos-sdk 0.47'
                      title: Proposer is the address of the proposal sumbitter
                  description: >-
                    Proposal defines the core field members of a governance
                    proposal.
                description: proposals defines all the requested governance proposals.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryProposalsResponse is the response type for the
              Query/Proposals RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_status
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          required: false
          type: string
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          default: PROPOSAL_STATUS_UNSPECIFIED
        - name: voter
          description: voter defines the voter address for the proposals.
          in: query
          required: false
          type: string
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      summary: Proposal queries proposal details based on ProposalID.
      operationId: Proposal
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposal:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    description: id defines the unique id of the proposal.
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    description: >-
                      messages are the arbitrary messages to be executed if the
                      proposal passes.
                  status:
                    description: status defines the proposal status.
                    type: string
                    enum:
                      - PROPOSAL_STATUS_UNSPECIFIED
                      - PROPOSAL_STATUS_DEPOSIT_PERIOD
                      - PROPOSAL_STATUS_VOTING_PERIOD
                      - PROPOSAL_STATUS_PASSED
                      - PROPOSAL_STATUS_REJECTED
                      - PROPOSAL_STATUS_FAILED
                    default: PROPOSAL_STATUS_UNSPECIFIED
                  final_tally_result:
                    description: >-
                      final_tally_result is the final tally result of the
                      proposal. When

                      querying a proposal via gRPC, this field is not populated
                      until the

                      proposal's voting period has ended.
                    type: object
                    properties:
                      yes_count:
                        type: string
                        description: yes_count is the number of yes votes on a proposal.
                      abstain_count:
                        type: string
                        description: >-
                          abstain_count is the number of abstain votes on a
                          proposal.
                      no_count:
                        type: string
                        description: no_count is the number of no votes on a proposal.
                      no_with_veto_count:
                        type: string
                        description: >-
                          no_with_veto_count is the number of no with veto votes
                          on a proposal.
                  submit_time:
                    type: string
                    format: date-time
                    description: submit_time is the time of proposal submission.
                  deposit_end_time:
                    type: string
                    format: date-time
                    description: deposit_end_time is the end time for deposition.
                  total_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: total_deposit is the total deposit on the proposal.
                  voting_start_time:
                    type: string
                    format: date-time
                    description: >-
                      voting_start_time is the starting time to vote on a
                      proposal.
                  voting_end_time:
                    type: string
                    format: date-time
                    description: voting_end_time is the end time of voting on a proposal.
                  metadata:
                    type: string
                    description: >-
                      metadata is any arbitrary metadata attached to the
                      proposal.
                  title:
                    type: string
                    description: 'Since: cosmos-sdk 0.47'
                    title: title is the title of the proposal
                  summary:
                    type: string
                    description: 'Since: cosmos-sdk 0.47'
                    title: summary is a short summary of the proposal
                  proposer:
                    type: string
                    description: 'Since: cosmos-sdk 0.47'
                    title: Proposer is the address of the proposal sumbitter
                description: >-
                  Proposal defines the core field members of a governance
                  proposal.
            description: >-
              QueryProposalResponse is the response type for the Query/Proposal
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposits:
                type: array
                items:
                  type: object
                  properties:
                    proposal_id:
                      type: string
                      format: uint64
                      description: proposal_id defines the unique id of the proposal.
                    depositor:
                      type: string
                      description: >-
                        depositor defines the deposit addresses from the
                        proposals.
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      description: amount to be deposited by depositor.
                  description: >-
                    Deposit defines an amount deposited by an account address to
                    an active

                    proposal.
                description: deposits defines the requested deposits.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryDepositsResponse is the response type for the Query/Deposits
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      summary: >-
        Deposit queries single deposit information based proposalID,
        depositAddr.
      operationId: Deposit
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposit:
                type: object
                properties:
                  proposal_id:
                    type: string
                    format: uint64
                    description: proposal_id defines the unique id of the proposal.
                  depositor:
                    type: string
                    description: >-
                      depositor defines the deposit addresses from the
                      proposals.
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: amount to be deposited by depositor.
                description: >-
                  Deposit defines an amount deposited by an account address to
                  an active

                  proposal.
            description: >-
              QueryDepositResponse is the response type for the Query/Deposit
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      summary: TallyResult queries the tally of a proposal vote.
      operationId: TallyResult
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tally:
                description: tally defines the requested tally.
                type: object
                properties:
                  yes_count:
                    type: string
                    description: yes_count is the number of yes votes on a proposal.
                  abstain_count:
                    type: string
                    description: >-
                      abstain_count is the number of abstain votes on a
                      proposal.
                  no_count:
                    type: string
                    description: no_count is the number of no votes on a proposal.
                  no_with_veto_count:
                    type: string
                    description: >-
                      no_with_veto_count is the number of no with veto votes on
                      a proposal.
            description: >-
              QueryTallyResultResponse is the response type for the Query/Tally
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      summary: Votes queries votes of a given proposal.
      operationId: Votes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              votes:
                type: array
                items:
                  type: object
                  properties:
                    proposal_id:
                      type: string
                      format: uint64
                      description: proposal_id defines the unique id of the proposal.
                    voter:
                      type: string
                      description: voter is the voter address of the proposal.
                    options:
                      type: array
                      items:
                        type: object
                        properties:
                          option:
                            description: >-
                              option defines the valid vote options, it must not
                              contain duplicate vote options.
                            type: string
                            enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                            default: VOTE_OPTION_UNSPECIFIED
                          weight:
                            type: string
                            description: >-
                              weight is the vote weight associated with the vote
                              option.
                        description: >-
                          WeightedVoteOption defines a unit of vote for vote
                          split.
                      description: options is the weighted vote options.
                    metadata:
                      type: string
                      description: >-
                        metadata is any  arbitrary metadata to attached to the
                        vote.
                  description: >-
                    Vote defines a vote on a governance proposal.

                    A Vote consists of a proposal ID, the voter, and the vote
                    option.
                description: votes defines the queried votes.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryVotesResponse is the response type for the Query/Votes RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: Vote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vote:
                type: object
                properties:
                  proposal_id:
                    type: string
                    format: uint64
                    description: proposal_id defines the unique id of the proposal.
                  voter:
                    type: string
                    description: voter is the voter address of the proposal.
                  options:
                    type: array
                    items:
                      type: object
                      properties:
                        option:
                          description: >-
                            option defines the valid vote options, it must not
                            contain duplicate vote options.
                          type: string
                          enum:
                            - VOTE_OPTION_UNSPECIFIED
                            - VOTE_OPTION_YES
                            - VOTE_OPTION_ABSTAIN
                            - VOTE_OPTION_NO
                            - VOTE_OPTION_NO_WITH_VETO
                          default: VOTE_OPTION_UNSPECIFIED
                        weight:
                          type: string
                          description: >-
                            weight is the vote weight associated with the vote
                            option.
                      description: >-
                        WeightedVoteOption defines a unit of vote for vote
                        split.
                    description: options is the weighted vote options.
                  metadata:
                    type: string
                    description: >-
                      metadata is any  arbitrary metadata to attached to the
                      vote.
                description: >-
                  Vote defines a vote on a governance proposal.

                  A Vote consists of a proposal ID, the voter, and the vote
                  option.
            description: >-
              QueryVoteResponse is the response type for the Query/Vote RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: voter
          description: voter defines the voter address for the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      summary: AnnualProvisions current minting annual provisions value.
      operationId: AnnualProvisions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              annual_provisions:
                type: string
                format: byte
                description: >-
                  annual_provisions is the current minting annual provisions
                  value.
            description: |-
              QueryAnnualProvisionsResponse is the response type for the
              Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/mint/v1beta1/inflation:
    get:
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              inflation:
                type: string
                format: byte
                description: inflation is the current minting inflation value.
            description: >-
              QueryInflationResponse is the response type for the
              Query/Inflation RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/mint/v1beta1/params:
    get:
      summary: Params returns the total set of minting parameters.
      operationId: MintParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  mint_denom:
                    type: string
                    title: type of coin to mint
                  inflation_rate_change:
                    type: string
                    title: maximum annual change in inflation rate
                  inflation_max:
                    type: string
                    title: maximum inflation rate
                  inflation_min:
                    type: string
                    title: minimum inflation rate
                  goal_bonded:
                    type: string
                    title: goal of percent bonded atoms
                  blocks_per_year:
                    type: string
                    format: uint64
                    title: expected blocks per year
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/params/v1beta1/params:
    get:
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      operationId: ParamsParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              param:
                description: param defines the queried parameter.
                type: object
                properties:
                  subspace:
                    type: string
                  key:
                    type: string
                  value:
                    type: string
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: subspace
          description: subspace defines the module to query the parameter for.
          in: query
          required: false
          type: string
        - name: key
          description: key defines the key of the parameter in the subspace.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/params/v1beta1/subspaces:
    get:
      summary: >-
        Subspaces queries for all registered subspaces and all keys for a
        subspace.
      description: 'Since: cosmos-sdk 0.46'
      operationId: Subspaces
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              subspaces:
                type: array
                items:
                  type: object
                  properties:
                    subspace:
                      type: string
                    keys:
                      type: array
                      items:
                        type: string
                  description: >-
                    Subspace defines a parameter subspace name and all the keys
                    that exist for

                    the subspace.


                    Since: cosmos-sdk 0.46
            description: >-
              QuerySubspacesResponse defines the response types for querying for
              all

              registered subspaces and all keys for a subspace.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/slashing/v1beta1/params:
    get:
      summary: Params queries the parameters of slashing module
      operationId: SlashingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  signed_blocks_window:
                    type: string
                    format: int64
                  min_signed_per_window:
                    type: string
                    format: byte
                  downtime_jail_duration:
                    type: string
                  slash_fraction_double_sign:
                    type: string
                    format: byte
                  slash_fraction_downtime:
                    type: string
                    format: byte
                description: >-
                  Params represents the parameters used for by the slashing
                  module.
            title: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      summary: SigningInfos queries signing info of all validators
      operationId: SigningInfos
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              info:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    start_height:
                      type: string
                      format: int64
                      title: >-
                        Height at which validator was first a candidate OR was
                        unjailed
                    index_offset:
                      type: string
                      format: int64
                      description: >-
                        Index which is incremented each time the validator was a
                        bonded

                        in a block and may have signed a precommit or not. This
                        in conjunction with the

                        `SignedBlocksWindow` param determines the index in the
                        `MissedBlocksBitArray`.
                    jailed_until:
                      type: string
                      format: date-time
                      description: >-
                        Timestamp until which the validator is jailed due to
                        liveness downtime.
                    tombstoned:
                      type: boolean
                      description: >-
                        Whether or not a validator has been tombstoned (killed
                        out of validator set). It is set

                        once the validator commits an equivocation or for any
                        other configured misbehiavor.
                    missed_blocks_counter:
                      type: string
                      format: int64
                      description: >-
                        A counter kept to avoid unnecessary array reads.

                        Note that `Sum(MissedBlocksBitArray)` always equals
                        `MissedBlocksCounter`.
                  description: >-
                    ValidatorSigningInfo defines a validator's signing info for
                    monitoring their

                    liveness activity.
                title: info is the signing info of all validators
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QuerySigningInfosResponse is the response type for the
              Query/SigningInfos RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      summary: SigningInfo queries the signing info of given cons address
      operationId: SigningInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              val_signing_info:
                type: object
                properties:
                  address:
                    type: string
                  start_height:
                    type: string
                    format: int64
                    title: >-
                      Height at which validator was first a candidate OR was
                      unjailed
                  index_offset:
                    type: string
                    format: int64
                    description: >-
                      Index which is incremented each time the validator was a
                      bonded

                      in a block and may have signed a precommit or not. This in
                      conjunction with the

                      `SignedBlocksWindow` param determines the index in the
                      `MissedBlocksBitArray`.
                  jailed_until:
                    type: string
                    format: date-time
                    description: >-
                      Timestamp until which the validator is jailed due to
                      liveness downtime.
                  tombstoned:
                    type: boolean
                    description: >-
                      Whether or not a validator has been tombstoned (killed out
                      of validator set). It is set

                      once the validator commits an equivocation or for any
                      other configured misbehiavor.
                  missed_blocks_counter:
                    type: string
                    format: int64
                    description: >-
                      A counter kept to avoid unnecessary array reads.

                      Note that `Sum(MissedBlocksBitArray)` always equals
                      `MissedBlocksCounter`.
                description: >-
                  ValidatorSigningInfo defines a validator's signing info for
                  monitoring their

                  liveness activity.
                title: >-
                  val_signing_info is the signing info of requested val cons
                  address
            title: >-
              QuerySigningInfoResponse is the response type for the
              Query/SigningInfo RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: cons_address
          description: cons_address is the address to query signing info of
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      summary: >-
        DelegatorDelegations queries all delegations of a given delegator
        address.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: DelegatorDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegation_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: >-
                            delegator_address is the bech32-encoded address of
                            the delegator.
                        validator_address:
                          type: string
                          description: >-
                            validator_address is the bech32-encoded address of
                            the validator.
                        shares:
                          type: string
                          description: shares define the delegation shares received.
                      description: >-
                        Delegation represents the bond with tokens held by an
                        account. It is

                        owned by one delegator, and is associated with the
                        voting power of one

                        validator.
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    DelegationResponse is equivalent to Delegation except that
                    it contains a

                    balance in addition to shares which is more suitable for
                    client responses.
                description: >-
                  delegation_responses defines all the delegations' info of a
                  delegator.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryDelegatorDelegationsResponse is response type for the
              Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      summary: Redelegations queries redelegations of given address.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: Redelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              redelegation_responses:
                type: array
                items:
                  type: object
                  properties:
                    redelegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: >-
                            delegator_address is the bech32-encoded address of
                            the delegator.
                        validator_src_address:
                          type: string
                          description: >-
                            validator_src_address is the validator redelegation
                            source operator address.
                        validator_dst_address:
                          type: string
                          description: >-
                            validator_dst_address is the validator redelegation
                            destination operator address.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                                description: >-
                                  creation_height  defines the height which the
                                  redelegation took place.
                              completion_time:
                                type: string
                                format: date-time
                                description: >-
                                  completion_time defines the unix time for
                                  redelegation completion.
                              initial_balance:
                                type: string
                                description: >-
                                  initial_balance defines the initial balance
                                  when redelegation started.
                              shares_dst:
                                type: string
                                description: >-
                                  shares_dst is the amount of
                                  destination-validator shares created by
                                  redelegation.
                              unbonding_id:
                                type: string
                                format: uint64
                                title: >-
                                  Incrementing id that uniquely identifies this
                                  entry
                              unbonding_on_hold_ref_count:
                                type: string
                                format: int64
                                title: >-
                                  Strictly positive if this entry's unbonding
                                  has been stopped by external modules
                            description: >-
                              RedelegationEntry defines a redelegation object
                              with relevant metadata.
                          description: entries are the redelegation entries.
                      description: >-
                        Redelegation contains the list of a particular
                        delegator's redelegating bonds

                        from a particular source validator to a particular
                        destination validator.
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          redelegation_entry:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                                description: >-
                                  creation_height  defines the height which the
                                  redelegation took place.
                              completion_time:
                                type: string
                                format: date-time
                                description: >-
                                  completion_time defines the unix time for
                                  redelegation completion.
                              initial_balance:
                                type: string
                                description: >-
                                  initial_balance defines the initial balance
                                  when redelegation started.
                              shares_dst:
                                type: string
                                description: >-
                                  shares_dst is the amount of
                                  destination-validator shares created by
                                  redelegation.
                              unbonding_id:
                                type: string
                                format: uint64
                                title: >-
                                  Incrementing id that uniquely identifies this
                                  entry
                              unbonding_on_hold_ref_count:
                                type: string
                                format: int64
                                title: >-
                                  Strictly positive if this entry's unbonding
                                  has been stopped by external modules
                            description: >-
                              RedelegationEntry defines a redelegation object
                              with relevant metadata.
                          balance:
                            type: string
                        description: >-
                          RedelegationEntryResponse is equivalent to a
                          RedelegationEntry except that it

                          contains a balance in addition to shares which is more
                          suitable for client

                          responses.
                  description: >-
                    RedelegationResponse is equivalent to a Redelegation except
                    that its entries

                    contain a balance in addition to shares which is more
                    suitable for client

                    responses.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryRedelegationsResponse is response type for the
              Query/Redelegations RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: src_validator_addr
          description: src_validator_addr defines the validator address to redelegate from.
          in: query
          required: false
          type: string
        - name: dst_validator_addr
          description: dst_validator_addr defines the validator address to redelegate to.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      summary: >-
        DelegatorUnbondingDelegations queries all unbonding delegations of a
        given

        delegator address.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: DelegatorUnbondingDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbonding_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                      description: >-
                        delegator_address is the bech32-encoded address of the
                        delegator.
                    validator_address:
                      type: string
                      description: >-
                        validator_address is the bech32-encoded address of the
                        validator.
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          creation_height:
                            type: string
                            format: int64
                            description: >-
                              creation_height is the height which the unbonding
                              took place.
                          completion_time:
                            type: string
                            format: date-time
                            description: >-
                              completion_time is the unix time for unbonding
                              completion.
                          initial_balance:
                            type: string
                            description: >-
                              initial_balance defines the tokens initially
                              scheduled to receive at completion.
                          balance:
                            type: string
                            description: >-
                              balance defines the tokens to receive at
                              completion.
                          unbonding_id:
                            type: string
                            format: uint64
                            title: >-
                              Incrementing id that uniquely identifies this
                              entry
                          unbonding_on_hold_ref_count:
                            type: string
                            format: int64
                            title: >-
                              Strictly positive if this entry's unbonding has
                              been stopped by external modules
                        description: >-
                          UnbondingDelegationEntry defines an unbonding object
                          with relevant metadata.
                      description: entries are the unbonding delegation entries.
                  description: >-
                    UnbondingDelegation stores all of a single delegator's
                    unbonding bonds

                    for a single validator in an time-ordered list.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryUnbondingDelegatorDelegationsResponse is response type for
              the

              Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: DelegatorValidators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                      description: >-
                        operator_address defines the address of the validator's
                        operator; bech encoded in JSON.
                    consensus_pubkey:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    jailed:
                      type: boolean
                      description: >-
                        jailed defined whether the validator has been jailed
                        from bonded status or not.
                    status:
                      description: >-
                        status is the validator status
                        (bonded/unbonding/unbonded).
                      type: string
                      enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      default: BOND_STATUS_UNSPECIFIED
                    tokens:
                      type: string
                      description: >-
                        tokens define the delegated tokens (incl.
                        self-delegation).
                    delegator_shares:
                      type: string
                      description: >-
                        delegator_shares defines total shares issued to a
                        validator's delegators.
                    description:
                      description: >-
                        description defines the description terms for the
                        validator.
                      type: object
                      properties:
                        moniker:
                          type: string
                          description: >-
                            moniker defines a human-readable name for the
                            validator.
                        identity:
                          type: string
                          description: >-
                            identity defines an optional identity signature (ex.
                            UPort or Keybase).
                        website:
                          type: string
                          description: website defines an optional website link.
                        security_contact:
                          type: string
                          description: >-
                            security_contact defines an optional email for
                            security contact.
                        details:
                          type: string
                          description: details define other optional details.
                    unbonding_height:
                      type: string
                      format: int64
                      description: >-
                        unbonding_height defines, if unbonding, the height at
                        which this validator has begun unbonding.
                    unbonding_time:
                      type: string
                      format: date-time
                      description: >-
                        unbonding_time defines, if unbonding, the min time for
                        the validator to complete unbonding.
                    commission:
                      description: commission defines the commission parameters.
                      type: object
                      properties:
                        commission_rates:
                          description: >-
                            commission_rates defines the initial commission
                            rates to be used for creating a validator.
                          type: object
                          properties:
                            rate:
                              type: string
                              description: >-
                                rate is the commission rate charged to
                                delegators, as a fraction.
                            max_rate:
                              type: string
                              description: >-
                                max_rate defines the maximum commission rate
                                which validator can ever charge, as a fraction.
                            max_change_rate:
                              type: string
                              description: >-
                                max_change_rate defines the maximum daily
                                increase of the validator commission, as a
                                fraction.
                        update_time:
                          type: string
                          format: date-time
                          description: >-
                            update_time is the last time the commission rate was
                            changed.
                    min_self_delegation:
                      type: string
                      description: >-
                        min_self_delegation is the validator's self declared
                        minimum self delegation.


                        Since: cosmos-sdk 0.46
                    unbonding_on_hold_ref_count:
                      type: string
                      format: int64
                      title: >-
                        strictly positive if this validator's unbonding has been
                        stopped by external modules
                    unbonding_ids:
                      type: array
                      items:
                        type: string
                        format: uint64
                      title: >-
                        list of unbonding ids, each uniquely identifing an
                        unbonding of this validator
                  description: >-
                    Validator defines a validator, together with the total
                    amount of the

                    Validator's bond shares and their exchange rate to coins.
                    Slashing results in

                    a decrease in the exchange rate, allowing correct
                    calculation of future

                    undelegations without iterating over delegators. When coins
                    are delegated to

                    this validator, the validator is credited with a delegation
                    whose number of

                    bond shares is based on the amount of coins delegated
                    divided by the current

                    exchange rate. Voting power can be calculated as total
                    bonded shares

                    multiplied by exchange rate.
                description: validators defines the validators' info of a delegator.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryDelegatorValidatorsResponse is response type for the
              Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: >-
                      operator_address defines the address of the validator's
                      operator; bech encoded in JSON.
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                    description: >-
                      jailed defined whether the validator has been jailed from
                      bonded status or not.
                  status:
                    description: >-
                      status is the validator status
                      (bonded/unbonding/unbonded).
                    type: string
                    enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                    default: BOND_STATUS_UNSPECIFIED
                  tokens:
                    type: string
                    description: >-
                      tokens define the delegated tokens (incl.
                      self-delegation).
                  delegator_shares:
                    type: string
                    description: >-
                      delegator_shares defines total shares issued to a
                      validator's delegators.
                  description:
                    description: >-
                      description defines the description terms for the
                      validator.
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: >-
                          moniker defines a human-readable name for the
                          validator.
                      identity:
                        type: string
                        description: >-
                          identity defines an optional identity signature (ex.
                          UPort or Keybase).
                      website:
                        type: string
                        description: website defines an optional website link.
                      security_contact:
                        type: string
                        description: >-
                          security_contact defines an optional email for
                          security contact.
                      details:
                        type: string
                        description: details define other optional details.
                  unbonding_height:
                    type: string
                    format: int64
                    description: >-
                      unbonding_height defines, if unbonding, the height at
                      which this validator has begun unbonding.
                  unbonding_time:
                    type: string
                    format: date-time
                    description: >-
                      unbonding_time defines, if unbonding, the min time for the
                      validator to complete unbonding.
                  commission:
                    description: commission defines the commission parameters.
                    type: object
                    properties:
                      commission_rates:
                        description: >-
                          commission_rates defines the initial commission rates
                          to be used for creating a validator.
                        type: object
                        properties:
                          rate:
                            type: string
                            description: >-
                              rate is the commission rate charged to delegators,
                              as a fraction.
                          max_rate:
                            type: string
                            description: >-
                              max_rate defines the maximum commission rate which
                              validator can ever charge, as a fraction.
                          max_change_rate:
                            type: string
                            description: >-
                              max_change_rate defines the maximum daily increase
                              of the validator commission, as a fraction.
                      update_time:
                        type: string
                        format: date-time
                        description: >-
                          update_time is the last time the commission rate was
                          changed.
                  min_self_delegation:
                    type: string
                    description: >-
                      min_self_delegation is the validator's self declared
                      minimum self delegation.


                      Since: cosmos-sdk 0.46
                  unbonding_on_hold_ref_count:
                    type: string
                    format: int64
                    title: >-
                      strictly positive if this validator's unbonding has been
                      stopped by external modules
                  unbonding_ids:
                    type: array
                    items:
                      type: string
                      format: uint64
                    title: >-
                      list of unbonding ids, each uniquely identifing an
                      unbonding of this validator
                description: >-
                  Validator defines a validator, together with the total amount
                  of the

                  Validator's bond shares and their exchange rate to coins.
                  Slashing results in

                  a decrease in the exchange rate, allowing correct calculation
                  of future

                  undelegations without iterating over delegators. When coins
                  are delegated to

                  this validator, the validator is credited with a delegation
                  whose number of

                  bond shares is based on the amount of coins delegated divided
                  by the current

                  exchange rate. Voting power can be calculated as total bonded
                  shares

                  multiplied by exchange rate.
            description: |-
              QueryDelegatorValidatorResponse response type for the
              Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              hist:
                description: hist defines the historical info at the given height.
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        title: prev block info
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        format: byte
                    description: Header defines the structure of a Tendermint block header.
                  valset:
                    type: array
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: >-
                            operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: >-
                                A URL/resource name that uniquely identifies the
                                type of the serialized

                                protocol buffer message. This string must
                                contain at least

                                one "/" character. The last segment of the URL's
                                path must represent

                                the fully qualified name of the type (as in

                                `path/google.protobuf.Duration`). The name
                                should be in a canonical form

                                (e.g., leading "." is not accepted).


                                In practice, teams usually precompile into the
                                binary all types that they

                                expect it to use in the context of Any. However,
                                for URLs which use the

                                scheme `http`, `https`, or no scheme, one can
                                optionally set up a type

                                server that maps type URLs to message
                                definitions as follows:


                                * If no scheme is provided, `https` is assumed.

                                * An HTTP GET on the URL must yield a
                                [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup
                                results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently
                                available in the official

                                protobuf release, and it is not used for type
                                URLs beginning with

                                type.googleapis.com.


                                Schemes other than `http`, `https` (or the empty
                                scheme) might be

                                used with implementation specific semantics.
                            value:
                              type: string
                              format: byte
                              description: >-
                                Must be a valid serialized protocol buffer of
                                the above specified type.
                          description: >-
                            `Any` contains an arbitrary serialized protocol
                            buffer message along with a

                            URL that describes the type of the serialized
                            message.


                            Protobuf library provides support to pack/unpack Any
                            values in the form

                            of utility functions or additional generated methods
                            of the Any type.


                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will
                            by default use

                            'type.googleapis.com/full.type.name' as the type URL
                            and the unpack

                            methods only use the fully qualified type name after
                            the last '/'

                            in the type URL, for example "foo.bar.com/x/y.z"
                            will yield type

                            name "y.z".



                            JSON


                            The JSON representation of an `Any` value uses the
                            regular

                            representation of the deserialized, embedded
                            message, with an

                            additional field `@type` which contains the type
                            URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a
                            custom JSON

                            representation, that representation will be embedded
                            adding a field

                            `value` which holds the custom JSON in addition to
                            the `@type`

                            field. Example (for message
                            [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: >-
                            jailed defined whether the validator has been jailed
                            from bonded status or not.
                        status:
                          description: >-
                            status is the validator status
                            (bonded/unbonding/unbonded).
                          type: string
                          enum:
                            - BOND_STATUS_UNSPECIFIED
                            - BOND_STATUS_UNBONDED
                            - BOND_STATUS_UNBONDING
                            - BOND_STATUS_BONDED
                          default: BOND_STATUS_UNSPECIFIED
                        tokens:
                          type: string
                          description: >-
                            tokens define the delegated tokens (incl.
                            self-delegation).
                        delegator_shares:
                          type: string
                          description: >-
                            delegator_shares defines total shares issued to a
                            validator's delegators.
                        description:
                          description: >-
                            description defines the description terms for the
                            validator.
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: >-
                                moniker defines a human-readable name for the
                                validator.
                            identity:
                              type: string
                              description: >-
                                identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: >-
                                security_contact defines an optional email for
                                security contact.
                            details:
                              type: string
                              description: details define other optional details.
                        unbonding_height:
                          type: string
                          format: int64
                          description: >-
                            unbonding_height defines, if unbonding, the height
                            at which this validator has begun unbonding.
                        unbonding_time:
                          type: string
                          format: date-time
                          description: >-
                            unbonding_time defines, if unbonding, the min time
                            for the validator to complete unbonding.
                        commission:
                          description: commission defines the commission parameters.
                          type: object
                          properties:
                            commission_rates:
                              description: >-
                                commission_rates defines the initial commission
                                rates to be used for creating a validator.
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: >-
                                    rate is the commission rate charged to
                                    delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: >-
                                    max_rate defines the maximum commission rate
                                    which validator can ever charge, as a
                                    fraction.
                                max_change_rate:
                                  type: string
                                  description: >-
                                    max_change_rate defines the maximum daily
                                    increase of the validator commission, as a
                                    fraction.
                            update_time:
                              type: string
                              format: date-time
                              description: >-
                                update_time is the last time the commission rate
                                was changed.
                        min_self_delegation:
                          type: string
                          description: >-
                            min_self_delegation is the validator's self declared
                            minimum self delegation.


                            Since: cosmos-sdk 0.46
                        unbonding_on_hold_ref_count:
                          type: string
                          format: int64
                          title: >-
                            strictly positive if this validator's unbonding has
                            been stopped by external modules
                        unbonding_ids:
                          type: array
                          items:
                            type: string
                            format: uint64
                          title: >-
                            list of unbonding ids, each uniquely identifing an
                            unbonding of this validator
                      description: >-
                        Validator defines a validator, together with the total
                        amount of the

                        Validator's bond shares and their exchange rate to
                        coins. Slashing results in

                        a decrease in the exchange rate, allowing correct
                        calculation of future

                        undelegations without iterating over delegators. When
                        coins are delegated to

                        this validator, the validator is credited with a
                        delegation whose number of

                        bond shares is based on the amount of coins delegated
                        divided by the current

                        exchange rate. Voting power can be calculated as total
                        bonded shares

                        multiplied by exchange rate.
            description: >-
              QueryHistoricalInfoResponse is response type for the
              Query/HistoricalInfo RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: height
          description: height defines at which height to query the historical info.
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /cosmos/staking/v1beta1/params:
    get:
      summary: Parameters queries the staking parameters.
      operationId: StakingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  unbonding_time:
                    type: string
                    description: unbonding_time is the time duration of unbonding.
                  max_validators:
                    type: integer
                    format: int64
                    description: max_validators is the maximum number of validators.
                  max_entries:
                    type: integer
                    format: int64
                    description: >-
                      max_entries is the max entries for either unbonding
                      delegation or redelegation (per pair/trio).
                  historical_entries:
                    type: integer
                    format: int64
                    description: >-
                      historical_entries is the number of historical entries to
                      persist.
                  bond_denom:
                    type: string
                    description: bond_denom defines the bondable coin denomination.
                  min_commission_rate:
                    type: string
                    title: >-
                      min_commission_rate is the chain-wide minimum commission
                      rate that a validator can charge their delegators
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/staking/v1beta1/pool:
    get:
      summary: Pool queries the pool info.
      operationId: Pool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                description: pool defines the pool info.
                type: object
                properties:
                  not_bonded_tokens:
                    type: string
                  bonded_tokens:
                    type: string
            description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/staking/v1beta1/validators:
    get:
      summary: Validators queries all validators that match the given status.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: Validators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                      description: >-
                        operator_address defines the address of the validator's
                        operator; bech encoded in JSON.
                    consensus_pubkey:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    jailed:
                      type: boolean
                      description: >-
                        jailed defined whether the validator has been jailed
                        from bonded status or not.
                    status:
                      description: >-
                        status is the validator status
                        (bonded/unbonding/unbonded).
                      type: string
                      enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      default: BOND_STATUS_UNSPECIFIED
                    tokens:
                      type: string
                      description: >-
                        tokens define the delegated tokens (incl.
                        self-delegation).
                    delegator_shares:
                      type: string
                      description: >-
                        delegator_shares defines total shares issued to a
                        validator's delegators.
                    description:
                      description: >-
                        description defines the description terms for the
                        validator.
                      type: object
                      properties:
                        moniker:
                          type: string
                          description: >-
                            moniker defines a human-readable name for the
                            validator.
                        identity:
                          type: string
                          description: >-
                            identity defines an optional identity signature (ex.
                            UPort or Keybase).
                        website:
                          type: string
                          description: website defines an optional website link.
                        security_contact:
                          type: string
                          description: >-
                            security_contact defines an optional email for
                            security contact.
                        details:
                          type: string
                          description: details define other optional details.
                    unbonding_height:
                      type: string
                      format: int64
                      description: >-
                        unbonding_height defines, if unbonding, the height at
                        which this validator has begun unbonding.
                    unbonding_time:
                      type: string
                      format: date-time
                      description: >-
                        unbonding_time defines, if unbonding, the min time for
                        the validator to complete unbonding.
                    commission:
                      description: commission defines the commission parameters.
                      type: object
                      properties:
                        commission_rates:
                          description: >-
                            commission_rates defines the initial commission
                            rates to be used for creating a validator.
                          type: object
                          properties:
                            rate:
                              type: string
                              description: >-
                                rate is the commission rate charged to
                                delegators, as a fraction.
                            max_rate:
                              type: string
                              description: >-
                                max_rate defines the maximum commission rate
                                which validator can ever charge, as a fraction.
                            max_change_rate:
                              type: string
                              description: >-
                                max_change_rate defines the maximum daily
                                increase of the validator commission, as a
                                fraction.
                        update_time:
                          type: string
                          format: date-time
                          description: >-
                            update_time is the last time the commission rate was
                            changed.
                    min_self_delegation:
                      type: string
                      description: >-
                        min_self_delegation is the validator's self declared
                        minimum self delegation.


                        Since: cosmos-sdk 0.46
                    unbonding_on_hold_ref_count:
                      type: string
                      format: int64
                      title: >-
                        strictly positive if this validator's unbonding has been
                        stopped by external modules
                    unbonding_ids:
                      type: array
                      items:
                        type: string
                        format: uint64
                      title: >-
                        list of unbonding ids, each uniquely identifing an
                        unbonding of this validator
                  description: >-
                    Validator defines a validator, together with the total
                    amount of the

                    Validator's bond shares and their exchange rate to coins.
                    Slashing results in

                    a decrease in the exchange rate, allowing correct
                    calculation of future

                    undelegations without iterating over delegators. When coins
                    are delegated to

                    this validator, the validator is credited with a delegation
                    whose number of

                    bond shares is based on the amount of coins delegated
                    divided by the current

                    exchange rate. Voting power can be calculated as total
                    bonded shares

                    multiplied by exchange rate.
                description: validators contains all the queried validators.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryValidatorsResponse is response type for the Query/Validators
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: status
          description: status enables to query for validators matching a given status.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      summary: Validator queries validator info for given validator address.
      operationId: Validator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: >-
                      operator_address defines the address of the validator's
                      operator; bech encoded in JSON.
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                    description: >-
                      jailed defined whether the validator has been jailed from
                      bonded status or not.
                  status:
                    description: >-
                      status is the validator status
                      (bonded/unbonding/unbonded).
                    type: string
                    enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                    default: BOND_STATUS_UNSPECIFIED
                  tokens:
                    type: string
                    description: >-
                      tokens define the delegated tokens (incl.
                      self-delegation).
                  delegator_shares:
                    type: string
                    description: >-
                      delegator_shares defines total shares issued to a
                      validator's delegators.
                  description:
                    description: >-
                      description defines the description terms for the
                      validator.
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: >-
                          moniker defines a human-readable name for the
                          validator.
                      identity:
                        type: string
                        description: >-
                          identity defines an optional identity signature (ex.
                          UPort or Keybase).
                      website:
                        type: string
                        description: website defines an optional website link.
                      security_contact:
                        type: string
                        description: >-
                          security_contact defines an optional email for
                          security contact.
                      details:
                        type: string
                        description: details define other optional details.
                  unbonding_height:
                    type: string
                    format: int64
                    description: >-
                      unbonding_height defines, if unbonding, the height at
                      which this validator has begun unbonding.
                  unbonding_time:
                    type: string
                    format: date-time
                    description: >-
                      unbonding_time defines, if unbonding, the min time for the
                      validator to complete unbonding.
                  commission:
                    description: commission defines the commission parameters.
                    type: object
                    properties:
                      commission_rates:
                        description: >-
                          commission_rates defines the initial commission rates
                          to be used for creating a validator.
                        type: object
                        properties:
                          rate:
                            type: string
                            description: >-
                              rate is the commission rate charged to delegators,
                              as a fraction.
                          max_rate:
                            type: string
                            description: >-
                              max_rate defines the maximum commission rate which
                              validator can ever charge, as a fraction.
                          max_change_rate:
                            type: string
                            description: >-
                              max_change_rate defines the maximum daily increase
                              of the validator commission, as a fraction.
                      update_time:
                        type: string
                        format: date-time
                        description: >-
                          update_time is the last time the commission rate was
                          changed.
                  min_self_delegation:
                    type: string
                    description: >-
                      min_self_delegation is the validator's self declared
                      minimum self delegation.


                      Since: cosmos-sdk 0.46
                  unbonding_on_hold_ref_count:
                    type: string
                    format: int64
                    title: >-
                      strictly positive if this validator's unbonding has been
                      stopped by external modules
                  unbonding_ids:
                    type: array
                    items:
                      type: string
                      format: uint64
                    title: >-
                      list of unbonding ids, each uniquely identifing an
                      unbonding of this validator
                description: >-
                  Validator defines a validator, together with the total amount
                  of the

                  Validator's bond shares and their exchange rate to coins.
                  Slashing results in

                  a decrease in the exchange rate, allowing correct calculation
                  of future

                  undelegations without iterating over delegators. When coins
                  are delegated to

                  this validator, the validator is credited with a delegation
                  whose number of

                  bond shares is based on the amount of coins delegated divided
                  by the current

                  exchange rate. Voting power can be calculated as total bonded
                  shares

                  multiplied by exchange rate.
            title: >-
              QueryValidatorResponse is response type for the Query/Validator
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      summary: ValidatorDelegations queries delegate info for given validator.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: ValidatorDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegation_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: >-
                            delegator_address is the bech32-encoded address of
                            the delegator.
                        validator_address:
                          type: string
                          description: >-
                            validator_address is the bech32-encoded address of
                            the validator.
                        shares:
                          type: string
                          description: shares define the delegation shares received.
                      description: >-
                        Delegation represents the bond with tokens held by an
                        account. It is

                        owned by one delegator, and is associated with the
                        voting power of one

                        validator.
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    DelegationResponse is equivalent to Delegation except that
                    it contains a

                    balance in addition to shares which is more suitable for
                    client responses.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryValidatorDelegationsResponse is response type for the
              Query/ValidatorDelegations RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegation_response:
                type: object
                properties:
                  delegation:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                        description: >-
                          delegator_address is the bech32-encoded address of the
                          delegator.
                      validator_address:
                        type: string
                        description: >-
                          validator_address is the bech32-encoded address of the
                          validator.
                      shares:
                        type: string
                        description: shares define the delegation shares received.
                    description: >-
                      Delegation represents the bond with tokens held by an
                      account. It is

                      owned by one delegator, and is associated with the voting
                      power of one

                      validator.
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                description: >-
                  DelegationResponse is equivalent to Delegation except that it
                  contains a

                  balance in addition to shares which is more suitable for
                  client responses.
            description: >-
              QueryDelegationResponse is response type for the Query/Delegation
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbond:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: >-
                      delegator_address is the bech32-encoded address of the
                      delegator.
                  validator_address:
                    type: string
                    description: >-
                      validator_address is the bech32-encoded address of the
                      validator.
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          format: int64
                          description: >-
                            creation_height is the height which the unbonding
                            took place.
                        completion_time:
                          type: string
                          format: date-time
                          description: >-
                            completion_time is the unix time for unbonding
                            completion.
                        initial_balance:
                          type: string
                          description: >-
                            initial_balance defines the tokens initially
                            scheduled to receive at completion.
                        balance:
                          type: string
                          description: balance defines the tokens to receive at completion.
                        unbonding_id:
                          type: string
                          format: uint64
                          title: Incrementing id that uniquely identifies this entry
                        unbonding_on_hold_ref_count:
                          type: string
                          format: int64
                          title: >-
                            Strictly positive if this entry's unbonding has been
                            stopped by external modules
                      description: >-
                        UnbondingDelegationEntry defines an unbonding object
                        with relevant metadata.
                    description: entries are the unbonding delegation entries.
                description: >-
                  UnbondingDelegation stores all of a single delegator's
                  unbonding bonds

                  for a single validator in an time-ordered list.
            description: >-
              QueryDelegationResponse is response type for the
              Query/UnbondingDelegation

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      summary: >-
        ValidatorUnbondingDelegations queries unbonding delegations of a
        validator.
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: ValidatorUnbondingDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbonding_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                      description: >-
                        delegator_address is the bech32-encoded address of the
                        delegator.
                    validator_address:
                      type: string
                      description: >-
                        validator_address is the bech32-encoded address of the
                        validator.
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          creation_height:
                            type: string
                            format: int64
                            description: >-
                              creation_height is the height which the unbonding
                              took place.
                          completion_time:
                            type: string
                            format: date-time
                            description: >-
                              completion_time is the unix time for unbonding
                              completion.
                          initial_balance:
                            type: string
                            description: >-
                              initial_balance defines the tokens initially
                              scheduled to receive at completion.
                          balance:
                            type: string
                            description: >-
                              balance defines the tokens to receive at
                              completion.
                          unbonding_id:
                            type: string
                            format: uint64
                            title: >-
                              Incrementing id that uniquely identifies this
                              entry
                          unbonding_on_hold_ref_count:
                            type: string
                            format: int64
                            title: >-
                              Strictly positive if this entry's unbonding has
                              been stopped by external modules
                        description: >-
                          UnbondingDelegationEntry defines an unbonding object
                          with relevant metadata.
                      description: entries are the unbonding delegation entries.
                  description: >-
                    UnbondingDelegation stores all of a single delegator's
                    unbonding bonds

                    for a single validator in an time-ordered list.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryValidatorUnbondingDelegationsResponse is response type for
              the

              Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              height:
                type: string
                format: int64
                description: height is the block height at which the plan was applied.
            description: >-
              QueryAppliedPlanResponse is the response type for the
              Query/AppliedPlan RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: name
          description: name is the name of the applied plan to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/upgrade/v1beta1/authority:
    get:
      summary: Returns the account with authority to conduct upgrades
      description: 'Since: cosmos-sdk 0.46'
      operationId: Authority
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
            description: 'Since: cosmos-sdk 0.46'
            title: QueryAuthorityResponse is the response type for Query/Authority
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              plan:
                description: plan is the current upgrade plan.
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      Sets the name for the upgrade. This name will be used by
                      the upgraded

                      version of the software to apply any special "on-upgrade"
                      commands during

                      the first BeginBlock method after the upgrade is applied.
                      It is also used

                      to detect whether a software version can handle a given
                      upgrade. If no

                      upgrade handler with this name has been set in the
                      software, it will be

                      assumed that the software is out-of-date when the upgrade
                      Time or Height is

                      reached and the software will exit.
                  time:
                    type: string
                    format: date-time
                    description: >-
                      Deprecated: Time based upgrades have been deprecated. Time
                      based upgrade logic

                      has been removed from the SDK.

                      If this field is not empty, an error will be thrown.
                  height:
                    type: string
                    format: int64
                    description: The height at which the upgrade must be performed.
                  info:
                    type: string
                    title: >-
                      Any application specific upgrade info to be included
                      on-chain

                      such as a git commit that validators could automatically
                      upgrade to
                  upgraded_client_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
            description: >-
              QueryCurrentPlanResponse is the response type for the
              Query/CurrentPlan RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      summary: ModuleVersions queries the list of module versions from state.
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              module_versions:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: name of the app module
                    version:
                      type: string
                      format: uint64
                      title: consensus version of the app module
                  description: |-
                    ModuleVersion specifies a module and its consensus version.

                    Since: cosmos-sdk 0.43
                description: >-
                  module_versions is a list of module names with their consensus
                  versions.
            description: >-
              QueryModuleVersionsResponse is the response type for the
              Query/ModuleVersions

              RPC method.


              Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: module_name
          description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      summary: >-
        UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: UpgradedConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              upgraded_consensus_state:
                type: string
                format: byte
                title: 'Since: cosmos-sdk 0.43'
            description: >-
              QueryUpgradedConsensusStateResponse is the response type for the
              Query/UpgradedConsensusState

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: last_height
          description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address:
    get:
      summary: >-
        EscrowAddress returns the escrow address for a particular port and
        channel id.
      operationId: EscrowAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              escrow_address:
                type: string
                title: the escrow account address
            description: >-
              QueryEscrowAddressResponse is the response type of the
              EscrowAddress RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: channel_id
          description: unique channel identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: unique port identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      summary: DenomHash queries a denomination hash information.
      operationId: DenomHash
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              hash:
                type: string
                description: hash (in hex format) of the denomination trace information.
            description: >-
              QueryDenomHashResponse is the response type for the
              Query/DenomHash RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: trace
          description: The denomination trace ([port_id]/[channel_id])+/[denom]
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_traces:
    get:
      summary: DenomTraces queries all denomination traces.
      operationId: DenomTraces
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denom_traces:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      description: >-
                        path defines the chain of port/channel identifiers used
                        for tracing the

                        source of the fungible token.
                    base_denom:
                      type: string
                      description: base denomination of the relayed fungible token.
                  description: >-
                    DenomTrace contains the base denomination for ICS20 fungible
                    tokens and the

                    source tracing information path.
                description: denom_traces returns all denominations trace information.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryConnectionsResponse is the response type for the
              Query/DenomTraces RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_traces/{hash}:
    get:
      summary: DenomTrace queries a denomination trace information.
      operationId: DenomTrace
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denom_trace:
                type: object
                properties:
                  path:
                    type: string
                    description: >-
                      path defines the chain of port/channel identifiers used
                      for tracing the

                      source of the fungible token.
                  base_denom:
                    type: string
                    description: base denomination of the relayed fungible token.
                description: >-
                  DenomTrace contains the base denomination for ICS20 fungible
                  tokens and the

                  source tracing information path.
            description: >-
              QueryDenomTraceResponse is the response type for the
              Query/DenomTrace RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: hash
          description: >-
            hash (in hex format) or denom (full denom with ibc prefix) of the
            denomination trace information.
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/apps/transfer/v1/denoms/{denom}/total_escrow:
    get:
      summary: >-
        TotalEscrowForDenom returns the total amount of tokens in escrow based
        on the denom.
      operationId: TotalEscrowForDenom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QueryTotalEscrowForDenomResponse is the response type for
              TotalEscrowForDenom RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/apps/transfer/v1/params:
    get:
      summary: Params queries all parameters of the ibc-transfer module.
      operationId: IBCTransferParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  send_enabled:
                    type: boolean
                    description: >-
                      send_enabled enables or disables all cross-chain token
                      transfers from this

                      chain.
                  receive_enabled:
                    type: boolean
                    description: >-
                      receive_enabled enables or disables all cross-chain token
                      transfers to this

                      chain.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ibc/core/channel/v1/channels:
    get:
      summary: Channels queries all the IBC channels of a chain.
      operationId: Channels
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              channels:
                type: array
                items:
                  type: object
                  properties:
                    state:
                      title: current state of the channel end
                      type: string
                      enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                        - STATE_CLOSED
                        - STATE_FLUSHING
                        - STATE_FLUSHCOMPLETE
                      default: STATE_UNINITIALIZED_UNSPECIFIED
                      description: >-
                        State defines if a channel is in one of the following
                        states:

                        CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or
                        UNINITIALIZED.

                         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                         - STATE_INIT: A channel has just started the opening handshake.
                         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                         - STATE_OPEN: A channel has completed the handshake. Open channels are
                        ready to send and receive packets.
                         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                        packets.
                         - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                         - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                    ordering:
                      title: whether the channel is ordered or unordered
                      type: string
                      enum:
                        - ORDER_NONE_UNSPECIFIED
                        - ORDER_UNORDERED
                        - ORDER_ORDERED
                      default: ORDER_NONE_UNSPECIFIED
                      description: >-
                        - ORDER_NONE_UNSPECIFIED: zero-value for channel
                        ordering
                         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                        which they were sent.
                         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                    counterparty:
                      title: counterparty channel end
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: >-
                            port on the counterparty chain which owns the other
                            end of the channel.
                        channel_id:
                          type: string
                          title: channel end on the counterparty chain
                    connection_hops:
                      type: array
                      items:
                        type: string
                      title: >-
                        list of connection identifiers, in order, along which
                        packets sent on

                        this channel will travel
                    version:
                      type: string
                      title: >-
                        opaque channel version, which is agreed upon during the
                        handshake
                    port_id:
                      type: string
                      title: port identifier
                    channel_id:
                      type: string
                      title: channel identifier
                    upgrade_sequence:
                      type: string
                      format: uint64
                      title: >-
                        upgrade sequence indicates the latest upgrade attempt
                        performed by this channel

                        the value of 0 indicates the channel has never been
                        upgraded
                  description: >-
                    IdentifiedChannel defines a channel with additional port and
                    channel

                    identifier fields.
                description: list of stored channels of the chain.
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            description: >-
              QueryChannelsResponse is the response type for the Query/Channels
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
    get:
      summary: Channel queries an IBC Channel.
      operationId: Channel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              channel:
                title: channel associated with the request identifiers
                type: object
                properties:
                  state:
                    title: current state of the channel end
                    type: string
                    enum:
                      - STATE_UNINITIALIZED_UNSPECIFIED
                      - STATE_INIT
                      - STATE_TRYOPEN
                      - STATE_OPEN
                      - STATE_CLOSED
                      - STATE_FLUSHING
                      - STATE_FLUSHCOMPLETE
                    default: STATE_UNINITIALIZED_UNSPECIFIED
                    description: >-
                      State defines if a channel is in one of the following
                      states:

                      CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or
                      UNINITIALIZED.

                       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                       - STATE_INIT: A channel has just started the opening handshake.
                       - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                       - STATE_OPEN: A channel has completed the handshake. Open channels are
                      ready to send and receive packets.
                       - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                      packets.
                       - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                       - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                  ordering:
                    title: whether the channel is ordered or unordered
                    type: string
                    enum:
                      - ORDER_NONE_UNSPECIFIED
                      - ORDER_UNORDERED
                      - ORDER_ORDERED
                    default: ORDER_NONE_UNSPECIFIED
                    description: |-
                      - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                       - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                      which they were sent.
                       - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                  counterparty:
                    title: counterparty channel end
                    type: object
                    properties:
                      port_id:
                        type: string
                        description: >-
                          port on the counterparty chain which owns the other
                          end of the channel.
                      channel_id:
                        type: string
                        title: channel end on the counterparty chain
                  connection_hops:
                    type: array
                    items:
                      type: string
                    title: >-
                      list of connection identifiers, in order, along which
                      packets sent on

                      this channel will travel
                  version:
                    type: string
                    title: >-
                      opaque channel version, which is agreed upon during the
                      handshake
                  upgrade_sequence:
                    type: string
                    format: uint64
                    title: >-
                      upgrade sequence indicates the latest upgrade attempt
                      performed by this channel

                      the value of 0 indicates the channel has never been
                      upgraded
                description: >-
                  Channel defines pipeline for exactly-once packet delivery
                  between specific

                  modules on separate blockchains, which has at least one end
                  capable of

                  sending packets and one end capable of receiving packets.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            description: >-
              QueryChannelResponse is the response type for the Query/Channel
              RPC method.

              Besides the Channel end, it includes a proof and the height from
              which the

              proof was retrieved.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
    get:
      summary: >-
        ChannelClientState queries for the client state for the channel
        associated

        with the provided channel identifiers.
      operationId: ChannelClientState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              identified_client_state:
                title: client state associated with the channel
                type: object
                properties:
                  client_id:
                    type: string
                    title: client identifier
                  client_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    title: client state
                description: >-
                  IdentifiedClientState defines a client state with an
                  additional client

                  identifier field.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryChannelClientStateResponse is the Response type for the
              Query/QueryChannelClientState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      operationId: ChannelConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              consensus_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                title: consensus state associated with the channel
              client_id:
                type: string
                title: client ID associated with the consensus state
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryChannelClientStateResponse is the Response type for the
              Query/QueryChannelClientState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: revision_number
          description: revision number of the consensus state
          in: path
          required: true
          type: string
          format: uint64
        - name: revision_height
          description: revision height of the consensus state
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
    get:
      summary: >-
        NextSequenceReceive returns the next receive sequence for a given
        channel.
      operationId: NextSequenceReceive
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              next_sequence_receive:
                type: string
                format: uint64
                title: next sequence receive number
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QuerySequenceResponse is the response type for the
              Query/QueryNextSequenceReceiveResponse RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence_send:
    get:
      summary: NextSequenceSend returns the next send sequence for a given channel.
      operationId: NextSequenceSend
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              next_sequence_send:
                type: string
                format: uint64
                title: next sequence send number
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryNextSequenceSendResponse is the request type for the
              Query/QueryNextSequenceSend RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
    get:
      summary: >-
        PacketAcknowledgements returns all the packet acknowledgements
        associated

        with a channel.
      operationId: PacketAcknowledgements
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              acknowledgements:
                type: array
                items:
                  type: object
                  properties:
                    port_id:
                      type: string
                      description: channel port identifier.
                    channel_id:
                      type: string
                      description: channel unique identifier.
                    sequence:
                      type: string
                      format: uint64
                      description: packet sequence.
                    data:
                      type: string
                      format: byte
                      description: embedded data that represents packet state.
                  description: >-
                    PacketState defines the generic type necessary to retrieve
                    and store

                    packet commitments, acknowledgements, and receipts.

                    Caller is responsible for knowing the context necessary to
                    interpret this

                    state as a commitment, acknowledgement, or a receipt.
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryPacketAcknowledgemetsResponse is the request type for the
              Query/QueryPacketAcknowledgements RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
        - name: packet_commitment_sequences
          description: list of packet sequences.
          in: query
          required: false
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: multi
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
    get:
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      operationId: PacketAcknowledgement
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              acknowledgement:
                type: string
                format: byte
                title: packet associated with the request fields
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: >-
              QueryPacketAcknowledgementResponse defines the client query
              response for a

              packet which also includes a proof and the height from which the

              proof was retrieved
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: sequence
          description: packet sequence
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
    get:
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      operationId: PacketCommitments
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              commitments:
                type: array
                items:
                  type: object
                  properties:
                    port_id:
                      type: string
                      description: channel port identifier.
                    channel_id:
                      type: string
                      description: channel unique identifier.
                    sequence:
                      type: string
                      format: uint64
                      description: packet sequence.
                    data:
                      type: string
                      format: byte
                      description: embedded data that represents packet state.
                  description: >-
                    PacketState defines the generic type necessary to retrieve
                    and store

                    packet commitments, acknowledgements, and receipts.

                    Caller is responsible for knowing the context necessary to
                    interpret this

                    state as a commitment, acknowledgement, or a receipt.
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryPacketCommitmentsResponse is the request type for the
              Query/QueryPacketCommitments RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      summary: >-
        UnreceivedAcks returns all the unreceived IBC acknowledgements
        associated

        with a channel and sequences.
      operationId: UnreceivedAcks
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              sequences:
                type: array
                items:
                  type: string
                  format: uint64
                title: list of unreceived acknowledgement sequences
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryUnreceivedAcksResponse is the response type for the
              Query/UnreceivedAcks RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: packet_ack_sequences
          description: list of acknowledgement sequences
          in: path
          required: true
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: csv
          minItems: 1
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets:
    get:
      summary: >-
        UnreceivedPackets returns all the unreceived IBC packets associated with
        a

        channel and sequences.
      operationId: UnreceivedPackets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              sequences:
                type: array
                items:
                  type: string
                  format: uint64
                title: list of unreceived packet sequences
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryUnreceivedPacketsResponse is the response type for the
              Query/UnreceivedPacketCommitments RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: packet_commitment_sequences
          description: list of packet sequences
          in: path
          required: true
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: csv
          minItems: 1
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
    get:
      summary: PacketCommitment queries a stored packet commitment hash.
      operationId: PacketCommitment
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              commitment:
                type: string
                format: byte
                title: packet associated with the request fields
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: >-
              QueryPacketCommitmentResponse defines the client query response
              for a packet

              which also includes a proof and the height from which the proof
              was

              retrieved
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: sequence
          description: packet sequence
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
    get:
      summary: >-
        PacketReceipt queries if a given packet sequence has been received on
        the

        queried chain
      operationId: PacketReceipt
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              received:
                type: boolean
                title: success flag for if receipt exists
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: >-
              QueryPacketReceiptResponse defines the client query response for a
              packet

              receipt which also includes a proof, and the height from which the
              proof was

              retrieved
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          type: string
        - name: sequence
          description: packet sequence
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade:
    get:
      summary: Upgrade returns the upgrade for a given port and channel id.
      operationId: Upgrade
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              upgrade:
                type: object
                properties:
                  fields:
                    type: object
                    properties:
                      ordering:
                        type: string
                        enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        default: ORDER_NONE_UNSPECIFIED
                        description: >-
                          - ORDER_NONE_UNSPECIFIED: zero-value for channel
                          ordering
                           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                          which they were sent.
                           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                        title: Order defines if a channel is ORDERED or UNORDERED
                      connection_hops:
                        type: array
                        items:
                          type: string
                      version:
                        type: string
                    description: >-
                      UpgradeFields are the fields in a channel end which may be
                      changed

                      during a channel upgrade.
                  timeout:
                    type: object
                    properties:
                      height:
                        title: >-
                          block height after which the packet or upgrade times
                          out
                        type: object
                        properties:
                          revision_number:
                            type: string
                            format: uint64
                            title: the revision that the client is currently on
                          revision_height:
                            type: string
                            format: uint64
                            title: the height within the given revision
                        description: >-
                          Normally the RevisionHeight is incremented at each
                          height while keeping

                          RevisionNumber the same. However some consensus
                          algorithms may choose to

                          reset the height in certain conditions e.g. hard
                          forks, state-machine

                          breaking changes In these cases, the RevisionNumber is
                          incremented so that

                          height continues to be monitonically increasing even
                          as the RevisionHeight

                          gets reset
                      timestamp:
                        type: string
                        format: uint64
                        title: >-
                          block timestamp (in nanoseconds) after which the
                          packet or upgrade times out
                    description: >-
                      Timeout defines an execution deadline structure for
                      04-channel handlers.

                      This includes packet lifecycle handlers as well as the
                      upgrade handshake handlers.

                      A valid Timeout contains either one or both of a timestamp
                      and block height (sequence).
                  next_sequence_send:
                    type: string
                    format: uint64
                description: >-
                  Upgrade is a verifiable type which contains the relevant
                  information

                  for an attempted upgrade. It provides the proposed changes to
                  the channel

                  end, the timeout for this upgrade attempt and the next packet
                  sequence

                  which allows the counterparty to efficiently know the highest
                  sequence it has received.

                  The next sequence send is used for pruning and upgrading from
                  unordered to ordered channels.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: >-
              QueryUpgradeResponse is the response type for the
              QueryUpgradeResponse RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          in: path
          required: true
          type: string
        - name: port_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade_error:
    get:
      summary: UpgradeError returns the error receipt if the upgrade handshake failed.
      operationId: UpgradeError
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              error_receipt:
                type: object
                properties:
                  sequence:
                    type: string
                    format: uint64
                    title: the channel upgrade sequence
                  message:
                    type: string
                    title: the error message detailing the cause of failure
                description: >-
                  ErrorReceipt defines a type which encapsulates the upgrade
                  sequence and error associated with the

                  upgrade handshake failure. When a channel upgrade handshake is
                  aborted both chains are expected to increment to the

                  next sequence.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: >-
              QueryUpgradeErrorResponse is the response type for the
              Query/QueryUpgradeError RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: channel_id
          in: path
          required: true
          type: string
        - name: port_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/channel/v1/connections/{connection}/channels:
    get:
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      operationId: ConnectionChannels
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              channels:
                type: array
                items:
                  type: object
                  properties:
                    state:
                      title: current state of the channel end
                      type: string
                      enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                        - STATE_CLOSED
                        - STATE_FLUSHING
                        - STATE_FLUSHCOMPLETE
                      default: STATE_UNINITIALIZED_UNSPECIFIED
                      description: >-
                        State defines if a channel is in one of the following
                        states:

                        CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or
                        UNINITIALIZED.

                         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                         - STATE_INIT: A channel has just started the opening handshake.
                         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                         - STATE_OPEN: A channel has completed the handshake. Open channels are
                        ready to send and receive packets.
                         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                        packets.
                         - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                         - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                    ordering:
                      title: whether the channel is ordered or unordered
                      type: string
                      enum:
                        - ORDER_NONE_UNSPECIFIED
                        - ORDER_UNORDERED
                        - ORDER_ORDERED
                      default: ORDER_NONE_UNSPECIFIED
                      description: >-
                        - ORDER_NONE_UNSPECIFIED: zero-value for channel
                        ordering
                         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                        which they were sent.
                         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                    counterparty:
                      title: counterparty channel end
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: >-
                            port on the counterparty chain which owns the other
                            end of the channel.
                        channel_id:
                          type: string
                          title: channel end on the counterparty chain
                    connection_hops:
                      type: array
                      items:
                        type: string
                      title: >-
                        list of connection identifiers, in order, along which
                        packets sent on

                        this channel will travel
                    version:
                      type: string
                      title: >-
                        opaque channel version, which is agreed upon during the
                        handshake
                    port_id:
                      type: string
                      title: port identifier
                    channel_id:
                      type: string
                      title: channel identifier
                    upgrade_sequence:
                      type: string
                      format: uint64
                      title: >-
                        upgrade sequence indicates the latest upgrade attempt
                        performed by this channel

                        the value of 0 indicates the channel has never been
                        upgraded
                  description: >-
                    IdentifiedChannel defines a channel with additional port and
                    channel

                    identifier fields.
                description: list of channels associated with a connection.
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryConnectionChannelsResponse is the Response type for the
              Query/QueryConnectionChannels RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: connection
          description: connection unique identifier
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/channel/v1/params:
    get:
      summary: ChannelParams queries all parameters of the ibc channel submodule.
      operationId: ChannelParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  upgrade_timeout:
                    type: object
                    properties:
                      height:
                        title: >-
                          block height after which the packet or upgrade times
                          out
                        type: object
                        properties:
                          revision_number:
                            type: string
                            format: uint64
                            title: the revision that the client is currently on
                          revision_height:
                            type: string
                            format: uint64
                            title: the height within the given revision
                        description: >-
                          Normally the RevisionHeight is incremented at each
                          height while keeping

                          RevisionNumber the same. However some consensus
                          algorithms may choose to

                          reset the height in certain conditions e.g. hard
                          forks, state-machine

                          breaking changes In these cases, the RevisionNumber is
                          incremented so that

                          height continues to be monitonically increasing even
                          as the RevisionHeight

                          gets reset
                      timestamp:
                        type: string
                        format: uint64
                        title: >-
                          block timestamp (in nanoseconds) after which the
                          packet or upgrade times out
                    description: >-
                      Timeout defines an execution deadline structure for
                      04-channel handlers.

                      This includes packet lifecycle handlers as well as the
                      upgrade handshake handlers.

                      A valid Timeout contains either one or both of a timestamp
                      and block height (sequence).
            description: >-
              QueryChannelParamsResponse is the response type for the
              Query/ChannelParams RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ibc/core/client/v1/client_states:
    get:
      summary: ClientStates queries all the IBC light clients of a chain.
      operationId: ClientStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              client_states:
                type: array
                items:
                  type: object
                  properties:
                    client_id:
                      type: string
                      title: client identifier
                    client_state:
                      title: client state
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  description: >-
                    IdentifiedClientState defines a client state with an
                    additional client

                    identifier field.
                description: list of stored ClientStates of the chain.
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryClientStatesResponse is the response type for the
              Query/ClientStates RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/client/v1/client_states/{client_id}:
    get:
      summary: ClientState queries an IBC light client.
      operationId: ClientState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              client_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                title: client state associated with the request identifier
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            description: >-
              QueryClientStateResponse is the response type for the
              Query/ClientState RPC

              method. Besides the client state, it includes a proof and the
              height from

              which the proof was retrieved.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: client_id
          description: client state unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/client/v1/client_status/{client_id}:
    get:
      summary: Status queries the status of an IBC client.
      operationId: ClientStatus
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              status:
                type: string
            description: >-
              QueryClientStatusResponse is the response type for the
              Query/ClientStatus RPC

              method. It returns the current status of the IBC client.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: client_id
          description: client unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/client/v1/consensus_states/{client_id}:
    get:
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      operationId: ConsensusStates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              consensus_states:
                type: array
                items:
                  type: object
                  properties:
                    height:
                      title: consensus state height
                      type: object
                      properties:
                        revision_number:
                          type: string
                          format: uint64
                          title: the revision that the client is currently on
                        revision_height:
                          type: string
                          format: uint64
                          title: the height within the given revision
                      description: >-
                        Normally the RevisionHeight is incremented at each
                        height while keeping

                        RevisionNumber the same. However some consensus
                        algorithms may choose to

                        reset the height in certain conditions e.g. hard forks,
                        state-machine

                        breaking changes In these cases, the RevisionNumber is
                        incremented so that

                        height continues to be monitonically increasing even as
                        the RevisionHeight

                        gets reset
                    consensus_state:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      title: consensus state
                  description: >-
                    ConsensusStateWithHeight defines a consensus state with an
                    additional height

                    field.
                title: consensus states associated with the identifier
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: |-
              QueryConsensusStatesResponse is the response type for the
              Query/ConsensusStates RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: client_id
          description: client identifier
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/client/v1/consensus_states/{client_id}/heights:
    get:
      summary: >-
        ConsensusStateHeights queries the height of every consensus states
        associated with a given client.
      operationId: ConsensusStateHeights
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              consensus_state_heights:
                type: array
                items:
                  type: object
                  properties:
                    revision_number:
                      type: string
                      format: uint64
                      title: the revision that the client is currently on
                    revision_height:
                      type: string
                      format: uint64
                      title: the height within the given revision
                  description: >-
                    Normally the RevisionHeight is incremented at each height
                    while keeping

                    RevisionNumber the same. However some consensus algorithms
                    may choose to

                    reset the height in certain conditions e.g. hard forks,
                    state-machine

                    breaking changes In these cases, the RevisionNumber is
                    incremented so that

                    height continues to be monitonically increasing even as the
                    RevisionHeight

                    gets reset
                  title: >-
                    Height is a monotonically increasing data type

                    that can be compared against another Height for the purposes
                    of updating and

                    freezing clients
                title: consensus state heights
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: |-
              QueryConsensusStateHeightsResponse is the response type for the
              Query/ConsensusStateHeights RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: client_id
          description: client identifier
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
    get:
      summary: >-
        ConsensusState queries a consensus state associated with a client state
        at

        a given height.
      operationId: ConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              consensus_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                title: >-
                  consensus state associated with the client identifier at the
                  given height
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
                title: >-
                  Height is a monotonically increasing data type

                  that can be compared against another Height for the purposes
                  of updating and

                  freezing clients
            title: >-
              QueryConsensusStateResponse is the response type for the
              Query/ConsensusState

              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: client_id
          description: client identifier
          in: path
          required: true
          type: string
        - name: revision_number
          description: consensus state revision number
          in: path
          required: true
          type: string
          format: uint64
        - name: revision_height
          description: consensus state revision height
          in: path
          required: true
          type: string
          format: uint64
        - name: latest_height
          description: >-
            latest_height overrides the height field and queries the latest
            stored

            ConsensusState.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/client/v1/params:
    get:
      summary: ClientParams queries all parameters of the ibc client submodule.
      operationId: ClientParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  allowed_clients:
                    type: array
                    items:
                      type: string
                    description: >-
                      allowed_clients defines the list of allowed client state
                      types which can be created

                      and interacted with. If a client type is removed from the
                      allowed clients list, usage

                      of this client will be disabled until it is added again to
                      the list.
            description: >-
              QueryClientParamsResponse is the response type for the
              Query/ClientParams RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ibc/core/client/v1/upgraded_client_states:
    get:
      summary: UpgradedClientState queries an Upgraded IBC light client.
      operationId: UpgradedClientState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              upgraded_client_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                title: client state associated with the request identifier
            description: |-
              QueryUpgradedClientStateResponse is the response type for the
              Query/UpgradedClientState RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      operationId: IBCUpgradedConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              upgraded_consensus_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                title: Consensus state associated with the request identifier
            description: |-
              QueryUpgradedConsensusStateResponse is the response type for the
              Query/UpgradedConsensusState RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ibc/core/connection/v1/client_connections/{client_id}:
    get:
      summary: |-
        ClientConnections queries the connection paths associated with a client
        state.
      operationId: ClientConnections
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              connection_paths:
                type: array
                items:
                  type: string
                description: slice of all the connection paths associated with a client.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was generated
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryClientConnectionsResponse is the response type for the
              Query/ClientConnections RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: client_id
          description: client identifier associated with a connection
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/connection/v1/connections:
    get:
      summary: Connections queries all the IBC connections of a chain.
      operationId: Connections
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              connections:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: connection identifier.
                    client_id:
                      type: string
                      description: client associated with this connection.
                    versions:
                      type: array
                      items:
                        type: object
                        properties:
                          identifier:
                            type: string
                            title: unique version identifier
                          features:
                            type: array
                            items:
                              type: string
                            title: >-
                              list of features compatible with the specified
                              identifier
                        description: >-
                          Version defines the versioning scheme used to
                          negotiate the IBC version in

                          the connection handshake.
                      title: >-
                        IBC version which can be utilised to determine encodings
                        or protocols for

                        channels or packets utilising this connection
                    state:
                      description: current state of the connection end.
                      type: string
                      enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                      default: STATE_UNINITIALIZED_UNSPECIFIED
                    counterparty:
                      description: counterparty chain associated with this connection.
                      type: object
                      properties:
                        client_id:
                          type: string
                          description: >-
                            identifies the client on the counterparty chain
                            associated with a given

                            connection.
                        connection_id:
                          type: string
                          description: >-
                            identifies the connection end on the counterparty
                            chain associated with a

                            given connection.
                        prefix:
                          description: commitment merkle prefix of the counterparty chain.
                          type: object
                          properties:
                            key_prefix:
                              type: string
                              format: byte
                          title: >-
                            MerklePrefix is merkle path prefixed to the key.

                            The constructed key from the Path and the key will
                            be append(Path.KeyPath,

                            append(Path.KeyPrefix, key...))
                    delay_period:
                      type: string
                      format: uint64
                      description: delay period associated with this connection.
                  description: >-
                    IdentifiedConnection defines a connection with additional
                    connection

                    identifier field.
                description: list of stored connections of the chain.
              pagination:
                title: pagination response
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
              height:
                title: query block height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            description: >-
              QueryConnectionsResponse is the response type for the
              Query/Connections RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ibc/core/connection/v1/connections/{connection_id}:
    get:
      summary: Connection queries an IBC connection end.
      operationId: Connection
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              connection:
                title: connection associated with the request identifier
                type: object
                properties:
                  client_id:
                    type: string
                    description: client associated with this connection.
                  versions:
                    type: array
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                          title: unique version identifier
                        features:
                          type: array
                          items:
                            type: string
                          title: >-
                            list of features compatible with the specified
                            identifier
                      description: >-
                        Version defines the versioning scheme used to negotiate
                        the IBC version in

                        the connection handshake.
                    description: >-
                      IBC version which can be utilised to determine encodings
                      or protocols for

                      channels or packets utilising this connection.
                  state:
                    description: current state of the connection end.
                    type: string
                    enum:
                      - STATE_UNINITIALIZED_UNSPECIFIED
                      - STATE_INIT
                      - STATE_TRYOPEN
                      - STATE_OPEN
                    default: STATE_UNINITIALIZED_UNSPECIFIED
                  counterparty:
                    description: counterparty chain associated with this connection.
                    type: object
                    properties:
                      client_id:
                        type: string
                        description: >-
                          identifies the client on the counterparty chain
                          associated with a given

                          connection.
                      connection_id:
                        type: string
                        description: >-
                          identifies the connection end on the counterparty
                          chain associated with a

                          given connection.
                      prefix:
                        description: commitment merkle prefix of the counterparty chain.
                        type: object
                        properties:
                          key_prefix:
                            type: string
                            format: byte
                        title: >-
                          MerklePrefix is merkle path prefixed to the key.

                          The constructed key from the Path and the key will be
                          append(Path.KeyPath,

                          append(Path.KeyPrefix, key...))
                  delay_period:
                    type: string
                    format: uint64
                    description: >-
                      delay period that must pass before a consensus state can
                      be used for

                      packet-verification NOTE: delay period logic is only
                      implemented by some

                      clients.
                description: >-
                  ConnectionEnd defines a stateful object on a chain connected
                  to another

                  separate one.

                  NOTE: there must only be 2 defined ConnectionEnds to establish

                  a connection between two chains.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            description: >-
              QueryConnectionResponse is the response type for the
              Query/Connection RPC

              method. Besides the connection end, it includes a proof and the
              height from

              which the proof was retrieved.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: connection_id
          description: connection unique identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/connection/v1/connections/{connection_id}/client_state:
    get:
      summary: |-
        ConnectionClientState queries the client state associated with the
        connection.
      operationId: ConnectionClientState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              identified_client_state:
                title: client state associated with the channel
                type: object
                properties:
                  client_id:
                    type: string
                    title: client identifier
                  client_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    title: client state
                description: >-
                  IdentifiedClientState defines a client state with an
                  additional client

                  identifier field.
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryConnectionClientStateResponse is the response type for the
              Query/ConnectionClientState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: connection_id
          description: connection identifier
          in: path
          required: true
          type: string
      tags:
        - Query
  /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      summary: |-
        ConnectionConsensusState queries the consensus state associated with the
        connection.
      operationId: ConnectionConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              consensus_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                title: consensus state associated with the channel
              client_id:
                type: string
                title: client ID associated with the consensus state
              proof:
                type: string
                format: byte
                title: merkle proof of existence
              proof_height:
                title: height at which the proof was retrieved
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
            title: |-
              QueryConnectionConsensusStateResponse is the response type for the
              Query/ConnectionConsensusState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: connection_id
          description: connection identifier
          in: path
          required: true
          type: string
        - name: revision_number
          in: path
          required: true
          type: string
          format: uint64
        - name: revision_height
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ibc/core/connection/v1/params:
    get:
      summary: ConnectionParams queries all parameters of the ibc connection submodule.
      operationId: ConnectionParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_expected_time_per_block:
                    type: string
                    format: uint64
                    description: >-
                      maximum expected time per block (in nanoseconds), used to
                      enforce block delay. This parameter should reflect the

                      largest amount of time that the chain might reasonably
                      take to produce the next block under normal operating

                      conditions. A safe choice is 3-5x the expected time per
                      block.
            description: >-
              QueryConnectionParamsResponse is the response type for the
              Query/ConnectionParams RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ibc/apps/packetforward/v1/params:
    get:
      summary: Params queries all parameters of the packetforward module.
      operationId: PacketForwardParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  fee_percentage:
                    type: string
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmwasm/wasm/v1/code:
    get:
      summary: Codes gets the metadata for all stored wasm codes
      operationId: Codes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_infos:
                type: array
                items:
                  type: object
                  properties:
                    code_id:
                      type: string
                      format: uint64
                    creator:
                      type: string
                    data_hash:
                      type: string
                      format: byte
                    instantiate_permission:
                      type: object
                      properties:
                        permission:
                          type: string
                          enum:
                            - ACCESS_TYPE_UNSPECIFIED
                            - ACCESS_TYPE_NOBODY
                            - ACCESS_TYPE_EVERYBODY
                            - ACCESS_TYPE_ANY_OF_ADDRESSES
                          default: ACCESS_TYPE_UNSPECIFIED
                          description: >-
                            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                            placeholder for empty value
                             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                          title: AccessType permission types
                        addresses:
                          type: array
                          items:
                            type: string
                      description: AccessConfig access control type.
                  title: CodeInfoResponse contains code meta data from CodeInfo
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryCodesResponse is the response type for the Query/Codes RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmwasm/wasm/v1/code/{code_id}:
    get:
      summary: Code gets the binary code and metadata for a singe wasm code
      operationId: Code
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_info:
                type: object
                properties:
                  code_id:
                    type: string
                    format: uint64
                  creator:
                    type: string
                  data_hash:
                    type: string
                    format: byte
                  instantiate_permission:
                    type: object
                    properties:
                      permission:
                        type: string
                        enum:
                          - ACCESS_TYPE_UNSPECIFIED
                          - ACCESS_TYPE_NOBODY
                          - ACCESS_TYPE_EVERYBODY
                          - ACCESS_TYPE_ANY_OF_ADDRESSES
                        default: ACCESS_TYPE_UNSPECIFIED
                        description: >-
                          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                          placeholder for empty value
                           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                        title: AccessType permission types
                      addresses:
                        type: array
                        items:
                          type: string
                    description: AccessConfig access control type.
                title: CodeInfoResponse contains code meta data from CodeInfo
              data:
                type: string
                format: byte
            title: >-
              QueryCodeResponse is the response type for the Query/Code RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: code_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmwasm/wasm/v1/code/{code_id}/contracts:
    get:
      summary: ContractsByCode lists all smart contracts for a code id
      operationId: ContractsByCode
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contracts:
                type: array
                items:
                  type: string
                title: contracts are a set of contract addresses
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryContractsByCodeResponse is the response type for the
              Query/ContractsByCode RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: code_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmwasm/wasm/v1/codes/params:
    get:
      summary: Params gets the module params
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  code_upload_access:
                    type: object
                    properties:
                      permission:
                        type: string
                        enum:
                          - ACCESS_TYPE_UNSPECIFIED
                          - ACCESS_TYPE_NOBODY
                          - ACCESS_TYPE_EVERYBODY
                          - ACCESS_TYPE_ANY_OF_ADDRESSES
                        default: ACCESS_TYPE_UNSPECIFIED
                        description: >-
                          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                          placeholder for empty value
                           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                        title: AccessType permission types
                      addresses:
                        type: array
                        items:
                          type: string
                    description: AccessConfig access control type.
                  instantiate_default_permission:
                    type: string
                    enum:
                      - ACCESS_TYPE_UNSPECIFIED
                      - ACCESS_TYPE_NOBODY
                      - ACCESS_TYPE_EVERYBODY
                      - ACCESS_TYPE_ANY_OF_ADDRESSES
                    default: ACCESS_TYPE_UNSPECIFIED
                    description: >-
                      - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                      placeholder for empty value
                       - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                       - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                       - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                    title: AccessType permission types
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmwasm/wasm/v1/codes/pinned:
    get:
      summary: PinnedCodes gets the pinned code ids
      operationId: PinnedCodes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_ids:
                type: array
                items:
                  type: string
                  format: uint64
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryPinnedCodesResponse is the response type for the
              Query/PinnedCodes RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}:
    get:
      summary: ContractInfo gets the contract meta data
      operationId: ContractInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
                title: address is the address of the contract
              contract_info:
                type: object
                properties:
                  code_id:
                    type: string
                    format: uint64
                    title: CodeID is the reference to the stored Wasm code
                  creator:
                    type: string
                    title: Creator address who initially instantiated the contract
                  admin:
                    type: string
                    title: Admin is an optional address that can execute migrations
                  label:
                    type: string
                    description: >-
                      Label is optional metadata to be stored with a contract
                      instance.
                  created:
                    description: Created Tx position when the contract was instantiated.
                    type: object
                    properties:
                      block_height:
                        type: string
                        format: uint64
                        title: BlockHeight is the block the contract was created at
                      tx_index:
                        type: string
                        format: uint64
                        title: >-
                          TxIndex is a monotonic counter within the block
                          (actual transaction index,

                          or gas consumed)
                  ibc_port_id:
                    type: string
                  extension:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                title: ContractInfo stores a WASM contract instance
            title: >-
              QueryContractInfoResponse is the response type for the
              Query/ContractInfo RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract to query
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/history:
    get:
      summary: ContractHistory gets the contract code history
      operationId: ContractHistory
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              entries:
                type: array
                items:
                  type: object
                  properties:
                    operation:
                      type: string
                      enum:
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                      default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                      description: >-
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                        ContractCodeHistoryOperationTypeUnspecified placeholder
                        for empty value
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                      title: >-
                        ContractCodeHistoryOperationType actions that caused a
                        code change
                    code_id:
                      type: string
                      format: uint64
                      title: CodeID is the reference to the stored WASM code
                    updated:
                      description: Updated Tx position when the operation was executed.
                      type: object
                      properties:
                        block_height:
                          type: string
                          format: uint64
                          title: BlockHeight is the block the contract was created at
                        tx_index:
                          type: string
                          format: uint64
                          title: >-
                            TxIndex is a monotonic counter within the block
                            (actual transaction index,

                            or gas consumed)
                    msg:
                      type: string
                      format: byte
                  description: ContractCodeHistoryEntry metadata to a contract.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryContractHistoryResponse is the response type for the
              Query/ContractHistory RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract to query
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/raw/{query_data}:
    get:
      summary: RawContractState gets single key from the raw store data of a contract
      operationId: RawContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
                title: Data contains the raw store data
            title: |-
              QueryRawContractStateResponse is the response type for the
              Query/RawContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: query_data
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/smart/{query_data}:
    get:
      summary: SmartContractState get smart query result from the contract
      operationId: SmartContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
                title: Data contains the json data returned from the smart contract
            title: |-
              QuerySmartContractStateResponse is the response type for the
              Query/SmartContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: query_data
          description: QueryData contains the query data passed to the contract
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/state:
    get:
      summary: AllContractState gets all raw store data for a single contract
      operationId: AllContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              models:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      format: byte
                      title: hex-encode key to read it better (this is often ascii)
                    value:
                      type: string
                      format: byte
                      title: base64-encode raw value
                  title: Model is a struct that holds a KV pair
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryAllContractStateResponse is the response type for the
              Query/AllContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmwasm/wasm/v1/contracts/creator/{creator_address}:
    get:
      summary: ContractsByCreator gets the contracts by creator
      operationId: ContractsByCreator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contract_addresses:
                type: array
                items:
                  type: string
                title: ContractAddresses result set
              pagination:
                description: Pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryContractsByCreatorResponse is the response type for the
              Query/ContractsByCreator RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: creator_address
          description: CreatorAddress is the address of contract creator
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
definitions:
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON


      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON


            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  injective.exchange.v1beta1.AccountVolume:
    type: object
    properties:
      account:
        type: string
      volume:
        type: string
  injective.exchange.v1beta1.AggregateAccountVolumeRecord:
    type: object
    properties:
      account:
        type: string
      market_volumes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            volume:
              type: object
              properties:
                maker_volume:
                  type: string
                taker_volume:
                  type: string
  injective.exchange.v1beta1.AggregateSubaccountVolumeRecord:
    type: object
    properties:
      subaccount_id:
        type: string
      market_volumes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            volume:
              type: object
              properties:
                maker_volume:
                  type: string
                taker_volume:
                  type: string
  injective.exchange.v1beta1.AtomicMarketOrderAccessLevel:
    type: string
    enum:
      - Nobody
      - BeginBlockerSmartContractsOnly
      - SmartContractsOnly
      - Everyone
    default: Nobody
    title: '- BeginBlockerSmartContractsOnly: currently unsupported'
  injective.exchange.v1beta1.Balance:
    type: object
    properties:
      subaccount_id:
        type: string
      denom:
        type: string
      deposits:
        type: object
        properties:
          available_balance:
            type: string
          total_balance:
            type: string
        title: A subaccount's deposit for a given base currency
  injective.exchange.v1beta1.BalanceMismatch:
    type: object
    properties:
      subaccountId:
        type: string
      denom:
        type: string
      available:
        type: string
      total:
        type: string
      balance_hold:
        type: string
      expected_total:
        type: string
      difference:
        type: string
  injective.exchange.v1beta1.BalanceWithMarginHold:
    type: object
    properties:
      subaccountId:
        type: string
      denom:
        type: string
      available:
        type: string
      total:
        type: string
      balance_hold:
        type: string
  injective.exchange.v1beta1.BinaryOptionsMarket:
    type: object
    properties:
      ticker:
        type: string
        description: Ticker for the derivative contract.
      oracle_symbol:
        type: string
        title: Oracle symbol
      oracle_provider:
        type: string
        title: Oracle Provider
      oracle_type:
        title: Oracle type
        type: string
        enum:
          - Unspecified
          - Band
          - PriceFeed
          - Coinbase
          - Chainlink
          - Razor
          - Dia
          - API3
          - Uma
          - Pyth
          - BandIBC
          - Provider
        default: Unspecified
      oracle_scale_factor:
        type: integer
        format: int64
        description: Scale factor for oracle prices.
      expiration_timestamp:
        type: string
        format: int64
        title: expiration timestamp
      settlement_timestamp:
        type: string
        format: int64
        title: expiration timestamp
      admin:
        type: string
        title: admin of the market
      quote_denom:
        type: string
        title: >-
          Address of the quote currency denomination for the binary options
          contract
      market_id:
        type: string
        description: Unique market ID.
      maker_fee_rate:
        type: string
        title: maker_fee_rate defines the maker fee rate of a binary options market
      taker_fee_rate:
        type: string
        title: taker_fee_rate defines the taker fee rate of a derivative market
      relayer_fee_share_rate:
        type: string
        title: >-
          relayer_fee_share_rate defines the percentage of the transaction fee
          shared

          with the relayer in a derivative market
      status:
        title: Status of the market
        type: string
        enum:
          - Unspecified
          - Active
          - Paused
          - Demolished
          - Expired
        default: Unspecified
      min_price_tick_size:
        type: string
        title: >-
          min_price_tick_size defines the minimum tick size that the price and
          margin

          required for orders in the market
      min_quantity_tick_size:
        type: string
        title: |-
          min_quantity_tick_size defines the minimum tick size of the quantity
          required for orders in the market
      settlement_price:
        type: string
    description: An object describing a binary options market in Injective Protocol.
  injective.exchange.v1beta1.CampaignRewardPool:
    type: object
    properties:
      start_timestamp:
        type: string
        format: int64
      max_campaign_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: >-
          max_campaign_rewards are the maximum reward amounts to be disbursed at
          the

          end of the campaign
  injective.exchange.v1beta1.ConditionalDerivativeOrderBook:
    type: object
    properties:
      market_id:
        type: string
      limit_buy_orders:
        type: array
        items:
          type: object
          properties:
            order_info:
              title: order_info contains the information of the order
              type: object
              properties:
                subaccount_id:
                  type: string
                  title: bytes32 subaccount ID that created the order
                fee_recipient:
                  type: string
                  title: >-
                    address fee_recipient address that will receive fees for the
                    order
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: quantity of the order
                cid:
                  type: string
            order_type:
              title: order types
              type: string
              enum:
                - UNSPECIFIED
                - BUY
                - SELL
                - STOP_BUY
                - STOP_SELL
                - TAKE_BUY
                - TAKE_SELL
                - BUY_PO
                - SELL_PO
                - BUY_ATOMIC
                - SELL_ATOMIC
              default: UNSPECIFIED
            margin:
              type: string
              title: margin is the margin used by the limit order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            trigger_price:
              type: string
              title: trigger_price is the trigger price used by stop/take orders
            order_hash:
              type: string
              format: byte
          description: A valid Derivative limit order with Metadata.
      market_buy_orders:
        type: array
        items:
          type: object
          properties:
            order_info:
              title: order_info contains the information of the order
              type: object
              properties:
                subaccount_id:
                  type: string
                  title: bytes32 subaccount ID that created the order
                fee_recipient:
                  type: string
                  title: >-
                    address fee_recipient address that will receive fees for the
                    order
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: quantity of the order
                cid:
                  type: string
            order_type:
              title: order types
              type: string
              enum:
                - UNSPECIFIED
                - BUY
                - SELL
                - STOP_BUY
                - STOP_SELL
                - TAKE_BUY
                - TAKE_SELL
                - BUY_PO
                - SELL_PO
                - BUY_ATOMIC
                - SELL_ATOMIC
              default: UNSPECIFIED
            margin:
              type: string
            margin_hold:
              type: string
            trigger_price:
              type: string
              title: trigger_price is the trigger price used by stop/take orders
            order_hash:
              type: string
              format: byte
          description: A valid Derivative market order with Metadata.
      limit_sell_orders:
        type: array
        items:
          type: object
          properties:
            order_info:
              title: order_info contains the information of the order
              type: object
              properties:
                subaccount_id:
                  type: string
                  title: bytes32 subaccount ID that created the order
                fee_recipient:
                  type: string
                  title: >-
                    address fee_recipient address that will receive fees for the
                    order
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: quantity of the order
                cid:
                  type: string
            order_type:
              title: order types
              type: string
              enum:
                - UNSPECIFIED
                - BUY
                - SELL
                - STOP_BUY
                - STOP_SELL
                - TAKE_BUY
                - TAKE_SELL
                - BUY_PO
                - SELL_PO
                - BUY_ATOMIC
                - SELL_ATOMIC
              default: UNSPECIFIED
            margin:
              type: string
              title: margin is the margin used by the limit order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            trigger_price:
              type: string
              title: trigger_price is the trigger price used by stop/take orders
            order_hash:
              type: string
              format: byte
          description: A valid Derivative limit order with Metadata.
      market_sell_orders:
        type: array
        items:
          type: object
          properties:
            order_info:
              title: order_info contains the information of the order
              type: object
              properties:
                subaccount_id:
                  type: string
                  title: bytes32 subaccount ID that created the order
                fee_recipient:
                  type: string
                  title: >-
                    address fee_recipient address that will receive fees for the
                    order
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: quantity of the order
                cid:
                  type: string
            order_type:
              title: order types
              type: string
              enum:
                - UNSPECIFIED
                - BUY
                - SELL
                - STOP_BUY
                - STOP_SELL
                - TAKE_BUY
                - TAKE_SELL
                - BUY_PO
                - SELL_PO
                - BUY_ATOMIC
                - SELL_ATOMIC
              default: UNSPECIFIED
            margin:
              type: string
            margin_hold:
              type: string
            trigger_price:
              type: string
              title: trigger_price is the trigger price used by stop/take orders
            order_hash:
              type: string
              format: byte
          description: A valid Derivative market order with Metadata.
    title: Orderbook containing limit & market conditional orders
  injective.exchange.v1beta1.DenomDecimals:
    type: object
    properties:
      denom:
        type: string
      decimals:
        type: string
        format: uint64
  injective.exchange.v1beta1.Deposit:
    type: object
    properties:
      available_balance:
        type: string
      total_balance:
        type: string
    title: A subaccount's deposit for a given base currency
  injective.exchange.v1beta1.DerivativeLimitOrder:
    type: object
    properties:
      order_info:
        title: order_info contains the information of the order
        type: object
        properties:
          subaccount_id:
            type: string
            title: bytes32 subaccount ID that created the order
          fee_recipient:
            type: string
            title: address fee_recipient address that will receive fees for the order
          price:
            type: string
            title: price of the order
          quantity:
            type: string
            title: quantity of the order
          cid:
            type: string
      order_type:
        title: order types
        type: string
        enum:
          - UNSPECIFIED
          - BUY
          - SELL
          - STOP_BUY
          - STOP_SELL
          - TAKE_BUY
          - TAKE_SELL
          - BUY_PO
          - SELL_PO
          - BUY_ATOMIC
          - SELL_ATOMIC
        default: UNSPECIFIED
      margin:
        type: string
        title: margin is the margin used by the limit order
      fillable:
        type: string
        title: the amount of the quantity remaining fillable
      trigger_price:
        type: string
        title: trigger_price is the trigger price used by stop/take orders
      order_hash:
        type: string
        format: byte
    description: A valid Derivative limit order with Metadata.
  injective.exchange.v1beta1.DerivativeMarket:
    type: object
    properties:
      ticker:
        type: string
        description: Ticker for the derivative contract.
      oracle_base:
        type: string
        title: Oracle base currency
      oracle_quote:
        type: string
        title: Oracle quote currency
      oracle_type:
        title: Oracle type
        type: string
        enum:
          - Unspecified
          - Band
          - PriceFeed
          - Coinbase
          - Chainlink
          - Razor
          - Dia
          - API3
          - Uma
          - Pyth
          - BandIBC
          - Provider
        default: Unspecified
      oracle_scale_factor:
        type: integer
        format: int64
        description: Scale factor for oracle prices.
      quote_denom:
        type: string
        title: Address of the quote currency denomination for the derivative contract
      market_id:
        type: string
        description: Unique market ID.
      initial_margin_ratio:
        type: string
        title: |-
          initial_margin_ratio defines the initial margin ratio of a derivative
          market
      maintenance_margin_ratio:
        type: string
        title: |-
          maintenance_margin_ratio defines the maintenance margin ratio of a
          derivative market
      maker_fee_rate:
        type: string
        title: maker_fee_rate defines the maker fee rate of a derivative market
      taker_fee_rate:
        type: string
        title: taker_fee_rate defines the taker fee rate of a derivative market
      relayer_fee_share_rate:
        type: string
        title: >-
          relayer_fee_share_rate defines the percentage of the transaction fee
          shared

          with the relayer in a derivative market
      isPerpetual:
        type: boolean
        title: >-
          true if the market is a perpetual market. false if the market is an
          expiry

          futures market
      status:
        title: Status of the market
        type: string
        enum:
          - Unspecified
          - Active
          - Paused
          - Demolished
          - Expired
        default: Unspecified
      min_price_tick_size:
        type: string
        title: >-
          min_price_tick_size defines the minimum tick size that the price and
          margin

          required for orders in the market
      min_quantity_tick_size:
        type: string
        title: |-
          min_quantity_tick_size defines the minimum tick size of the quantity
          required for orders in the market
    description: >-
      An object describing a derivative market in the Injective Futures
      Protocol.
  injective.exchange.v1beta1.DerivativeMarketOrder:
    type: object
    properties:
      order_info:
        title: order_info contains the information of the order
        type: object
        properties:
          subaccount_id:
            type: string
            title: bytes32 subaccount ID that created the order
          fee_recipient:
            type: string
            title: address fee_recipient address that will receive fees for the order
          price:
            type: string
            title: price of the order
          quantity:
            type: string
            title: quantity of the order
          cid:
            type: string
      order_type:
        title: order types
        type: string
        enum:
          - UNSPECIFIED
          - BUY
          - SELL
          - STOP_BUY
          - STOP_SELL
          - TAKE_BUY
          - TAKE_SELL
          - BUY_PO
          - SELL_PO
          - BUY_ATOMIC
          - SELL_ATOMIC
        default: UNSPECIFIED
      margin:
        type: string
      margin_hold:
        type: string
      trigger_price:
        type: string
        title: trigger_price is the trigger price used by stop/take orders
      order_hash:
        type: string
        format: byte
    description: A valid Derivative market order with Metadata.
  injective.exchange.v1beta1.DerivativeMarketSettlementInfo:
    type: object
    properties:
      market_id:
        type: string
        description: market ID.
      settlement_price:
        type: string
        title: settlement_price defines the settlement price
  injective.exchange.v1beta1.DerivativeOrderBook:
    type: object
    properties:
      market_id:
        type: string
      isBuySide:
        type: boolean
      orders:
        type: array
        items:
          type: object
          properties:
            order_info:
              title: order_info contains the information of the order
              type: object
              properties:
                subaccount_id:
                  type: string
                  title: bytes32 subaccount ID that created the order
                fee_recipient:
                  type: string
                  title: >-
                    address fee_recipient address that will receive fees for the
                    order
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: quantity of the order
                cid:
                  type: string
            order_type:
              title: order types
              type: string
              enum:
                - UNSPECIFIED
                - BUY
                - SELL
                - STOP_BUY
                - STOP_SELL
                - TAKE_BUY
                - TAKE_SELL
                - BUY_PO
                - SELL_PO
                - BUY_ATOMIC
                - SELL_ATOMIC
              default: UNSPECIFIED
            margin:
              type: string
              title: margin is the margin used by the limit order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            trigger_price:
              type: string
              title: trigger_price is the trigger price used by stop/take orders
            order_hash:
              type: string
              format: byte
          description: A valid Derivative limit order with Metadata.
    title: Derivative Exchange Limit Orderbook
  injective.exchange.v1beta1.DerivativePosition:
    type: object
    properties:
      subaccount_id:
        type: string
      market_id:
        type: string
      position:
        type: object
        properties:
          isLong:
            type: boolean
          quantity:
            type: string
          entry_price:
            type: string
          margin:
            type: string
          cumulative_funding_entry:
            type: string
  injective.exchange.v1beta1.EffectivePosition:
    type: object
    properties:
      is_long:
        type: boolean
      quantity:
        type: string
      entry_price:
        type: string
      effective_margin:
        type: string
  injective.exchange.v1beta1.ExpiryFuturesMarketInfo:
    type: object
    properties:
      market_id:
        type: string
        description: market ID.
      expiration_timestamp:
        type: string
        format: int64
        description: >-
          expiration_timestamp defines the expiration time for a time expiry
          futures

          market.
      twap_start_timestamp:
        type: string
        format: int64
        title: |-
          expiration_twap_start_timestamp defines the start time of the TWAP
          calculation window
      expiration_twap_start_price_cumulative:
        type: string
        title: >-
          expiration_twap_start_price_cumulative defines the cumulative price
          for the

          start of the TWAP window
      settlement_price:
        type: string
        description: >-
          settlement_price defines the settlement price for a time expiry
          futures

          market.
  injective.exchange.v1beta1.ExpiryFuturesMarketInfoState:
    type: object
    properties:
      market_id:
        type: string
      market_info:
        type: object
        properties:
          market_id:
            type: string
            description: market ID.
          expiration_timestamp:
            type: string
            format: int64
            description: >-
              expiration_timestamp defines the expiration time for a time expiry
              futures

              market.
          twap_start_timestamp:
            type: string
            format: int64
            title: |-
              expiration_twap_start_timestamp defines the start time of the TWAP
              calculation window
          expiration_twap_start_price_cumulative:
            type: string
            title: >-
              expiration_twap_start_price_cumulative defines the cumulative
              price for the

              start of the TWAP window
          settlement_price:
            type: string
            description: >-
              settlement_price defines the settlement price for a time expiry
              futures

              market.
  injective.exchange.v1beta1.FeeDiscountAccountTierTTL:
    type: object
    properties:
      account:
        type: string
      tier_ttl:
        type: object
        properties:
          tier:
            type: string
            format: uint64
          ttl_timestamp:
            type: string
            format: int64
  injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts:
    type: object
    properties:
      bucket_start_timestamp:
        type: string
        format: int64
      account_volume:
        type: array
        items:
          type: object
          properties:
            account:
              type: string
            volume:
              type: string
  injective.exchange.v1beta1.FeeDiscountSchedule:
    type: object
    properties:
      bucket_count:
        type: string
        format: uint64
      bucket_duration:
        type: string
        format: int64
      quote_denoms:
        type: array
        items:
          type: string
        title: |-
          the trading fee quote denoms which will be counted for the fee paid
          contribution
      tier_infos:
        type: array
        items:
          type: object
          properties:
            maker_discount_rate:
              type: string
            taker_discount_rate:
              type: string
            staked_amount:
              type: string
            volume:
              type: string
        title: the fee discount tiers
      disqualified_market_ids:
        type: array
        items:
          type: string
        title: |-
          the marketIDs which are disqualified from contributing to the fee paid
          amount
  injective.exchange.v1beta1.FeeDiscountTierInfo:
    type: object
    properties:
      maker_discount_rate:
        type: string
      taker_discount_rate:
        type: string
      staked_amount:
        type: string
      volume:
        type: string
  injective.exchange.v1beta1.FeeDiscountTierTTL:
    type: object
    properties:
      tier:
        type: string
        format: uint64
      ttl_timestamp:
        type: string
        format: int64
  injective.exchange.v1beta1.FullDerivativeMarket:
    type: object
    properties:
      market:
        type: object
        properties:
          ticker:
            type: string
            description: Ticker for the derivative contract.
          oracle_base:
            type: string
            title: Oracle base currency
          oracle_quote:
            type: string
            title: Oracle quote currency
          oracle_type:
            title: Oracle type
            type: string
            enum:
              - Unspecified
              - Band
              - PriceFeed
              - Coinbase
              - Chainlink
              - Razor
              - Dia
              - API3
              - Uma
              - Pyth
              - BandIBC
              - Provider
            default: Unspecified
          oracle_scale_factor:
            type: integer
            format: int64
            description: Scale factor for oracle prices.
          quote_denom:
            type: string
            title: >-
              Address of the quote currency denomination for the derivative
              contract
          market_id:
            type: string
            description: Unique market ID.
          initial_margin_ratio:
            type: string
            title: >-
              initial_margin_ratio defines the initial margin ratio of a
              derivative

              market
          maintenance_margin_ratio:
            type: string
            title: |-
              maintenance_margin_ratio defines the maintenance margin ratio of a
              derivative market
          maker_fee_rate:
            type: string
            title: maker_fee_rate defines the maker fee rate of a derivative market
          taker_fee_rate:
            type: string
            title: taker_fee_rate defines the taker fee rate of a derivative market
          relayer_fee_share_rate:
            type: string
            title: >-
              relayer_fee_share_rate defines the percentage of the transaction
              fee shared

              with the relayer in a derivative market
          isPerpetual:
            type: boolean
            title: >-
              true if the market is a perpetual market. false if the market is
              an expiry

              futures market
          status:
            title: Status of the market
            type: string
            enum:
              - Unspecified
              - Active
              - Paused
              - Demolished
              - Expired
            default: Unspecified
          min_price_tick_size:
            type: string
            title: >-
              min_price_tick_size defines the minimum tick size that the price
              and margin

              required for orders in the market
          min_quantity_tick_size:
            type: string
            title: >-
              min_quantity_tick_size defines the minimum tick size of the
              quantity

              required for orders in the market
        description: >-
          An object describing a derivative market in the Injective Futures
          Protocol.
      perpetual_info:
        type: object
        properties:
          market_info:
            type: object
            properties:
              market_id:
                type: string
                description: market ID.
              hourly_funding_rate_cap:
                type: string
                title: >-
                  hourly_funding_rate_cap defines the maximum absolute value of
                  the hourly

                  funding rate
              hourly_interest_rate:
                type: string
                title: hourly_interest_rate defines the hourly interest rate
              next_funding_timestamp:
                type: string
                format: int64
                title: >-
                  next_funding_timestamp defines the next funding timestamp in
                  seconds of a

                  perpetual market
              funding_interval:
                type: string
                format: int64
                description: >-
                  funding_interval defines the next funding interval in seconds
                  of a

                  perpetual market.
          funding_info:
            type: object
            properties:
              cumulative_funding:
                type: string
                description: >-
                  cumulative_funding defines the cumulative funding of a
                  perpetual market.
              cumulative_price:
                type: string
                title: >-
                  cumulative_price defines the cumulative price for the current
                  hour up to

                  the last timestamp
              last_timestamp:
                type: string
                format: int64
      futures_info:
        type: object
        properties:
          market_id:
            type: string
            description: market ID.
          expiration_timestamp:
            type: string
            format: int64
            description: >-
              expiration_timestamp defines the expiration time for a time expiry
              futures

              market.
          twap_start_timestamp:
            type: string
            format: int64
            title: |-
              expiration_twap_start_timestamp defines the start time of the TWAP
              calculation window
          expiration_twap_start_price_cumulative:
            type: string
            title: >-
              expiration_twap_start_price_cumulative defines the cumulative
              price for the

              start of the TWAP window
          settlement_price:
            type: string
            description: >-
              settlement_price defines the settlement price for a time expiry
              futures

              market.
      mark_price:
        type: string
      mid_price_and_tob:
        title: >-
          mid_price_and_tob defines the mid price for this market and the best
          ask

          and bid orders
        type: object
        properties:
          mid_price:
            type: string
            title: mid price of the market
          best_buy_price:
            type: string
            title: best buy price of the market
          best_sell_price:
            type: string
            title: best sell price of the market
  injective.exchange.v1beta1.FullSpotMarket:
    type: object
    properties:
      market:
        type: object
        properties:
          ticker:
            type: string
            description: >-
              A name of the pair in format AAA/BBB, where AAA is base asset, BBB
              is quote

              asset.
          base_denom:
            type: string
            title: Coin denom used for the base asset
          quote_denom:
            type: string
            title: Coin used for the quote asset
          maker_fee_rate:
            type: string
            title: maker_fee_rate defines the fee percentage makers pay when trading
          taker_fee_rate:
            type: string
            title: taker_fee_rate defines the fee percentage takers pay when trading
          relayer_fee_share_rate:
            type: string
            title: >-
              relayer_fee_share_rate defines the percentage of the transaction
              fee shared

              with the relayer in a derivative market
          market_id:
            type: string
            description: Unique market ID.
          status:
            title: Status of the market
            type: string
            enum:
              - Unspecified
              - Active
              - Paused
              - Demolished
              - Expired
            default: Unspecified
          min_price_tick_size:
            type: string
            title: >-
              min_price_tick_size defines the minimum tick size that the price
              required

              for orders in the market
          min_quantity_tick_size:
            type: string
            title: >-
              min_quantity_tick_size defines the minimum tick size of the
              quantity

              required for orders in the market
        description: An object describing trade pair of two assets.
      mid_price_and_tob:
        title: >-
          mid_price_and_tob defines the mid price for this market and the best
          ask

          and bid orders
        type: object
        properties:
          mid_price:
            type: string
            title: mid price of the market
          best_buy_price:
            type: string
            title: best buy price of the market
          best_sell_price:
            type: string
            title: best sell price of the market
  injective.exchange.v1beta1.GenesisState:
    type: object
    properties:
      params:
        type: object
        properties:
          spot_market_instant_listing_fee:
            title: >-
              spot_market_instant_listing_fee defines the expedited fee in INJ
              required

              to create a spot market by bypassing governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          derivative_market_instant_listing_fee:
            title: >-
              derivative_market_instant_listing_fee defines the expedited fee in
              INJ

              required to create a derivative market by bypassing governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          default_spot_maker_fee_rate:
            type: string
            title: >-
              default_spot_maker_fee defines the default exchange trade fee for
              makers on

              a spot market
          default_spot_taker_fee_rate:
            type: string
            title: >-
              default_spot_taker_fee_rate defines the default exchange trade fee
              rate for

              takers on a new spot market
          default_derivative_maker_fee_rate:
            type: string
            title: >-
              default_derivative_maker_fee defines the default exchange trade
              fee for

              makers on a new derivative market
          default_derivative_taker_fee_rate:
            type: string
            title: >-
              default_derivative_taker_fee defines the default exchange trade
              fee for

              takers on a new derivative market
          default_initial_margin_ratio:
            type: string
            title: >-
              default_initial_margin_ratio defines the default initial margin
              ratio on a

              new derivative market
          default_maintenance_margin_ratio:
            type: string
            title: >-
              default_maintenance_margin_ratio defines the default maintenance
              margin

              ratio on a new derivative market
          default_funding_interval:
            type: string
            format: int64
            title: |-
              default_funding_interval defines the default funding interval on a
              derivative market
          funding_multiple:
            type: string
            format: int64
            title: >-
              funding_multiple defines the timestamp multiple that the funding
              timestamp

              should be a multiple of
          relayer_fee_share_rate:
            type: string
            title: >-
              relayer_fee_share_rate defines the trade fee share percentage that
              goes to

              relayers
          default_hourly_funding_rate_cap:
            type: string
            title: >-
              default_hourly_funding_rate_cap defines the default maximum
              absolute value

              of the hourly funding rate
          default_hourly_interest_rate:
            type: string
            title: hourly_interest_rate defines the hourly interest rate
          max_derivative_order_side_count:
            type: integer
            format: int64
            title: >-
              max_derivative_order_side_count defines the maximum number of
              derivative

              active orders a subaccount can have for a given orderbook side
          inj_reward_staked_requirement_threshold:
            type: string
            title: >-
              inj_reward_staked_requirement_threshold defines the threshold on
              INJ

              rewards after which one also needs staked INJ to receive more
          trading_rewards_vesting_duration:
            type: string
            format: int64
            title: >-
              the trading_rewards_vesting_duration defines the vesting times for
              trading

              rewards
          liquidator_reward_share_rate:
            type: string
            title: >-
              liquidator_reward_share_rate defines the ratio of the split of the
              surplus

              collateral that goes to the liquidator
          binary_options_market_instant_listing_fee:
            title: >-
              binary_options_market_instant_listing_fee defines the expedited
              fee in INJ

              required to create a derivative market by bypassing governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          atomic_market_order_access_level:
            title: >-
              atomic_market_order_access_level defines the required access
              permissions

              for executing atomic market orders
            type: string
            enum:
              - Nobody
              - BeginBlockerSmartContractsOnly
              - SmartContractsOnly
              - Everyone
            default: Nobody
          spot_atomic_market_order_fee_multiplier:
            type: string
            title: >-
              spot_atomic_market_order_fee_multiplier defines the default
              multiplier for

              executing atomic market orders in spot markets
          derivative_atomic_market_order_fee_multiplier:
            type: string
            title: >-
              derivative_atomic_market_order_fee_multiplier defines the default

              multiplier for executing atomic market orders in derivative
              markets
          binary_options_atomic_market_order_fee_multiplier:
            type: string
            title: >-
              binary_options_atomic_market_order_fee_multiplier defines the
              default

              multiplier for executing atomic market orders in binary markets
          minimal_protocol_fee_rate:
            type: string
            title: minimal_protocol_fee_rate defines the minimal protocol fee rate
          is_instant_derivative_market_launch_enabled:
            type: boolean
            title: >-
              is_instant_derivative_market_launch_enabled defines whether
              instant

              derivative market launch is enabled
          post_only_mode_height_threshold:
            type: string
            format: int64
        description: params defines all the parameters of related to exchange.
      spot_markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: >-
                A name of the pair in format AAA/BBB, where AAA is base asset,
                BBB is quote

                asset.
            base_denom:
              type: string
              title: Coin denom used for the base asset
            quote_denom:
              type: string
              title: Coin used for the quote asset
            maker_fee_rate:
              type: string
              title: >-
                maker_fee_rate defines the fee percentage makers pay when
                trading
            taker_fee_rate:
              type: string
              title: >-
                taker_fee_rate defines the fee percentage takers pay when
                trading
            relayer_fee_share_rate:
              type: string
              title: >-
                relayer_fee_share_rate defines the percentage of the transaction
                fee shared

                with the relayer in a derivative market
            market_id:
              type: string
              description: Unique market ID.
            status:
              title: Status of the market
              type: string
              enum:
                - Unspecified
                - Active
                - Paused
                - Demolished
                - Expired
              default: Unspecified
            min_price_tick_size:
              type: string
              title: >-
                min_price_tick_size defines the minimum tick size that the price
                required

                for orders in the market
            min_quantity_tick_size:
              type: string
              title: >-
                min_quantity_tick_size defines the minimum tick size of the
                quantity

                required for orders in the market
          description: An object describing trade pair of two assets.
        title: spot_markets is an array containing the genesis trade pairs
      derivative_markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: Ticker for the derivative contract.
            oracle_base:
              type: string
              title: Oracle base currency
            oracle_quote:
              type: string
              title: Oracle quote currency
            oracle_type:
              title: Oracle type
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            oracle_scale_factor:
              type: integer
              format: int64
              description: Scale factor for oracle prices.
            quote_denom:
              type: string
              title: >-
                Address of the quote currency denomination for the derivative
                contract
            market_id:
              type: string
              description: Unique market ID.
            initial_margin_ratio:
              type: string
              title: >-
                initial_margin_ratio defines the initial margin ratio of a
                derivative

                market
            maintenance_margin_ratio:
              type: string
              title: >-
                maintenance_margin_ratio defines the maintenance margin ratio of
                a

                derivative market
            maker_fee_rate:
              type: string
              title: maker_fee_rate defines the maker fee rate of a derivative market
            taker_fee_rate:
              type: string
              title: taker_fee_rate defines the taker fee rate of a derivative market
            relayer_fee_share_rate:
              type: string
              title: >-
                relayer_fee_share_rate defines the percentage of the transaction
                fee shared

                with the relayer in a derivative market
            isPerpetual:
              type: boolean
              title: >-
                true if the market is a perpetual market. false if the market is
                an expiry

                futures market
            status:
              title: Status of the market
              type: string
              enum:
                - Unspecified
                - Active
                - Paused
                - Demolished
                - Expired
              default: Unspecified
            min_price_tick_size:
              type: string
              title: >-
                min_price_tick_size defines the minimum tick size that the price
                and margin

                required for orders in the market
            min_quantity_tick_size:
              type: string
              title: >-
                min_quantity_tick_size defines the minimum tick size of the
                quantity

                required for orders in the market
          description: >-
            An object describing a derivative market in the Injective Futures
            Protocol.
        title: >-
          derivative_markets is an array containing the genesis derivative
          markets
      spot_orderbook:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            isBuySide:
              type: boolean
            orders:
              type: array
              items:
                type: object
                properties:
                  order_info:
                    title: order_info contains the information of the order
                    type: object
                    properties:
                      subaccount_id:
                        type: string
                        title: bytes32 subaccount ID that created the order
                      fee_recipient:
                        type: string
                        title: >-
                          address fee_recipient address that will receive fees
                          for the order
                      price:
                        type: string
                        title: price of the order
                      quantity:
                        type: string
                        title: quantity of the order
                      cid:
                        type: string
                  order_type:
                    title: order types
                    type: string
                    enum:
                      - UNSPECIFIED
                      - BUY
                      - SELL
                      - STOP_BUY
                      - STOP_SELL
                      - TAKE_BUY
                      - TAKE_SELL
                      - BUY_PO
                      - SELL_PO
                      - BUY_ATOMIC
                      - SELL_ATOMIC
                    default: UNSPECIFIED
                  fillable:
                    type: string
                    title: the amount of the quantity remaining fillable
                  trigger_price:
                    type: string
                    title: >-
                      trigger_price is the trigger price used by stop/take
                      orders
                  order_hash:
                    type: string
                    format: byte
                description: A valid Spot limit order with Metadata.
          title: Spot Exchange Limit Orderbook
        description: >-
          spot_orderbook defines the spot exchange limit orderbook active at
          genesis.
      derivative_orderbook:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            isBuySide:
              type: boolean
            orders:
              type: array
              items:
                type: object
                properties:
                  order_info:
                    title: order_info contains the information of the order
                    type: object
                    properties:
                      subaccount_id:
                        type: string
                        title: bytes32 subaccount ID that created the order
                      fee_recipient:
                        type: string
                        title: >-
                          address fee_recipient address that will receive fees
                          for the order
                      price:
                        type: string
                        title: price of the order
                      quantity:
                        type: string
                        title: quantity of the order
                      cid:
                        type: string
                  order_type:
                    title: order types
                    type: string
                    enum:
                      - UNSPECIFIED
                      - BUY
                      - SELL
                      - STOP_BUY
                      - STOP_SELL
                      - TAKE_BUY
                      - TAKE_SELL
                      - BUY_PO
                      - SELL_PO
                      - BUY_ATOMIC
                      - SELL_ATOMIC
                    default: UNSPECIFIED
                  margin:
                    type: string
                    title: margin is the margin used by the limit order
                  fillable:
                    type: string
                    title: the amount of the quantity remaining fillable
                  trigger_price:
                    type: string
                    title: >-
                      trigger_price is the trigger price used by stop/take
                      orders
                  order_hash:
                    type: string
                    format: byte
                description: A valid Derivative limit order with Metadata.
          title: Derivative Exchange Limit Orderbook
        description: >-
          derivative_orderbook defines the derivative exchange limit orderbook
          active

          at genesis.
      balances:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            denom:
              type: string
            deposits:
              type: object
              properties:
                available_balance:
                  type: string
                total_balance:
                  type: string
              title: A subaccount's deposit for a given base currency
        description: balances defines the exchange users balances active at genesis.
      positions:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            market_id:
              type: string
            position:
              type: object
              properties:
                isLong:
                  type: boolean
                quantity:
                  type: string
                entry_price:
                  type: string
                margin:
                  type: string
                cumulative_funding_entry:
                  type: string
        title: positions defines the exchange derivative positions at genesis
      subaccount_trade_nonces:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            subaccount_trade_nonce:
              type: object
              properties:
                nonce:
                  type: integer
                  format: int64
        title: |-
          subaccount_trade_nonces defines the subaccount trade nonces for the
          subaccounts at genesis
      expiry_futures_market_info_state:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            market_info:
              type: object
              properties:
                market_id:
                  type: string
                  description: market ID.
                expiration_timestamp:
                  type: string
                  format: int64
                  description: >-
                    expiration_timestamp defines the expiration time for a time
                    expiry futures

                    market.
                twap_start_timestamp:
                  type: string
                  format: int64
                  title: >-
                    expiration_twap_start_timestamp defines the start time of
                    the TWAP

                    calculation window
                expiration_twap_start_price_cumulative:
                  type: string
                  title: >-
                    expiration_twap_start_price_cumulative defines the
                    cumulative price for the

                    start of the TWAP window
                settlement_price:
                  type: string
                  description: >-
                    settlement_price defines the settlement price for a time
                    expiry futures

                    market.
        title: >-
          expiry_futures_market_info defines the market info for the expiry
          futures

          markets at genesis
      perpetual_market_info:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
              description: market ID.
            hourly_funding_rate_cap:
              type: string
              title: >-
                hourly_funding_rate_cap defines the maximum absolute value of
                the hourly

                funding rate
            hourly_interest_rate:
              type: string
              title: hourly_interest_rate defines the hourly interest rate
            next_funding_timestamp:
              type: string
              format: int64
              title: >-
                next_funding_timestamp defines the next funding timestamp in
                seconds of a

                perpetual market
            funding_interval:
              type: string
              format: int64
              description: >-
                funding_interval defines the next funding interval in seconds of
                a

                perpetual market.
        title: >-
          perpetual_market_info defines the market info for the perpetual
          derivative

          markets at genesis
      perpetual_market_funding_state:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            funding:
              type: object
              properties:
                cumulative_funding:
                  type: string
                  description: >-
                    cumulative_funding defines the cumulative funding of a
                    perpetual market.
                cumulative_price:
                  type: string
                  title: >-
                    cumulative_price defines the cumulative price for the
                    current hour up to

                    the last timestamp
                last_timestamp:
                  type: string
                  format: int64
        title: >-
          perpetual_market_funding_state defines the funding state for the
          perpetual

          derivative markets at genesis
      derivative_market_settlement_scheduled:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
              description: market ID.
            settlement_price:
              type: string
              title: settlement_price defines the settlement price
        title: >-
          derivative_market_settlement_scheduled defines the scheduled markets
          for

          settlement at genesis
      is_spot_exchange_enabled:
        type: boolean
        title: sets spot markets as enabled
      is_derivatives_exchange_enabled:
        type: boolean
        title: sets derivative markets as enabled
      trading_reward_campaign_info:
        title: the current trading reward campaign info
        type: object
        properties:
          campaign_duration_seconds:
            type: string
            format: int64
            title: number of seconds of the duration of each campaign
          quote_denoms:
            type: array
            items:
              type: string
            title: the trading fee quote denoms which will be counted for the rewards
          trading_reward_boost_info:
            title: the optional boost info for markets
            type: object
            properties:
              boosted_spot_market_ids:
                type: array
                items:
                  type: string
              spot_market_multipliers:
                type: array
                items:
                  type: object
                  properties:
                    maker_points_multiplier:
                      type: string
                    taker_points_multiplier:
                      type: string
              boosted_derivative_market_ids:
                type: array
                items:
                  type: string
              derivative_market_multipliers:
                type: array
                items:
                  type: object
                  properties:
                    maker_points_multiplier:
                      type: string
                    taker_points_multiplier:
                      type: string
          disqualified_market_ids:
            type: array
            items:
              type: string
            title: the marketIDs which are disqualified from being rewarded
      trading_reward_pool_campaign_schedule:
        type: array
        items:
          type: object
          properties:
            start_timestamp:
              type: string
              format: int64
            max_campaign_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: >-
                max_campaign_rewards are the maximum reward amounts to be
                disbursed at the

                end of the campaign
        title: the current and upcoming trading reward campaign pools
      trading_reward_campaign_account_points:
        type: array
        items:
          type: object
          properties:
            account:
              type: string
            points:
              type: string
        title: the current trading reward account points
      fee_discount_schedule:
        type: object
        properties:
          bucket_count:
            type: string
            format: uint64
          bucket_duration:
            type: string
            format: int64
          quote_denoms:
            type: array
            items:
              type: string
            title: >-
              the trading fee quote denoms which will be counted for the fee
              paid

              contribution
          tier_infos:
            type: array
            items:
              type: object
              properties:
                maker_discount_rate:
                  type: string
                taker_discount_rate:
                  type: string
                staked_amount:
                  type: string
                volume:
                  type: string
            title: the fee discount tiers
          disqualified_market_ids:
            type: array
            items:
              type: string
            title: >-
              the marketIDs which are disqualified from contributing to the fee
              paid

              amount
        title: the fee discount schedule
      fee_discount_account_tier_ttl:
        type: array
        items:
          type: object
          properties:
            account:
              type: string
            tier_ttl:
              type: object
              properties:
                tier:
                  type: string
                  format: uint64
                ttl_timestamp:
                  type: string
                  format: int64
        title: the cached fee discount account tiers with TTL
      fee_discount_bucket_volume_accounts:
        type: array
        items:
          type: object
          properties:
            bucket_start_timestamp:
              type: string
              format: int64
            account_volume:
              type: array
              items:
                type: object
                properties:
                  account:
                    type: string
                  volume:
                    type: string
        title: the fee discount paid by accounts in all buckets
      is_first_fee_cycle_finished:
        type: boolean
        title: sets the first fee cycle as finished
      pending_trading_reward_pool_campaign_schedule:
        type: array
        items:
          type: object
          properties:
            start_timestamp:
              type: string
              format: int64
            max_campaign_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: >-
                max_campaign_rewards are the maximum reward amounts to be
                disbursed at the

                end of the campaign
        title: the current and upcoming trading reward campaign pending pools
      pending_trading_reward_campaign_account_points:
        type: array
        items:
          type: object
          properties:
            reward_pool_start_timestamp:
              type: string
              format: int64
            account_points:
              type: array
              items:
                type: object
                properties:
                  account:
                    type: string
                  points:
                    type: string
        title: the pending trading reward account points
      rewards_opt_out_addresses:
        type: array
        items:
          type: string
        title: the addresses opting out of trading rewards
      historical_trade_records:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            latest_trade_records:
              type: array
              items:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: int64
                  price:
                    type: string
                  quantity:
                    type: string
      binary_options_markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: Ticker for the derivative contract.
            oracle_symbol:
              type: string
              title: Oracle symbol
            oracle_provider:
              type: string
              title: Oracle Provider
            oracle_type:
              title: Oracle type
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            oracle_scale_factor:
              type: integer
              format: int64
              description: Scale factor for oracle prices.
            expiration_timestamp:
              type: string
              format: int64
              title: expiration timestamp
            settlement_timestamp:
              type: string
              format: int64
              title: expiration timestamp
            admin:
              type: string
              title: admin of the market
            quote_denom:
              type: string
              title: >-
                Address of the quote currency denomination for the binary
                options contract
            market_id:
              type: string
              description: Unique market ID.
            maker_fee_rate:
              type: string
              title: >-
                maker_fee_rate defines the maker fee rate of a binary options
                market
            taker_fee_rate:
              type: string
              title: taker_fee_rate defines the taker fee rate of a derivative market
            relayer_fee_share_rate:
              type: string
              title: >-
                relayer_fee_share_rate defines the percentage of the transaction
                fee shared

                with the relayer in a derivative market
            status:
              title: Status of the market
              type: string
              enum:
                - Unspecified
                - Active
                - Paused
                - Demolished
                - Expired
              default: Unspecified
            min_price_tick_size:
              type: string
              title: >-
                min_price_tick_size defines the minimum tick size that the price
                and margin

                required for orders in the market
            min_quantity_tick_size:
              type: string
              title: >-
                min_quantity_tick_size defines the minimum tick size of the
                quantity

                required for orders in the market
            settlement_price:
              type: string
          description: An object describing a binary options market in Injective Protocol.
        title: >-
          binary_options_markets is an array containing the genesis binary
          options

          markets
      binary_options_market_ids_scheduled_for_settlement:
        type: array
        items:
          type: string
        title: >-
          binary_options_markets_scheduled_for_settlement contains the marketIDs
          of

          binary options markets scheduled for next-block settlement
      spot_market_ids_scheduled_to_force_close:
        type: array
        items:
          type: string
        title: >-
          spot_market_ids_scheduled_to_force_close defines the scheduled markets
          for

          forced closings at genesis
      denom_decimals:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            decimals:
              type: string
              format: uint64
        description: denom_decimals defines the denom decimals for the exchange.
      conditional_derivative_orderbooks:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            limit_buy_orders:
              type: array
              items:
                type: object
                properties:
                  order_info:
                    title: order_info contains the information of the order
                    type: object
                    properties:
                      subaccount_id:
                        type: string
                        title: bytes32 subaccount ID that created the order
                      fee_recipient:
                        type: string
                        title: >-
                          address fee_recipient address that will receive fees
                          for the order
                      price:
                        type: string
                        title: price of the order
                      quantity:
                        type: string
                        title: quantity of the order
                      cid:
                        type: string
                  order_type:
                    title: order types
                    type: string
                    enum:
                      - UNSPECIFIED
                      - BUY
                      - SELL
                      - STOP_BUY
                      - STOP_SELL
                      - TAKE_BUY
                      - TAKE_SELL
                      - BUY_PO
                      - SELL_PO
                      - BUY_ATOMIC
                      - SELL_ATOMIC
                    default: UNSPECIFIED
                  margin:
                    type: string
                    title: margin is the margin used by the limit order
                  fillable:
                    type: string
                    title: the amount of the quantity remaining fillable
                  trigger_price:
                    type: string
                    title: >-
                      trigger_price is the trigger price used by stop/take
                      orders
                  order_hash:
                    type: string
                    format: byte
                description: A valid Derivative limit order with Metadata.
            market_buy_orders:
              type: array
              items:
                type: object
                properties:
                  order_info:
                    title: order_info contains the information of the order
                    type: object
                    properties:
                      subaccount_id:
                        type: string
                        title: bytes32 subaccount ID that created the order
                      fee_recipient:
                        type: string
                        title: >-
                          address fee_recipient address that will receive fees
                          for the order
                      price:
                        type: string
                        title: price of the order
                      quantity:
                        type: string
                        title: quantity of the order
                      cid:
                        type: string
                  order_type:
                    title: order types
                    type: string
                    enum:
                      - UNSPECIFIED
                      - BUY
                      - SELL
                      - STOP_BUY
                      - STOP_SELL
                      - TAKE_BUY
                      - TAKE_SELL
                      - BUY_PO
                      - SELL_PO
                      - BUY_ATOMIC
                      - SELL_ATOMIC
                    default: UNSPECIFIED
                  margin:
                    type: string
                  margin_hold:
                    type: string
                  trigger_price:
                    type: string
                    title: >-
                      trigger_price is the trigger price used by stop/take
                      orders
                  order_hash:
                    type: string
                    format: byte
                description: A valid Derivative market order with Metadata.
            limit_sell_orders:
              type: array
              items:
                type: object
                properties:
                  order_info:
                    title: order_info contains the information of the order
                    type: object
                    properties:
                      subaccount_id:
                        type: string
                        title: bytes32 subaccount ID that created the order
                      fee_recipient:
                        type: string
                        title: >-
                          address fee_recipient address that will receive fees
                          for the order
                      price:
                        type: string
                        title: price of the order
                      quantity:
                        type: string
                        title: quantity of the order
                      cid:
                        type: string
                  order_type:
                    title: order types
                    type: string
                    enum:
                      - UNSPECIFIED
                      - BUY
                      - SELL
                      - STOP_BUY
                      - STOP_SELL
                      - TAKE_BUY
                      - TAKE_SELL
                      - BUY_PO
                      - SELL_PO
                      - BUY_ATOMIC
                      - SELL_ATOMIC
                    default: UNSPECIFIED
                  margin:
                    type: string
                    title: margin is the margin used by the limit order
                  fillable:
                    type: string
                    title: the amount of the quantity remaining fillable
                  trigger_price:
                    type: string
                    title: >-
                      trigger_price is the trigger price used by stop/take
                      orders
                  order_hash:
                    type: string
                    format: byte
                description: A valid Derivative limit order with Metadata.
            market_sell_orders:
              type: array
              items:
                type: object
                properties:
                  order_info:
                    title: order_info contains the information of the order
                    type: object
                    properties:
                      subaccount_id:
                        type: string
                        title: bytes32 subaccount ID that created the order
                      fee_recipient:
                        type: string
                        title: >-
                          address fee_recipient address that will receive fees
                          for the order
                      price:
                        type: string
                        title: price of the order
                      quantity:
                        type: string
                        title: quantity of the order
                      cid:
                        type: string
                  order_type:
                    title: order types
                    type: string
                    enum:
                      - UNSPECIFIED
                      - BUY
                      - SELL
                      - STOP_BUY
                      - STOP_SELL
                      - TAKE_BUY
                      - TAKE_SELL
                      - BUY_PO
                      - SELL_PO
                      - BUY_ATOMIC
                      - SELL_ATOMIC
                    default: UNSPECIFIED
                  margin:
                    type: string
                  margin_hold:
                    type: string
                  trigger_price:
                    type: string
                    title: >-
                      trigger_price is the trigger price used by stop/take
                      orders
                  order_hash:
                    type: string
                    format: byte
                description: A valid Derivative market order with Metadata.
          title: Orderbook containing limit & market conditional orders
        title: >-
          conditional_derivative_orderbook contains conditional orderbooks for
          all

          markets (both lmit and market conditional orders)
      market_fee_multipliers:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            fee_multiplier:
              type: string
        title: |-
          market_fee_multipliers contains any non-default atomic order fee
          multipliers
      orderbook_sequences:
        type: array
        items:
          type: object
          properties:
            sequence:
              type: string
              format: uint64
            market_id:
              type: string
      subaccount_volumes:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            market_volumes:
              type: array
              items:
                type: object
                properties:
                  market_id:
                    type: string
                  volume:
                    type: object
                    properties:
                      maker_volume:
                        type: string
                      taker_volume:
                        type: string
      market_volumes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            volume:
              type: object
              properties:
                maker_volume:
                  type: string
                taker_volume:
                  type: string
    description: GenesisState defines the exchange module's genesis state.
  injective.exchange.v1beta1.Level:
    type: object
    properties:
      p:
        type: string
        title: price
      q:
        type: string
        title: quantity
  injective.exchange.v1beta1.MarketFeeMultiplier:
    type: object
    properties:
      market_id:
        type: string
      fee_multiplier:
        type: string
  injective.exchange.v1beta1.MarketStatus:
    type: string
    enum:
      - Unspecified
      - Active
      - Paused
      - Demolished
      - Expired
    default: Unspecified
  injective.exchange.v1beta1.MarketVolume:
    type: object
    properties:
      market_id:
        type: string
      volume:
        type: object
        properties:
          maker_volume:
            type: string
          taker_volume:
            type: string
  injective.exchange.v1beta1.MidPriceAndTOB:
    type: object
    properties:
      mid_price:
        type: string
        title: mid price of the market
      best_buy_price:
        type: string
        title: best buy price of the market
      best_sell_price:
        type: string
        title: best sell price of the market
  injective.exchange.v1beta1.MitoVaultInfosResponse:
    type: object
    properties:
      master_addresses:
        type: array
        items:
          type: string
      derivative_addresses:
        type: array
        items:
          type: string
      spot_addresses:
        type: array
        items:
          type: string
      cw20_addresses:
        type: array
        items:
          type: string
    description: >-
      MitoVaultInfosResponse is the response type for the Query/MitoVaultInfos
      RPC

      method.
  injective.exchange.v1beta1.OrderInfo:
    type: object
    properties:
      subaccount_id:
        type: string
        title: bytes32 subaccount ID that created the order
      fee_recipient:
        type: string
        title: address fee_recipient address that will receive fees for the order
      price:
        type: string
        title: price of the order
      quantity:
        type: string
        title: quantity of the order
      cid:
        type: string
  injective.exchange.v1beta1.OrderSide:
    type: string
    enum:
      - Side_Unspecified
      - Buy
      - Sell
    default: Side_Unspecified
    title: '- Side_Unspecified: will return both'
  injective.exchange.v1beta1.OrderType:
    type: string
    enum:
      - UNSPECIFIED
      - BUY
      - SELL
      - STOP_BUY
      - STOP_SELL
      - TAKE_BUY
      - TAKE_SELL
      - BUY_PO
      - SELL_PO
      - BUY_ATOMIC
      - SELL_ATOMIC
    default: UNSPECIFIED
  injective.exchange.v1beta1.OrderbookSequence:
    type: object
    properties:
      sequence:
        type: string
        format: uint64
      market_id:
        type: string
  injective.exchange.v1beta1.Params:
    type: object
    properties:
      spot_market_instant_listing_fee:
        title: >-
          spot_market_instant_listing_fee defines the expedited fee in INJ
          required

          to create a spot market by bypassing governance
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      derivative_market_instant_listing_fee:
        title: |-
          derivative_market_instant_listing_fee defines the expedited fee in INJ
          required to create a derivative market by bypassing governance
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      default_spot_maker_fee_rate:
        type: string
        title: >-
          default_spot_maker_fee defines the default exchange trade fee for
          makers on

          a spot market
      default_spot_taker_fee_rate:
        type: string
        title: >-
          default_spot_taker_fee_rate defines the default exchange trade fee
          rate for

          takers on a new spot market
      default_derivative_maker_fee_rate:
        type: string
        title: >-
          default_derivative_maker_fee defines the default exchange trade fee
          for

          makers on a new derivative market
      default_derivative_taker_fee_rate:
        type: string
        title: >-
          default_derivative_taker_fee defines the default exchange trade fee
          for

          takers on a new derivative market
      default_initial_margin_ratio:
        type: string
        title: >-
          default_initial_margin_ratio defines the default initial margin ratio
          on a

          new derivative market
      default_maintenance_margin_ratio:
        type: string
        title: >-
          default_maintenance_margin_ratio defines the default maintenance
          margin

          ratio on a new derivative market
      default_funding_interval:
        type: string
        format: int64
        title: |-
          default_funding_interval defines the default funding interval on a
          derivative market
      funding_multiple:
        type: string
        format: int64
        title: >-
          funding_multiple defines the timestamp multiple that the funding
          timestamp

          should be a multiple of
      relayer_fee_share_rate:
        type: string
        title: >-
          relayer_fee_share_rate defines the trade fee share percentage that
          goes to

          relayers
      default_hourly_funding_rate_cap:
        type: string
        title: >-
          default_hourly_funding_rate_cap defines the default maximum absolute
          value

          of the hourly funding rate
      default_hourly_interest_rate:
        type: string
        title: hourly_interest_rate defines the hourly interest rate
      max_derivative_order_side_count:
        type: integer
        format: int64
        title: >-
          max_derivative_order_side_count defines the maximum number of
          derivative

          active orders a subaccount can have for a given orderbook side
      inj_reward_staked_requirement_threshold:
        type: string
        title: |-
          inj_reward_staked_requirement_threshold defines the threshold on INJ
          rewards after which one also needs staked INJ to receive more
      trading_rewards_vesting_duration:
        type: string
        format: int64
        title: >-
          the trading_rewards_vesting_duration defines the vesting times for
          trading

          rewards
      liquidator_reward_share_rate:
        type: string
        title: >-
          liquidator_reward_share_rate defines the ratio of the split of the
          surplus

          collateral that goes to the liquidator
      binary_options_market_instant_listing_fee:
        title: >-
          binary_options_market_instant_listing_fee defines the expedited fee in
          INJ

          required to create a derivative market by bypassing governance
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      atomic_market_order_access_level:
        title: >-
          atomic_market_order_access_level defines the required access
          permissions

          for executing atomic market orders
        type: string
        enum:
          - Nobody
          - BeginBlockerSmartContractsOnly
          - SmartContractsOnly
          - Everyone
        default: Nobody
      spot_atomic_market_order_fee_multiplier:
        type: string
        title: >-
          spot_atomic_market_order_fee_multiplier defines the default multiplier
          for

          executing atomic market orders in spot markets
      derivative_atomic_market_order_fee_multiplier:
        type: string
        title: |-
          derivative_atomic_market_order_fee_multiplier defines the default
          multiplier for executing atomic market orders in derivative markets
      binary_options_atomic_market_order_fee_multiplier:
        type: string
        title: |-
          binary_options_atomic_market_order_fee_multiplier defines the default
          multiplier for executing atomic market orders in binary markets
      minimal_protocol_fee_rate:
        type: string
        title: minimal_protocol_fee_rate defines the minimal protocol fee rate
      is_instant_derivative_market_launch_enabled:
        type: boolean
        title: |-
          is_instant_derivative_market_launch_enabled defines whether instant
          derivative market launch is enabled
      post_only_mode_height_threshold:
        type: string
        format: int64
  injective.exchange.v1beta1.PerpetualMarketFunding:
    type: object
    properties:
      cumulative_funding:
        type: string
        description: >-
          cumulative_funding defines the cumulative funding of a perpetual
          market.
      cumulative_price:
        type: string
        title: >-
          cumulative_price defines the cumulative price for the current hour up
          to

          the last timestamp
      last_timestamp:
        type: string
        format: int64
  injective.exchange.v1beta1.PerpetualMarketFundingState:
    type: object
    properties:
      market_id:
        type: string
      funding:
        type: object
        properties:
          cumulative_funding:
            type: string
            description: >-
              cumulative_funding defines the cumulative funding of a perpetual
              market.
          cumulative_price:
            type: string
            title: >-
              cumulative_price defines the cumulative price for the current hour
              up to

              the last timestamp
          last_timestamp:
            type: string
            format: int64
  injective.exchange.v1beta1.PerpetualMarketInfo:
    type: object
    properties:
      market_id:
        type: string
        description: market ID.
      hourly_funding_rate_cap:
        type: string
        title: >-
          hourly_funding_rate_cap defines the maximum absolute value of the
          hourly

          funding rate
      hourly_interest_rate:
        type: string
        title: hourly_interest_rate defines the hourly interest rate
      next_funding_timestamp:
        type: string
        format: int64
        title: >-
          next_funding_timestamp defines the next funding timestamp in seconds
          of a

          perpetual market
      funding_interval:
        type: string
        format: int64
        description: |-
          funding_interval defines the next funding interval in seconds of a
          perpetual market.
  injective.exchange.v1beta1.PerpetualMarketState:
    type: object
    properties:
      market_info:
        type: object
        properties:
          market_id:
            type: string
            description: market ID.
          hourly_funding_rate_cap:
            type: string
            title: >-
              hourly_funding_rate_cap defines the maximum absolute value of the
              hourly

              funding rate
          hourly_interest_rate:
            type: string
            title: hourly_interest_rate defines the hourly interest rate
          next_funding_timestamp:
            type: string
            format: int64
            title: >-
              next_funding_timestamp defines the next funding timestamp in
              seconds of a

              perpetual market
          funding_interval:
            type: string
            format: int64
            description: |-
              funding_interval defines the next funding interval in seconds of a
              perpetual market.
      funding_info:
        type: object
        properties:
          cumulative_funding:
            type: string
            description: >-
              cumulative_funding defines the cumulative funding of a perpetual
              market.
          cumulative_price:
            type: string
            title: >-
              cumulative_price defines the cumulative price for the current hour
              up to

              the last timestamp
          last_timestamp:
            type: string
            format: int64
  injective.exchange.v1beta1.PointsMultiplier:
    type: object
    properties:
      maker_points_multiplier:
        type: string
      taker_points_multiplier:
        type: string
  injective.exchange.v1beta1.Position:
    type: object
    properties:
      isLong:
        type: boolean
      quantity:
        type: string
      entry_price:
        type: string
      margin:
        type: string
      cumulative_funding_entry:
        type: string
  injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            margin:
              type: string
              title: margin of the order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            isBuy:
              type: boolean
              title: true if the order is a buy
            order_hash:
              type: string
    description: |-
      QueryAccountAddressDerivativeOrdersResponse is the response type for the
      Query/AccountAddressDerivativeOrders RPC method.
  injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            isBuy:
              type: boolean
              title: true if the order is a buy
            order_hash:
              type: string
    description: |-
      QueryAccountAddressSpotOrdersResponse is the response type for the
      Query/AccountAddressSpotOrders RPC method.
  injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse:
    type: object
    properties:
      volume:
        type: object
        properties:
          maker_volume:
            type: string
          taker_volume:
            type: string
    description: |-
      QueryAggregateMarketVolumeResponse is the response type for the
      Query/AggregateMarketVolume RPC method.
  injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse:
    type: object
    properties:
      volumes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            volume:
              type: object
              properties:
                maker_volume:
                  type: string
                taker_volume:
                  type: string
        title: the aggregate volumes for the entire market
    description: |-
      QueryAggregateMarketVolumesResponse is the response type for the
      Query/AggregateMarketVolumes RPC method.
  injective.exchange.v1beta1.QueryAggregateVolumeResponse:
    type: object
    properties:
      aggregate_volumes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            volume:
              type: object
              properties:
                maker_volume:
                  type: string
                taker_volume:
                  type: string
        title: >-
          if an address is specified, then the aggregate_volumes will aggregate
          the

          volumes across all subaccounts for the address
    description: |-
      QueryAggregateVolumeResponse is the response type for the
      Query/AggregateVolume RPC method.
  injective.exchange.v1beta1.QueryAggregateVolumesResponse:
    type: object
    properties:
      aggregate_account_volumes:
        type: array
        items:
          type: object
          properties:
            account:
              type: string
            market_volumes:
              type: array
              items:
                type: object
                properties:
                  market_id:
                    type: string
                  volume:
                    type: object
                    properties:
                      maker_volume:
                        type: string
                      taker_volume:
                        type: string
        title: the aggregate volume records for the accounts specified
      aggregate_market_volumes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            volume:
              type: object
              properties:
                maker_volume:
                  type: string
                taker_volume:
                  type: string
        title: the aggregate volumes for the markets specified
    description: |-
      QueryAggregateVolumesResponse is the response type for the
      Query/AggregateVolumes RPC method.
  injective.exchange.v1beta1.QueryBalanceMismatchesResponse:
    type: object
    properties:
      balance_mismatches:
        type: array
        items:
          type: object
          properties:
            subaccountId:
              type: string
            denom:
              type: string
            available:
              type: string
            total:
              type: string
            balance_hold:
              type: string
            expected_total:
              type: string
            difference:
              type: string
    description: |-
      QueryBalanceMismatchesResponse is the response type for the
      Query/QueryBalanceMismatches RPC method.
  injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse:
    type: object
    properties:
      balance_with_balance_holds:
        type: array
        items:
          type: object
          properties:
            subaccountId:
              type: string
            denom:
              type: string
            available:
              type: string
            total:
              type: string
            balance_hold:
              type: string
    description: |-
      QueryBalanceWithBalanceHoldsResponse is the response type for the
      Query/QueryBalanceWithBalanceHolds RPC method.
  injective.exchange.v1beta1.QueryBinaryMarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: Ticker for the derivative contract.
            oracle_symbol:
              type: string
              title: Oracle symbol
            oracle_provider:
              type: string
              title: Oracle Provider
            oracle_type:
              title: Oracle type
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            oracle_scale_factor:
              type: integer
              format: int64
              description: Scale factor for oracle prices.
            expiration_timestamp:
              type: string
              format: int64
              title: expiration timestamp
            settlement_timestamp:
              type: string
              format: int64
              title: expiration timestamp
            admin:
              type: string
              title: admin of the market
            quote_denom:
              type: string
              title: >-
                Address of the quote currency denomination for the binary
                options contract
            market_id:
              type: string
              description: Unique market ID.
            maker_fee_rate:
              type: string
              title: >-
                maker_fee_rate defines the maker fee rate of a binary options
                market
            taker_fee_rate:
              type: string
              title: taker_fee_rate defines the taker fee rate of a derivative market
            relayer_fee_share_rate:
              type: string
              title: >-
                relayer_fee_share_rate defines the percentage of the transaction
                fee shared

                with the relayer in a derivative market
            status:
              title: Status of the market
              type: string
              enum:
                - Unspecified
                - Active
                - Paused
                - Demolished
                - Expired
              default: Unspecified
            min_price_tick_size:
              type: string
              title: >-
                min_price_tick_size defines the minimum tick size that the price
                and margin

                required for orders in the market
            min_quantity_tick_size:
              type: string
              title: >-
                min_quantity_tick_size defines the minimum tick size of the
                quantity

                required for orders in the market
            settlement_price:
              type: string
          description: An object describing a binary options market in Injective Protocol.
    description: >-
      QueryBinaryMarketsResponse is the response type for the
      Query/BinaryMarkets

      RPC method.
  injective.exchange.v1beta1.QueryDenomDecimalResponse:
    type: object
    properties:
      decimal:
        type: string
        format: uint64
    description: >-
      QueryDenomDecimalResponse is the response type for the Query/DenomDecimal
      RPC

      method.
  injective.exchange.v1beta1.QueryDenomDecimalsResponse:
    type: object
    properties:
      denom_decimals:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            decimals:
              type: string
              format: uint64
    description: |-
      QueryDenomDecimalsRequest is the response type for the Query/DenomDecimals
      RPC method.
  injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse:
    type: object
    properties:
      address:
        type: string
        title: address for the market
      subaccount_id:
        type: string
        title: subaccountID for the market
    description: |-
      QueryDerivativeMarketAddressResponse is the response type for the
      Query/DerivativeMarketAddress RPC method.
  injective.exchange.v1beta1.QueryDerivativeMarketResponse:
    type: object
    properties:
      market:
        type: object
        properties:
          market:
            type: object
            properties:
              ticker:
                type: string
                description: Ticker for the derivative contract.
              oracle_base:
                type: string
                title: Oracle base currency
              oracle_quote:
                type: string
                title: Oracle quote currency
              oracle_type:
                title: Oracle type
                type: string
                enum:
                  - Unspecified
                  - Band
                  - PriceFeed
                  - Coinbase
                  - Chainlink
                  - Razor
                  - Dia
                  - API3
                  - Uma
                  - Pyth
                  - BandIBC
                  - Provider
                default: Unspecified
              oracle_scale_factor:
                type: integer
                format: int64
                description: Scale factor for oracle prices.
              quote_denom:
                type: string
                title: >-
                  Address of the quote currency denomination for the derivative
                  contract
              market_id:
                type: string
                description: Unique market ID.
              initial_margin_ratio:
                type: string
                title: >-
                  initial_margin_ratio defines the initial margin ratio of a
                  derivative

                  market
              maintenance_margin_ratio:
                type: string
                title: >-
                  maintenance_margin_ratio defines the maintenance margin ratio
                  of a

                  derivative market
              maker_fee_rate:
                type: string
                title: >-
                  maker_fee_rate defines the maker fee rate of a derivative
                  market
              taker_fee_rate:
                type: string
                title: >-
                  taker_fee_rate defines the taker fee rate of a derivative
                  market
              relayer_fee_share_rate:
                type: string
                title: >-
                  relayer_fee_share_rate defines the percentage of the
                  transaction fee shared

                  with the relayer in a derivative market
              isPerpetual:
                type: boolean
                title: >-
                  true if the market is a perpetual market. false if the market
                  is an expiry

                  futures market
              status:
                title: Status of the market
                type: string
                enum:
                  - Unspecified
                  - Active
                  - Paused
                  - Demolished
                  - Expired
                default: Unspecified
              min_price_tick_size:
                type: string
                title: >-
                  min_price_tick_size defines the minimum tick size that the
                  price and margin

                  required for orders in the market
              min_quantity_tick_size:
                type: string
                title: >-
                  min_quantity_tick_size defines the minimum tick size of the
                  quantity

                  required for orders in the market
            description: >-
              An object describing a derivative market in the Injective Futures
              Protocol.
          perpetual_info:
            type: object
            properties:
              market_info:
                type: object
                properties:
                  market_id:
                    type: string
                    description: market ID.
                  hourly_funding_rate_cap:
                    type: string
                    title: >-
                      hourly_funding_rate_cap defines the maximum absolute value
                      of the hourly

                      funding rate
                  hourly_interest_rate:
                    type: string
                    title: hourly_interest_rate defines the hourly interest rate
                  next_funding_timestamp:
                    type: string
                    format: int64
                    title: >-
                      next_funding_timestamp defines the next funding timestamp
                      in seconds of a

                      perpetual market
                  funding_interval:
                    type: string
                    format: int64
                    description: >-
                      funding_interval defines the next funding interval in
                      seconds of a

                      perpetual market.
              funding_info:
                type: object
                properties:
                  cumulative_funding:
                    type: string
                    description: >-
                      cumulative_funding defines the cumulative funding of a
                      perpetual market.
                  cumulative_price:
                    type: string
                    title: >-
                      cumulative_price defines the cumulative price for the
                      current hour up to

                      the last timestamp
                  last_timestamp:
                    type: string
                    format: int64
          futures_info:
            type: object
            properties:
              market_id:
                type: string
                description: market ID.
              expiration_timestamp:
                type: string
                format: int64
                description: >-
                  expiration_timestamp defines the expiration time for a time
                  expiry futures

                  market.
              twap_start_timestamp:
                type: string
                format: int64
                title: >-
                  expiration_twap_start_timestamp defines the start time of the
                  TWAP

                  calculation window
              expiration_twap_start_price_cumulative:
                type: string
                title: >-
                  expiration_twap_start_price_cumulative defines the cumulative
                  price for the

                  start of the TWAP window
              settlement_price:
                type: string
                description: >-
                  settlement_price defines the settlement price for a time
                  expiry futures

                  market.
          mark_price:
            type: string
          mid_price_and_tob:
            title: >-
              mid_price_and_tob defines the mid price for this market and the
              best ask

              and bid orders
            type: object
            properties:
              mid_price:
                type: string
                title: mid price of the market
              best_buy_price:
                type: string
                title: best buy price of the market
              best_sell_price:
                type: string
                title: best sell price of the market
    description: |-
      QueryDerivativeMarketResponse is the response type for the
      Query/DerivativeMarket RPC method.
  injective.exchange.v1beta1.QueryDerivativeMarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            market:
              type: object
              properties:
                ticker:
                  type: string
                  description: Ticker for the derivative contract.
                oracle_base:
                  type: string
                  title: Oracle base currency
                oracle_quote:
                  type: string
                  title: Oracle quote currency
                oracle_type:
                  title: Oracle type
                  type: string
                  enum:
                    - Unspecified
                    - Band
                    - PriceFeed
                    - Coinbase
                    - Chainlink
                    - Razor
                    - Dia
                    - API3
                    - Uma
                    - Pyth
                    - BandIBC
                    - Provider
                  default: Unspecified
                oracle_scale_factor:
                  type: integer
                  format: int64
                  description: Scale factor for oracle prices.
                quote_denom:
                  type: string
                  title: >-
                    Address of the quote currency denomination for the
                    derivative contract
                market_id:
                  type: string
                  description: Unique market ID.
                initial_margin_ratio:
                  type: string
                  title: >-
                    initial_margin_ratio defines the initial margin ratio of a
                    derivative

                    market
                maintenance_margin_ratio:
                  type: string
                  title: >-
                    maintenance_margin_ratio defines the maintenance margin
                    ratio of a

                    derivative market
                maker_fee_rate:
                  type: string
                  title: >-
                    maker_fee_rate defines the maker fee rate of a derivative
                    market
                taker_fee_rate:
                  type: string
                  title: >-
                    taker_fee_rate defines the taker fee rate of a derivative
                    market
                relayer_fee_share_rate:
                  type: string
                  title: >-
                    relayer_fee_share_rate defines the percentage of the
                    transaction fee shared

                    with the relayer in a derivative market
                isPerpetual:
                  type: boolean
                  title: >-
                    true if the market is a perpetual market. false if the
                    market is an expiry

                    futures market
                status:
                  title: Status of the market
                  type: string
                  enum:
                    - Unspecified
                    - Active
                    - Paused
                    - Demolished
                    - Expired
                  default: Unspecified
                min_price_tick_size:
                  type: string
                  title: >-
                    min_price_tick_size defines the minimum tick size that the
                    price and margin

                    required for orders in the market
                min_quantity_tick_size:
                  type: string
                  title: >-
                    min_quantity_tick_size defines the minimum tick size of the
                    quantity

                    required for orders in the market
              description: >-
                An object describing a derivative market in the Injective
                Futures Protocol.
            perpetual_info:
              type: object
              properties:
                market_info:
                  type: object
                  properties:
                    market_id:
                      type: string
                      description: market ID.
                    hourly_funding_rate_cap:
                      type: string
                      title: >-
                        hourly_funding_rate_cap defines the maximum absolute
                        value of the hourly

                        funding rate
                    hourly_interest_rate:
                      type: string
                      title: hourly_interest_rate defines the hourly interest rate
                    next_funding_timestamp:
                      type: string
                      format: int64
                      title: >-
                        next_funding_timestamp defines the next funding
                        timestamp in seconds of a

                        perpetual market
                    funding_interval:
                      type: string
                      format: int64
                      description: >-
                        funding_interval defines the next funding interval in
                        seconds of a

                        perpetual market.
                funding_info:
                  type: object
                  properties:
                    cumulative_funding:
                      type: string
                      description: >-
                        cumulative_funding defines the cumulative funding of a
                        perpetual market.
                    cumulative_price:
                      type: string
                      title: >-
                        cumulative_price defines the cumulative price for the
                        current hour up to

                        the last timestamp
                    last_timestamp:
                      type: string
                      format: int64
            futures_info:
              type: object
              properties:
                market_id:
                  type: string
                  description: market ID.
                expiration_timestamp:
                  type: string
                  format: int64
                  description: >-
                    expiration_timestamp defines the expiration time for a time
                    expiry futures

                    market.
                twap_start_timestamp:
                  type: string
                  format: int64
                  title: >-
                    expiration_twap_start_timestamp defines the start time of
                    the TWAP

                    calculation window
                expiration_twap_start_price_cumulative:
                  type: string
                  title: >-
                    expiration_twap_start_price_cumulative defines the
                    cumulative price for the

                    start of the TWAP window
                settlement_price:
                  type: string
                  description: >-
                    settlement_price defines the settlement price for a time
                    expiry futures

                    market.
            mark_price:
              type: string
            mid_price_and_tob:
              title: >-
                mid_price_and_tob defines the mid price for this market and the
                best ask

                and bid orders
              type: object
              properties:
                mid_price:
                  type: string
                  title: mid price of the market
                best_buy_price:
                  type: string
                  title: best buy price of the market
                best_sell_price:
                  type: string
                  title: best sell price of the market
    description: |-
      QueryDerivativeMarketsResponse is the response type for the
      Query/DerivativeMarkets RPC method.
  injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse:
    type: object
    properties:
      mid_price:
        type: string
        title: mid price of the market
      best_buy_price:
        type: string
        title: best buy price of the market
      best_sell_price:
        type: string
        title: best sell price of the market
    description: |-
      QueryDerivativeMidPriceAndTOBResponse is the response type for the
      Query/GetDerivativeMidPriceAndTOB RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrderbookResponse:
    type: object
    properties:
      buys_price_level:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: price
            q:
              type: string
              title: quantity
      sells_price_level:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: price
            q:
              type: string
              title: quantity
    description: |-
      QueryDerivativeOrderbookResponse is the response type for the
      Query/DerivativeOrderbook RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            margin:
              type: string
              title: margin of the order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            isBuy:
              type: boolean
              title: true if the order is a buy
            order_hash:
              type: string
    description: |-
      QueryDerivativeOrdersByHashesResponse is the response type for the
      Query/DerivativeOrdersByHashes RPC method.
  injective.exchange.v1beta1.QueryExchangeBalancesResponse:
    type: object
    properties:
      balances:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            denom:
              type: string
            deposits:
              type: object
              properties:
                available_balance:
                  type: string
                total_balance:
                  type: string
              title: A subaccount's deposit for a given base currency
    description: |-
      QuerySubaccountDepositsResponse is the response type for the
      Query/SubaccountDeposits RPC method.
  injective.exchange.v1beta1.QueryExchangeParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          spot_market_instant_listing_fee:
            title: >-
              spot_market_instant_listing_fee defines the expedited fee in INJ
              required

              to create a spot market by bypassing governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          derivative_market_instant_listing_fee:
            title: >-
              derivative_market_instant_listing_fee defines the expedited fee in
              INJ

              required to create a derivative market by bypassing governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          default_spot_maker_fee_rate:
            type: string
            title: >-
              default_spot_maker_fee defines the default exchange trade fee for
              makers on

              a spot market
          default_spot_taker_fee_rate:
            type: string
            title: >-
              default_spot_taker_fee_rate defines the default exchange trade fee
              rate for

              takers on a new spot market
          default_derivative_maker_fee_rate:
            type: string
            title: >-
              default_derivative_maker_fee defines the default exchange trade
              fee for

              makers on a new derivative market
          default_derivative_taker_fee_rate:
            type: string
            title: >-
              default_derivative_taker_fee defines the default exchange trade
              fee for

              takers on a new derivative market
          default_initial_margin_ratio:
            type: string
            title: >-
              default_initial_margin_ratio defines the default initial margin
              ratio on a

              new derivative market
          default_maintenance_margin_ratio:
            type: string
            title: >-
              default_maintenance_margin_ratio defines the default maintenance
              margin

              ratio on a new derivative market
          default_funding_interval:
            type: string
            format: int64
            title: |-
              default_funding_interval defines the default funding interval on a
              derivative market
          funding_multiple:
            type: string
            format: int64
            title: >-
              funding_multiple defines the timestamp multiple that the funding
              timestamp

              should be a multiple of
          relayer_fee_share_rate:
            type: string
            title: >-
              relayer_fee_share_rate defines the trade fee share percentage that
              goes to

              relayers
          default_hourly_funding_rate_cap:
            type: string
            title: >-
              default_hourly_funding_rate_cap defines the default maximum
              absolute value

              of the hourly funding rate
          default_hourly_interest_rate:
            type: string
            title: hourly_interest_rate defines the hourly interest rate
          max_derivative_order_side_count:
            type: integer
            format: int64
            title: >-
              max_derivative_order_side_count defines the maximum number of
              derivative

              active orders a subaccount can have for a given orderbook side
          inj_reward_staked_requirement_threshold:
            type: string
            title: >-
              inj_reward_staked_requirement_threshold defines the threshold on
              INJ

              rewards after which one also needs staked INJ to receive more
          trading_rewards_vesting_duration:
            type: string
            format: int64
            title: >-
              the trading_rewards_vesting_duration defines the vesting times for
              trading

              rewards
          liquidator_reward_share_rate:
            type: string
            title: >-
              liquidator_reward_share_rate defines the ratio of the split of the
              surplus

              collateral that goes to the liquidator
          binary_options_market_instant_listing_fee:
            title: >-
              binary_options_market_instant_listing_fee defines the expedited
              fee in INJ

              required to create a derivative market by bypassing governance
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          atomic_market_order_access_level:
            title: >-
              atomic_market_order_access_level defines the required access
              permissions

              for executing atomic market orders
            type: string
            enum:
              - Nobody
              - BeginBlockerSmartContractsOnly
              - SmartContractsOnly
              - Everyone
            default: Nobody
          spot_atomic_market_order_fee_multiplier:
            type: string
            title: >-
              spot_atomic_market_order_fee_multiplier defines the default
              multiplier for

              executing atomic market orders in spot markets
          derivative_atomic_market_order_fee_multiplier:
            type: string
            title: >-
              derivative_atomic_market_order_fee_multiplier defines the default

              multiplier for executing atomic market orders in derivative
              markets
          binary_options_atomic_market_order_fee_multiplier:
            type: string
            title: >-
              binary_options_atomic_market_order_fee_multiplier defines the
              default

              multiplier for executing atomic market orders in binary markets
          minimal_protocol_fee_rate:
            type: string
            title: minimal_protocol_fee_rate defines the minimal protocol fee rate
          is_instant_derivative_market_launch_enabled:
            type: boolean
            title: >-
              is_instant_derivative_market_launch_enabled defines whether
              instant

              derivative market launch is enabled
          post_only_mode_height_threshold:
            type: string
            format: int64
    description: >-
      QueryExchangeParamsRequest is the response type for the
      Query/ExchangeParams

      RPC method.
  injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse:
    type: object
    properties:
      info:
        type: object
        properties:
          market_id:
            type: string
            description: market ID.
          expiration_timestamp:
            type: string
            format: int64
            description: >-
              expiration_timestamp defines the expiration time for a time expiry
              futures

              market.
          twap_start_timestamp:
            type: string
            format: int64
            title: |-
              expiration_twap_start_timestamp defines the start time of the TWAP
              calculation window
          expiration_twap_start_price_cumulative:
            type: string
            title: >-
              expiration_twap_start_price_cumulative defines the cumulative
              price for the

              start of the TWAP window
          settlement_price:
            type: string
            description: >-
              settlement_price defines the settlement price for a time expiry
              futures

              market.
    description: |-
      QueryExpiryFuturesMarketInfoResponse is the response type for the Query/
      ExpiryFuturesMarketInfo RPC method.
  injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse:
    type: object
    properties:
      tier_level:
        type: string
        format: uint64
      account_info:
        type: object
        properties:
          maker_discount_rate:
            type: string
          taker_discount_rate:
            type: string
          staked_amount:
            type: string
          volume:
            type: string
      account_ttl:
        type: object
        properties:
          tier:
            type: string
            format: uint64
          ttl_timestamp:
            type: string
            format: int64
    description: |-
      QueryFeeDiscountAccountInfoResponse is the response type for the
      Query/FeeDiscountAccountInfo RPC method.
  injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse:
    type: object
    properties:
      fee_discount_schedule:
        type: object
        properties:
          bucket_count:
            type: string
            format: uint64
          bucket_duration:
            type: string
            format: int64
          quote_denoms:
            type: array
            items:
              type: string
            title: >-
              the trading fee quote denoms which will be counted for the fee
              paid

              contribution
          tier_infos:
            type: array
            items:
              type: object
              properties:
                maker_discount_rate:
                  type: string
                taker_discount_rate:
                  type: string
                staked_amount:
                  type: string
                volume:
                  type: string
            title: the fee discount tiers
          disqualified_market_ids:
            type: array
            items:
              type: string
            title: >-
              the marketIDs which are disqualified from contributing to the fee
              paid

              amount
    description: |-
      QueryFeeDiscountScheduleResponse is the response type for the
      Query/FeeDiscountSchedule RPC method.
  injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse:
    type: object
    properties:
      statistics:
        type: array
        items:
          type: object
          properties:
            tier:
              type: string
              format: uint64
            count:
              type: string
              format: uint64
    description: |-
      QueryFeeDiscountTierStatisticsResponse is the response type for the
      Query/QueryFeeDiscountTierStatistics RPC method.
  injective.exchange.v1beta1.QueryFullSpotMarketResponse:
    type: object
    properties:
      market:
        type: object
        properties:
          market:
            type: object
            properties:
              ticker:
                type: string
                description: >-
                  A name of the pair in format AAA/BBB, where AAA is base asset,
                  BBB is quote

                  asset.
              base_denom:
                type: string
                title: Coin denom used for the base asset
              quote_denom:
                type: string
                title: Coin used for the quote asset
              maker_fee_rate:
                type: string
                title: >-
                  maker_fee_rate defines the fee percentage makers pay when
                  trading
              taker_fee_rate:
                type: string
                title: >-
                  taker_fee_rate defines the fee percentage takers pay when
                  trading
              relayer_fee_share_rate:
                type: string
                title: >-
                  relayer_fee_share_rate defines the percentage of the
                  transaction fee shared

                  with the relayer in a derivative market
              market_id:
                type: string
                description: Unique market ID.
              status:
                title: Status of the market
                type: string
                enum:
                  - Unspecified
                  - Active
                  - Paused
                  - Demolished
                  - Expired
                default: Unspecified
              min_price_tick_size:
                type: string
                title: >-
                  min_price_tick_size defines the minimum tick size that the
                  price required

                  for orders in the market
              min_quantity_tick_size:
                type: string
                title: >-
                  min_quantity_tick_size defines the minimum tick size of the
                  quantity

                  required for orders in the market
            description: An object describing trade pair of two assets.
          mid_price_and_tob:
            title: >-
              mid_price_and_tob defines the mid price for this market and the
              best ask

              and bid orders
            type: object
            properties:
              mid_price:
                type: string
                title: mid price of the market
              best_buy_price:
                type: string
                title: best buy price of the market
              best_sell_price:
                type: string
                title: best sell price of the market
    description: |-
      QuerySpotMarketResponse is the response type for the Query/SpotMarket RPC
      method.
  injective.exchange.v1beta1.QueryFullSpotMarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            market:
              type: object
              properties:
                ticker:
                  type: string
                  description: >-
                    A name of the pair in format AAA/BBB, where AAA is base
                    asset, BBB is quote

                    asset.
                base_denom:
                  type: string
                  title: Coin denom used for the base asset
                quote_denom:
                  type: string
                  title: Coin used for the quote asset
                maker_fee_rate:
                  type: string
                  title: >-
                    maker_fee_rate defines the fee percentage makers pay when
                    trading
                taker_fee_rate:
                  type: string
                  title: >-
                    taker_fee_rate defines the fee percentage takers pay when
                    trading
                relayer_fee_share_rate:
                  type: string
                  title: >-
                    relayer_fee_share_rate defines the percentage of the
                    transaction fee shared

                    with the relayer in a derivative market
                market_id:
                  type: string
                  description: Unique market ID.
                status:
                  title: Status of the market
                  type: string
                  enum:
                    - Unspecified
                    - Active
                    - Paused
                    - Demolished
                    - Expired
                  default: Unspecified
                min_price_tick_size:
                  type: string
                  title: >-
                    min_price_tick_size defines the minimum tick size that the
                    price required

                    for orders in the market
                min_quantity_tick_size:
                  type: string
                  title: >-
                    min_quantity_tick_size defines the minimum tick size of the
                    quantity

                    required for orders in the market
              description: An object describing trade pair of two assets.
            mid_price_and_tob:
              title: >-
                mid_price_and_tob defines the mid price for this market and the
                best ask

                and bid orders
              type: object
              properties:
                mid_price:
                  type: string
                  title: mid price of the market
                best_buy_price:
                  type: string
                  title: best buy price of the market
                best_sell_price:
                  type: string
                  title: best sell price of the market
    description: |-
      QueryFullSpotMarketsResponse is the response type for the
      Query/FullSpotMarkets RPC method.
  injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse:
    type: object
    properties:
      trade_records:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            latest_trade_records:
              type: array
              items:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: int64
                  price:
                    type: string
                  quantity:
                    type: string
  injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse:
    type: object
    properties:
      is_opted_out:
        type: boolean
    description: |-
      QueryIsRegisteredDMMResponse is the response type for the
      Query/IsRegisteredDMM RPC method.
  injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse:
    type: object
    properties:
      multiplier:
        type: string
  injective.exchange.v1beta1.QueryMarketIDFromVaultResponse:
    type: object
    properties:
      market_id:
        type: string
    description: |-
      QueryMarketIDFromVaultResponse is the response type for the
      Query/QueryMarketIDFromVault RPC method.
  injective.exchange.v1beta1.QueryMarketVolatilityResponse:
    type: object
    properties:
      volatility:
        type: string
      history_metadata:
        type: object
        properties:
          group_count:
            type: integer
            format: int64
            title: >-
              GroupCount refers to the number of groups used. Equals
              RecordsSampleSize if

              no grouping is used
          records_sample_size:
            type: integer
            format: int64
            description: RecordsSampleSize refers to the total number of records used.
          mean:
            type: string
            title: >-
              Mean refers to the arithmetic mean

              For trades, the mean is the VWAP computed over the grouped trade
              records ∑

              (price * quantity) / ∑ quantity For oracle prices, the mean is
              computed

              over the price records ∑ (price) / prices_count
          twap:
            type: string
            title: >-
              TWAP refers to the time-weighted average price which equals ∑
              (price_i *

              ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
          first_timestamp:
            type: string
            format: int64
            title: FirstTimestamp is the timestamp of the oldest record considered
          last_timestamp:
            type: string
            format: int64
            title: LastTimestamp is the timestamp of the youngest record considered
          min_price:
            type: string
            title: MinPrice refers to the smallest individual raw price considered
          max_price:
            type: string
            title: MaxPrice refers to the largest individual raw price considered
          median_price:
            type: string
            title: MedianPrice refers to the median individual raw price considered
        title: |-
          MetadataStatistics refers to the metadata summary statistics of the
          historical sample considered
      raw_history:
        type: array
        items:
          type: object
          properties:
            timestamp:
              type: string
              format: int64
            price:
              type: string
            quantity:
              type: string
    description: |-
      QueryMarketVolatilityResponse is the response type for the
      Query/MarketVolatility RPC method.
  injective.exchange.v1beta1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            type: object
            properties:
              spot_market_instant_listing_fee:
                title: >-
                  spot_market_instant_listing_fee defines the expedited fee in
                  INJ required

                  to create a spot market by bypassing governance
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              derivative_market_instant_listing_fee:
                title: >-
                  derivative_market_instant_listing_fee defines the expedited
                  fee in INJ

                  required to create a derivative market by bypassing governance
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              default_spot_maker_fee_rate:
                type: string
                title: >-
                  default_spot_maker_fee defines the default exchange trade fee
                  for makers on

                  a spot market
              default_spot_taker_fee_rate:
                type: string
                title: >-
                  default_spot_taker_fee_rate defines the default exchange trade
                  fee rate for

                  takers on a new spot market
              default_derivative_maker_fee_rate:
                type: string
                title: >-
                  default_derivative_maker_fee defines the default exchange
                  trade fee for

                  makers on a new derivative market
              default_derivative_taker_fee_rate:
                type: string
                title: >-
                  default_derivative_taker_fee defines the default exchange
                  trade fee for

                  takers on a new derivative market
              default_initial_margin_ratio:
                type: string
                title: >-
                  default_initial_margin_ratio defines the default initial
                  margin ratio on a

                  new derivative market
              default_maintenance_margin_ratio:
                type: string
                title: >-
                  default_maintenance_margin_ratio defines the default
                  maintenance margin

                  ratio on a new derivative market
              default_funding_interval:
                type: string
                format: int64
                title: >-
                  default_funding_interval defines the default funding interval
                  on a

                  derivative market
              funding_multiple:
                type: string
                format: int64
                title: >-
                  funding_multiple defines the timestamp multiple that the
                  funding timestamp

                  should be a multiple of
              relayer_fee_share_rate:
                type: string
                title: >-
                  relayer_fee_share_rate defines the trade fee share percentage
                  that goes to

                  relayers
              default_hourly_funding_rate_cap:
                type: string
                title: >-
                  default_hourly_funding_rate_cap defines the default maximum
                  absolute value

                  of the hourly funding rate
              default_hourly_interest_rate:
                type: string
                title: hourly_interest_rate defines the hourly interest rate
              max_derivative_order_side_count:
                type: integer
                format: int64
                title: >-
                  max_derivative_order_side_count defines the maximum number of
                  derivative

                  active orders a subaccount can have for a given orderbook side
              inj_reward_staked_requirement_threshold:
                type: string
                title: >-
                  inj_reward_staked_requirement_threshold defines the threshold
                  on INJ

                  rewards after which one also needs staked INJ to receive more
              trading_rewards_vesting_duration:
                type: string
                format: int64
                title: >-
                  the trading_rewards_vesting_duration defines the vesting times
                  for trading

                  rewards
              liquidator_reward_share_rate:
                type: string
                title: >-
                  liquidator_reward_share_rate defines the ratio of the split of
                  the surplus

                  collateral that goes to the liquidator
              binary_options_market_instant_listing_fee:
                title: >-
                  binary_options_market_instant_listing_fee defines the
                  expedited fee in INJ

                  required to create a derivative market by bypassing governance
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              atomic_market_order_access_level:
                title: >-
                  atomic_market_order_access_level defines the required access
                  permissions

                  for executing atomic market orders
                type: string
                enum:
                  - Nobody
                  - BeginBlockerSmartContractsOnly
                  - SmartContractsOnly
                  - Everyone
                default: Nobody
              spot_atomic_market_order_fee_multiplier:
                type: string
                title: >-
                  spot_atomic_market_order_fee_multiplier defines the default
                  multiplier for

                  executing atomic market orders in spot markets
              derivative_atomic_market_order_fee_multiplier:
                type: string
                title: >-
                  derivative_atomic_market_order_fee_multiplier defines the
                  default

                  multiplier for executing atomic market orders in derivative
                  markets
              binary_options_atomic_market_order_fee_multiplier:
                type: string
                title: >-
                  binary_options_atomic_market_order_fee_multiplier defines the
                  default

                  multiplier for executing atomic market orders in binary
                  markets
              minimal_protocol_fee_rate:
                type: string
                title: >-
                  minimal_protocol_fee_rate defines the minimal protocol fee
                  rate
              is_instant_derivative_market_launch_enabled:
                type: boolean
                title: >-
                  is_instant_derivative_market_launch_enabled defines whether
                  instant

                  derivative market launch is enabled
              post_only_mode_height_threshold:
                type: string
                format: int64
            description: params defines all the parameters of related to exchange.
          spot_markets:
            type: array
            items:
              type: object
              properties:
                ticker:
                  type: string
                  description: >-
                    A name of the pair in format AAA/BBB, where AAA is base
                    asset, BBB is quote

                    asset.
                base_denom:
                  type: string
                  title: Coin denom used for the base asset
                quote_denom:
                  type: string
                  title: Coin used for the quote asset
                maker_fee_rate:
                  type: string
                  title: >-
                    maker_fee_rate defines the fee percentage makers pay when
                    trading
                taker_fee_rate:
                  type: string
                  title: >-
                    taker_fee_rate defines the fee percentage takers pay when
                    trading
                relayer_fee_share_rate:
                  type: string
                  title: >-
                    relayer_fee_share_rate defines the percentage of the
                    transaction fee shared

                    with the relayer in a derivative market
                market_id:
                  type: string
                  description: Unique market ID.
                status:
                  title: Status of the market
                  type: string
                  enum:
                    - Unspecified
                    - Active
                    - Paused
                    - Demolished
                    - Expired
                  default: Unspecified
                min_price_tick_size:
                  type: string
                  title: >-
                    min_price_tick_size defines the minimum tick size that the
                    price required

                    for orders in the market
                min_quantity_tick_size:
                  type: string
                  title: >-
                    min_quantity_tick_size defines the minimum tick size of the
                    quantity

                    required for orders in the market
              description: An object describing trade pair of two assets.
            title: spot_markets is an array containing the genesis trade pairs
          derivative_markets:
            type: array
            items:
              type: object
              properties:
                ticker:
                  type: string
                  description: Ticker for the derivative contract.
                oracle_base:
                  type: string
                  title: Oracle base currency
                oracle_quote:
                  type: string
                  title: Oracle quote currency
                oracle_type:
                  title: Oracle type
                  type: string
                  enum:
                    - Unspecified
                    - Band
                    - PriceFeed
                    - Coinbase
                    - Chainlink
                    - Razor
                    - Dia
                    - API3
                    - Uma
                    - Pyth
                    - BandIBC
                    - Provider
                  default: Unspecified
                oracle_scale_factor:
                  type: integer
                  format: int64
                  description: Scale factor for oracle prices.
                quote_denom:
                  type: string
                  title: >-
                    Address of the quote currency denomination for the
                    derivative contract
                market_id:
                  type: string
                  description: Unique market ID.
                initial_margin_ratio:
                  type: string
                  title: >-
                    initial_margin_ratio defines the initial margin ratio of a
                    derivative

                    market
                maintenance_margin_ratio:
                  type: string
                  title: >-
                    maintenance_margin_ratio defines the maintenance margin
                    ratio of a

                    derivative market
                maker_fee_rate:
                  type: string
                  title: >-
                    maker_fee_rate defines the maker fee rate of a derivative
                    market
                taker_fee_rate:
                  type: string
                  title: >-
                    taker_fee_rate defines the taker fee rate of a derivative
                    market
                relayer_fee_share_rate:
                  type: string
                  title: >-
                    relayer_fee_share_rate defines the percentage of the
                    transaction fee shared

                    with the relayer in a derivative market
                isPerpetual:
                  type: boolean
                  title: >-
                    true if the market is a perpetual market. false if the
                    market is an expiry

                    futures market
                status:
                  title: Status of the market
                  type: string
                  enum:
                    - Unspecified
                    - Active
                    - Paused
                    - Demolished
                    - Expired
                  default: Unspecified
                min_price_tick_size:
                  type: string
                  title: >-
                    min_price_tick_size defines the minimum tick size that the
                    price and margin

                    required for orders in the market
                min_quantity_tick_size:
                  type: string
                  title: >-
                    min_quantity_tick_size defines the minimum tick size of the
                    quantity

                    required for orders in the market
              description: >-
                An object describing a derivative market in the Injective
                Futures Protocol.
            title: >-
              derivative_markets is an array containing the genesis derivative
              markets
          spot_orderbook:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                isBuySide:
                  type: boolean
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      order_info:
                        title: order_info contains the information of the order
                        type: object
                        properties:
                          subaccount_id:
                            type: string
                            title: bytes32 subaccount ID that created the order
                          fee_recipient:
                            type: string
                            title: >-
                              address fee_recipient address that will receive
                              fees for the order
                          price:
                            type: string
                            title: price of the order
                          quantity:
                            type: string
                            title: quantity of the order
                          cid:
                            type: string
                      order_type:
                        title: order types
                        type: string
                        enum:
                          - UNSPECIFIED
                          - BUY
                          - SELL
                          - STOP_BUY
                          - STOP_SELL
                          - TAKE_BUY
                          - TAKE_SELL
                          - BUY_PO
                          - SELL_PO
                          - BUY_ATOMIC
                          - SELL_ATOMIC
                        default: UNSPECIFIED
                      fillable:
                        type: string
                        title: the amount of the quantity remaining fillable
                      trigger_price:
                        type: string
                        title: >-
                          trigger_price is the trigger price used by stop/take
                          orders
                      order_hash:
                        type: string
                        format: byte
                    description: A valid Spot limit order with Metadata.
              title: Spot Exchange Limit Orderbook
            description: >-
              spot_orderbook defines the spot exchange limit orderbook active at
              genesis.
          derivative_orderbook:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                isBuySide:
                  type: boolean
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      order_info:
                        title: order_info contains the information of the order
                        type: object
                        properties:
                          subaccount_id:
                            type: string
                            title: bytes32 subaccount ID that created the order
                          fee_recipient:
                            type: string
                            title: >-
                              address fee_recipient address that will receive
                              fees for the order
                          price:
                            type: string
                            title: price of the order
                          quantity:
                            type: string
                            title: quantity of the order
                          cid:
                            type: string
                      order_type:
                        title: order types
                        type: string
                        enum:
                          - UNSPECIFIED
                          - BUY
                          - SELL
                          - STOP_BUY
                          - STOP_SELL
                          - TAKE_BUY
                          - TAKE_SELL
                          - BUY_PO
                          - SELL_PO
                          - BUY_ATOMIC
                          - SELL_ATOMIC
                        default: UNSPECIFIED
                      margin:
                        type: string
                        title: margin is the margin used by the limit order
                      fillable:
                        type: string
                        title: the amount of the quantity remaining fillable
                      trigger_price:
                        type: string
                        title: >-
                          trigger_price is the trigger price used by stop/take
                          orders
                      order_hash:
                        type: string
                        format: byte
                    description: A valid Derivative limit order with Metadata.
              title: Derivative Exchange Limit Orderbook
            description: >-
              derivative_orderbook defines the derivative exchange limit
              orderbook active

              at genesis.
          balances:
            type: array
            items:
              type: object
              properties:
                subaccount_id:
                  type: string
                denom:
                  type: string
                deposits:
                  type: object
                  properties:
                    available_balance:
                      type: string
                    total_balance:
                      type: string
                  title: A subaccount's deposit for a given base currency
            description: balances defines the exchange users balances active at genesis.
          positions:
            type: array
            items:
              type: object
              properties:
                subaccount_id:
                  type: string
                market_id:
                  type: string
                position:
                  type: object
                  properties:
                    isLong:
                      type: boolean
                    quantity:
                      type: string
                    entry_price:
                      type: string
                    margin:
                      type: string
                    cumulative_funding_entry:
                      type: string
            title: positions defines the exchange derivative positions at genesis
          subaccount_trade_nonces:
            type: array
            items:
              type: object
              properties:
                subaccount_id:
                  type: string
                subaccount_trade_nonce:
                  type: object
                  properties:
                    nonce:
                      type: integer
                      format: int64
            title: >-
              subaccount_trade_nonces defines the subaccount trade nonces for
              the

              subaccounts at genesis
          expiry_futures_market_info_state:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                market_info:
                  type: object
                  properties:
                    market_id:
                      type: string
                      description: market ID.
                    expiration_timestamp:
                      type: string
                      format: int64
                      description: >-
                        expiration_timestamp defines the expiration time for a
                        time expiry futures

                        market.
                    twap_start_timestamp:
                      type: string
                      format: int64
                      title: >-
                        expiration_twap_start_timestamp defines the start time
                        of the TWAP

                        calculation window
                    expiration_twap_start_price_cumulative:
                      type: string
                      title: >-
                        expiration_twap_start_price_cumulative defines the
                        cumulative price for the

                        start of the TWAP window
                    settlement_price:
                      type: string
                      description: >-
                        settlement_price defines the settlement price for a time
                        expiry futures

                        market.
            title: >-
              expiry_futures_market_info defines the market info for the expiry
              futures

              markets at genesis
          perpetual_market_info:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                  description: market ID.
                hourly_funding_rate_cap:
                  type: string
                  title: >-
                    hourly_funding_rate_cap defines the maximum absolute value
                    of the hourly

                    funding rate
                hourly_interest_rate:
                  type: string
                  title: hourly_interest_rate defines the hourly interest rate
                next_funding_timestamp:
                  type: string
                  format: int64
                  title: >-
                    next_funding_timestamp defines the next funding timestamp in
                    seconds of a

                    perpetual market
                funding_interval:
                  type: string
                  format: int64
                  description: >-
                    funding_interval defines the next funding interval in
                    seconds of a

                    perpetual market.
            title: >-
              perpetual_market_info defines the market info for the perpetual
              derivative

              markets at genesis
          perpetual_market_funding_state:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                funding:
                  type: object
                  properties:
                    cumulative_funding:
                      type: string
                      description: >-
                        cumulative_funding defines the cumulative funding of a
                        perpetual market.
                    cumulative_price:
                      type: string
                      title: >-
                        cumulative_price defines the cumulative price for the
                        current hour up to

                        the last timestamp
                    last_timestamp:
                      type: string
                      format: int64
            title: >-
              perpetual_market_funding_state defines the funding state for the
              perpetual

              derivative markets at genesis
          derivative_market_settlement_scheduled:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                  description: market ID.
                settlement_price:
                  type: string
                  title: settlement_price defines the settlement price
            title: >-
              derivative_market_settlement_scheduled defines the scheduled
              markets for

              settlement at genesis
          is_spot_exchange_enabled:
            type: boolean
            title: sets spot markets as enabled
          is_derivatives_exchange_enabled:
            type: boolean
            title: sets derivative markets as enabled
          trading_reward_campaign_info:
            title: the current trading reward campaign info
            type: object
            properties:
              campaign_duration_seconds:
                type: string
                format: int64
                title: number of seconds of the duration of each campaign
              quote_denoms:
                type: array
                items:
                  type: string
                title: >-
                  the trading fee quote denoms which will be counted for the
                  rewards
              trading_reward_boost_info:
                title: the optional boost info for markets
                type: object
                properties:
                  boosted_spot_market_ids:
                    type: array
                    items:
                      type: string
                  spot_market_multipliers:
                    type: array
                    items:
                      type: object
                      properties:
                        maker_points_multiplier:
                          type: string
                        taker_points_multiplier:
                          type: string
                  boosted_derivative_market_ids:
                    type: array
                    items:
                      type: string
                  derivative_market_multipliers:
                    type: array
                    items:
                      type: object
                      properties:
                        maker_points_multiplier:
                          type: string
                        taker_points_multiplier:
                          type: string
              disqualified_market_ids:
                type: array
                items:
                  type: string
                title: the marketIDs which are disqualified from being rewarded
          trading_reward_pool_campaign_schedule:
            type: array
            items:
              type: object
              properties:
                start_timestamp:
                  type: string
                  format: int64
                max_campaign_rewards:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  title: >-
                    max_campaign_rewards are the maximum reward amounts to be
                    disbursed at the

                    end of the campaign
            title: the current and upcoming trading reward campaign pools
          trading_reward_campaign_account_points:
            type: array
            items:
              type: object
              properties:
                account:
                  type: string
                points:
                  type: string
            title: the current trading reward account points
          fee_discount_schedule:
            type: object
            properties:
              bucket_count:
                type: string
                format: uint64
              bucket_duration:
                type: string
                format: int64
              quote_denoms:
                type: array
                items:
                  type: string
                title: >-
                  the trading fee quote denoms which will be counted for the fee
                  paid

                  contribution
              tier_infos:
                type: array
                items:
                  type: object
                  properties:
                    maker_discount_rate:
                      type: string
                    taker_discount_rate:
                      type: string
                    staked_amount:
                      type: string
                    volume:
                      type: string
                title: the fee discount tiers
              disqualified_market_ids:
                type: array
                items:
                  type: string
                title: >-
                  the marketIDs which are disqualified from contributing to the
                  fee paid

                  amount
            title: the fee discount schedule
          fee_discount_account_tier_ttl:
            type: array
            items:
              type: object
              properties:
                account:
                  type: string
                tier_ttl:
                  type: object
                  properties:
                    tier:
                      type: string
                      format: uint64
                    ttl_timestamp:
                      type: string
                      format: int64
            title: the cached fee discount account tiers with TTL
          fee_discount_bucket_volume_accounts:
            type: array
            items:
              type: object
              properties:
                bucket_start_timestamp:
                  type: string
                  format: int64
                account_volume:
                  type: array
                  items:
                    type: object
                    properties:
                      account:
                        type: string
                      volume:
                        type: string
            title: the fee discount paid by accounts in all buckets
          is_first_fee_cycle_finished:
            type: boolean
            title: sets the first fee cycle as finished
          pending_trading_reward_pool_campaign_schedule:
            type: array
            items:
              type: object
              properties:
                start_timestamp:
                  type: string
                  format: int64
                max_campaign_rewards:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  title: >-
                    max_campaign_rewards are the maximum reward amounts to be
                    disbursed at the

                    end of the campaign
            title: the current and upcoming trading reward campaign pending pools
          pending_trading_reward_campaign_account_points:
            type: array
            items:
              type: object
              properties:
                reward_pool_start_timestamp:
                  type: string
                  format: int64
                account_points:
                  type: array
                  items:
                    type: object
                    properties:
                      account:
                        type: string
                      points:
                        type: string
            title: the pending trading reward account points
          rewards_opt_out_addresses:
            type: array
            items:
              type: string
            title: the addresses opting out of trading rewards
          historical_trade_records:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                latest_trade_records:
                  type: array
                  items:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        format: int64
                      price:
                        type: string
                      quantity:
                        type: string
          binary_options_markets:
            type: array
            items:
              type: object
              properties:
                ticker:
                  type: string
                  description: Ticker for the derivative contract.
                oracle_symbol:
                  type: string
                  title: Oracle symbol
                oracle_provider:
                  type: string
                  title: Oracle Provider
                oracle_type:
                  title: Oracle type
                  type: string
                  enum:
                    - Unspecified
                    - Band
                    - PriceFeed
                    - Coinbase
                    - Chainlink
                    - Razor
                    - Dia
                    - API3
                    - Uma
                    - Pyth
                    - BandIBC
                    - Provider
                  default: Unspecified
                oracle_scale_factor:
                  type: integer
                  format: int64
                  description: Scale factor for oracle prices.
                expiration_timestamp:
                  type: string
                  format: int64
                  title: expiration timestamp
                settlement_timestamp:
                  type: string
                  format: int64
                  title: expiration timestamp
                admin:
                  type: string
                  title: admin of the market
                quote_denom:
                  type: string
                  title: >-
                    Address of the quote currency denomination for the binary
                    options contract
                market_id:
                  type: string
                  description: Unique market ID.
                maker_fee_rate:
                  type: string
                  title: >-
                    maker_fee_rate defines the maker fee rate of a binary
                    options market
                taker_fee_rate:
                  type: string
                  title: >-
                    taker_fee_rate defines the taker fee rate of a derivative
                    market
                relayer_fee_share_rate:
                  type: string
                  title: >-
                    relayer_fee_share_rate defines the percentage of the
                    transaction fee shared

                    with the relayer in a derivative market
                status:
                  title: Status of the market
                  type: string
                  enum:
                    - Unspecified
                    - Active
                    - Paused
                    - Demolished
                    - Expired
                  default: Unspecified
                min_price_tick_size:
                  type: string
                  title: >-
                    min_price_tick_size defines the minimum tick size that the
                    price and margin

                    required for orders in the market
                min_quantity_tick_size:
                  type: string
                  title: >-
                    min_quantity_tick_size defines the minimum tick size of the
                    quantity

                    required for orders in the market
                settlement_price:
                  type: string
              description: >-
                An object describing a binary options market in Injective
                Protocol.
            title: >-
              binary_options_markets is an array containing the genesis binary
              options

              markets
          binary_options_market_ids_scheduled_for_settlement:
            type: array
            items:
              type: string
            title: >-
              binary_options_markets_scheduled_for_settlement contains the
              marketIDs of

              binary options markets scheduled for next-block settlement
          spot_market_ids_scheduled_to_force_close:
            type: array
            items:
              type: string
            title: >-
              spot_market_ids_scheduled_to_force_close defines the scheduled
              markets for

              forced closings at genesis
          denom_decimals:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                decimals:
                  type: string
                  format: uint64
            description: denom_decimals defines the denom decimals for the exchange.
          conditional_derivative_orderbooks:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                limit_buy_orders:
                  type: array
                  items:
                    type: object
                    properties:
                      order_info:
                        title: order_info contains the information of the order
                        type: object
                        properties:
                          subaccount_id:
                            type: string
                            title: bytes32 subaccount ID that created the order
                          fee_recipient:
                            type: string
                            title: >-
                              address fee_recipient address that will receive
                              fees for the order
                          price:
                            type: string
                            title: price of the order
                          quantity:
                            type: string
                            title: quantity of the order
                          cid:
                            type: string
                      order_type:
                        title: order types
                        type: string
                        enum:
                          - UNSPECIFIED
                          - BUY
                          - SELL
                          - STOP_BUY
                          - STOP_SELL
                          - TAKE_BUY
                          - TAKE_SELL
                          - BUY_PO
                          - SELL_PO
                          - BUY_ATOMIC
                          - SELL_ATOMIC
                        default: UNSPECIFIED
                      margin:
                        type: string
                        title: margin is the margin used by the limit order
                      fillable:
                        type: string
                        title: the amount of the quantity remaining fillable
                      trigger_price:
                        type: string
                        title: >-
                          trigger_price is the trigger price used by stop/take
                          orders
                      order_hash:
                        type: string
                        format: byte
                    description: A valid Derivative limit order with Metadata.
                market_buy_orders:
                  type: array
                  items:
                    type: object
                    properties:
                      order_info:
                        title: order_info contains the information of the order
                        type: object
                        properties:
                          subaccount_id:
                            type: string
                            title: bytes32 subaccount ID that created the order
                          fee_recipient:
                            type: string
                            title: >-
                              address fee_recipient address that will receive
                              fees for the order
                          price:
                            type: string
                            title: price of the order
                          quantity:
                            type: string
                            title: quantity of the order
                          cid:
                            type: string
                      order_type:
                        title: order types
                        type: string
                        enum:
                          - UNSPECIFIED
                          - BUY
                          - SELL
                          - STOP_BUY
                          - STOP_SELL
                          - TAKE_BUY
                          - TAKE_SELL
                          - BUY_PO
                          - SELL_PO
                          - BUY_ATOMIC
                          - SELL_ATOMIC
                        default: UNSPECIFIED
                      margin:
                        type: string
                      margin_hold:
                        type: string
                      trigger_price:
                        type: string
                        title: >-
                          trigger_price is the trigger price used by stop/take
                          orders
                      order_hash:
                        type: string
                        format: byte
                    description: A valid Derivative market order with Metadata.
                limit_sell_orders:
                  type: array
                  items:
                    type: object
                    properties:
                      order_info:
                        title: order_info contains the information of the order
                        type: object
                        properties:
                          subaccount_id:
                            type: string
                            title: bytes32 subaccount ID that created the order
                          fee_recipient:
                            type: string
                            title: >-
                              address fee_recipient address that will receive
                              fees for the order
                          price:
                            type: string
                            title: price of the order
                          quantity:
                            type: string
                            title: quantity of the order
                          cid:
                            type: string
                      order_type:
                        title: order types
                        type: string
                        enum:
                          - UNSPECIFIED
                          - BUY
                          - SELL
                          - STOP_BUY
                          - STOP_SELL
                          - TAKE_BUY
                          - TAKE_SELL
                          - BUY_PO
                          - SELL_PO
                          - BUY_ATOMIC
                          - SELL_ATOMIC
                        default: UNSPECIFIED
                      margin:
                        type: string
                        title: margin is the margin used by the limit order
                      fillable:
                        type: string
                        title: the amount of the quantity remaining fillable
                      trigger_price:
                        type: string
                        title: >-
                          trigger_price is the trigger price used by stop/take
                          orders
                      order_hash:
                        type: string
                        format: byte
                    description: A valid Derivative limit order with Metadata.
                market_sell_orders:
                  type: array
                  items:
                    type: object
                    properties:
                      order_info:
                        title: order_info contains the information of the order
                        type: object
                        properties:
                          subaccount_id:
                            type: string
                            title: bytes32 subaccount ID that created the order
                          fee_recipient:
                            type: string
                            title: >-
                              address fee_recipient address that will receive
                              fees for the order
                          price:
                            type: string
                            title: price of the order
                          quantity:
                            type: string
                            title: quantity of the order
                          cid:
                            type: string
                      order_type:
                        title: order types
                        type: string
                        enum:
                          - UNSPECIFIED
                          - BUY
                          - SELL
                          - STOP_BUY
                          - STOP_SELL
                          - TAKE_BUY
                          - TAKE_SELL
                          - BUY_PO
                          - SELL_PO
                          - BUY_ATOMIC
                          - SELL_ATOMIC
                        default: UNSPECIFIED
                      margin:
                        type: string
                      margin_hold:
                        type: string
                      trigger_price:
                        type: string
                        title: >-
                          trigger_price is the trigger price used by stop/take
                          orders
                      order_hash:
                        type: string
                        format: byte
                    description: A valid Derivative market order with Metadata.
              title: Orderbook containing limit & market conditional orders
            title: >-
              conditional_derivative_orderbook contains conditional orderbooks
              for all

              markets (both lmit and market conditional orders)
          market_fee_multipliers:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                fee_multiplier:
                  type: string
            title: |-
              market_fee_multipliers contains any non-default atomic order fee
              multipliers
          orderbook_sequences:
            type: array
            items:
              type: object
              properties:
                sequence:
                  type: string
                  format: uint64
                market_id:
                  type: string
          subaccount_volumes:
            type: array
            items:
              type: object
              properties:
                subaccount_id:
                  type: string
                market_volumes:
                  type: array
                  items:
                    type: object
                    properties:
                      market_id:
                        type: string
                      volume:
                        type: object
                        properties:
                          maker_volume:
                            type: string
                          taker_volume:
                            type: string
          market_volumes:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                volume:
                  type: object
                  properties:
                    maker_volume:
                      type: string
                    taker_volume:
                      type: string
        description: GenesisState defines the exchange module's genesis state.
    description: |-
      QueryModuleStateResponse is the response type for the
      Query/ExchangeModuleState RPC method.
  injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: string
    description: >-
      QueryRegisteredDMMsResponse is the response type for the
      Query/RegisteredDMMs

      RPC method.
  injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          cumulative_funding:
            type: string
            description: >-
              cumulative_funding defines the cumulative funding of a perpetual
              market.
          cumulative_price:
            type: string
            title: >-
              cumulative_price defines the cumulative price for the current hour
              up to

              the last timestamp
          last_timestamp:
            type: string
            format: int64
    description: |-
      QueryPerpetualMarketFundingResponse is the response type for the
      Query/PerpetualMarketFunding RPC method.
  injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse:
    type: object
    properties:
      info:
        type: object
        properties:
          market_id:
            type: string
            description: market ID.
          hourly_funding_rate_cap:
            type: string
            title: >-
              hourly_funding_rate_cap defines the maximum absolute value of the
              hourly

              funding rate
          hourly_interest_rate:
            type: string
            title: hourly_interest_rate defines the hourly interest rate
          next_funding_timestamp:
            type: string
            format: int64
            title: >-
              next_funding_timestamp defines the next funding timestamp in
              seconds of a

              perpetual market
          funding_interval:
            type: string
            format: int64
            description: |-
              funding_interval defines the next funding interval in seconds of a
              perpetual market.
    description: |-
      QueryPerpetualMarketInfoResponse is the response type for the
      Query/PerpetualMarketInfo RPC method.
  injective.exchange.v1beta1.QueryPositionsResponse:
    type: object
    properties:
      state:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            market_id:
              type: string
            position:
              type: object
              properties:
                isLong:
                  type: boolean
                quantity:
                  type: string
                entry_price:
                  type: string
                margin:
                  type: string
                cumulative_funding_entry:
                  type: string
    description: |-
      QueryPositionsResponse is the response type for the Query/Positions RPC
      method.
  injective.exchange.v1beta1.QuerySpotMarketResponse:
    type: object
    properties:
      market:
        type: object
        properties:
          ticker:
            type: string
            description: >-
              A name of the pair in format AAA/BBB, where AAA is base asset, BBB
              is quote

              asset.
          base_denom:
            type: string
            title: Coin denom used for the base asset
          quote_denom:
            type: string
            title: Coin used for the quote asset
          maker_fee_rate:
            type: string
            title: maker_fee_rate defines the fee percentage makers pay when trading
          taker_fee_rate:
            type: string
            title: taker_fee_rate defines the fee percentage takers pay when trading
          relayer_fee_share_rate:
            type: string
            title: >-
              relayer_fee_share_rate defines the percentage of the transaction
              fee shared

              with the relayer in a derivative market
          market_id:
            type: string
            description: Unique market ID.
          status:
            title: Status of the market
            type: string
            enum:
              - Unspecified
              - Active
              - Paused
              - Demolished
              - Expired
            default: Unspecified
          min_price_tick_size:
            type: string
            title: >-
              min_price_tick_size defines the minimum tick size that the price
              required

              for orders in the market
          min_quantity_tick_size:
            type: string
            title: >-
              min_quantity_tick_size defines the minimum tick size of the
              quantity

              required for orders in the market
        description: An object describing trade pair of two assets.
    description: |-
      QuerySpotMarketResponse is the response type for the Query/SpotMarket RPC
      method.
  injective.exchange.v1beta1.QuerySpotMarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: >-
                A name of the pair in format AAA/BBB, where AAA is base asset,
                BBB is quote

                asset.
            base_denom:
              type: string
              title: Coin denom used for the base asset
            quote_denom:
              type: string
              title: Coin used for the quote asset
            maker_fee_rate:
              type: string
              title: >-
                maker_fee_rate defines the fee percentage makers pay when
                trading
            taker_fee_rate:
              type: string
              title: >-
                taker_fee_rate defines the fee percentage takers pay when
                trading
            relayer_fee_share_rate:
              type: string
              title: >-
                relayer_fee_share_rate defines the percentage of the transaction
                fee shared

                with the relayer in a derivative market
            market_id:
              type: string
              description: Unique market ID.
            status:
              title: Status of the market
              type: string
              enum:
                - Unspecified
                - Active
                - Paused
                - Demolished
                - Expired
              default: Unspecified
            min_price_tick_size:
              type: string
              title: >-
                min_price_tick_size defines the minimum tick size that the price
                required

                for orders in the market
            min_quantity_tick_size:
              type: string
              title: >-
                min_quantity_tick_size defines the minimum tick size of the
                quantity

                required for orders in the market
          description: An object describing trade pair of two assets.
    description: >-
      QuerySpotMarketsResponse is the response type for the Query/SpotMarkets
      RPC

      method.
  injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse:
    type: object
    properties:
      mid_price:
        type: string
        title: mid price of the market
      best_buy_price:
        type: string
        title: best buy price of the market
      best_sell_price:
        type: string
        title: best sell price of the market
    description: |-
      QuerySpotMidPriceAndTOBResponse is the response type for the
      Query/SpotMidPriceAndTOB RPC method.
  injective.exchange.v1beta1.QuerySpotOrderbookResponse:
    type: object
    properties:
      buys_price_level:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: price
            q:
              type: string
              title: quantity
      sells_price_level:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: price
            q:
              type: string
              title: quantity
    description: >-
      QuerySpotOrderbookResponse is the response type for the
      Query/SpotOrderbook

      RPC method.
  injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            isBuy:
              type: boolean
              title: true if the order is a buy
            order_hash:
              type: string
    description: |-
      QuerySpotOrdersByHashesResponse is the response type for the
      Query/SpotOrdersByHashes RPC method.
  injective.exchange.v1beta1.QuerySubaccountDepositResponse:
    type: object
    properties:
      deposits:
        type: object
        properties:
          available_balance:
            type: string
          total_balance:
            type: string
        title: A subaccount's deposit for a given base currency
    description: |-
      QuerySubaccountDepositsResponse is the response type for the
      Query/SubaccountDeposits RPC method.
  injective.exchange.v1beta1.QuerySubaccountDepositsResponse:
    type: object
    properties:
      deposits:
        type: object
        additionalProperties:
          type: object
          properties:
            available_balance:
              type: string
            total_balance:
              type: string
          title: A subaccount's deposit for a given base currency
    description: |-
      QuerySubaccountDepositsResponse is the response type for the
      Query/SubaccountDeposits RPC method.
  injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          is_long:
            type: boolean
          quantity:
            type: string
          entry_price:
            type: string
          effective_margin:
            type: string
    description: >-
      QuerySubaccountEffectivePositionInMarketResponse is the response type for
      the

      Query/SubaccountEffectivePositionInMarket RPC method.
  injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse:
    type: object
    properties:
      metadata:
        type: array
        items:
          type: object
          properties:
            metadata:
              type: object
              properties:
                vanilla_limit_order_count:
                  type: integer
                  format: int64
                reduce_only_limit_order_count:
                  type: integer
                  format: int64
                aggregate_reduce_only_quantity:
                  type: string
                  description: >-
                    AggregateReduceOnlyQuantity is the aggregate fillable
                    quantity of the

                    subaccount's reduce-only limit orders in the given
                    direction.
                aggregate_vanilla_quantity:
                  type: string
                  description: >-
                    AggregateVanillaQuantity is the aggregate fillable quantity
                    of the

                    subaccount's vanilla limit orders in the given direction.
                vanilla_conditional_order_count:
                  type: integer
                  format: int64
                reduce_only_conditional_order_count:
                  type: integer
                  format: int64
            market_id:
              type: string
            isBuy:
              type: boolean
    description: |-
      QuerySubaccountOrderMetadataResponse is the response type for the
      Query/SubaccountOrderMetadata RPC method.
  injective.exchange.v1beta1.QuerySubaccountOrdersResponse:
    type: object
    properties:
      buy_orders:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: the amount of the quantity remaining fillable
                isReduceOnly:
                  type: boolean
            order_hash:
              type: string
              format: byte
      sell_orders:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: the amount of the quantity remaining fillable
                isReduceOnly:
                  type: boolean
            order_hash:
              type: string
              format: byte
  injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          isLong:
            type: boolean
          quantity:
            type: string
          entry_price:
            type: string
          margin:
            type: string
          cumulative_funding_entry:
            type: string
    description: |-
      QuerySubaccountPositionInMarketResponse is the response type for the
      Query/SubaccountPositionInMarket RPC method.
  injective.exchange.v1beta1.QuerySubaccountPositionsResponse:
    type: object
    properties:
      state:
        type: array
        items:
          type: object
          properties:
            subaccount_id:
              type: string
            market_id:
              type: string
            position:
              type: object
              properties:
                isLong:
                  type: boolean
                quantity:
                  type: string
                entry_price:
                  type: string
                margin:
                  type: string
                cumulative_funding_entry:
                  type: string
    description: |-
      QuerySubaccountPositionsResponse is the response type for the
      Query/SubaccountPositions RPC method.
  injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse:
    type: object
    properties:
      nonce:
        type: integer
        format: int64
    description: |-
      QuerySubaccountTradeNonceResponse is the response type for the
      Query/SubaccountTradeNonce RPC method.
  injective.exchange.v1beta1.QueryTradeRewardCampaignResponse:
    type: object
    properties:
      trading_reward_campaign_info:
        type: object
        properties:
          campaign_duration_seconds:
            type: string
            format: int64
            title: number of seconds of the duration of each campaign
          quote_denoms:
            type: array
            items:
              type: string
            title: the trading fee quote denoms which will be counted for the rewards
          trading_reward_boost_info:
            title: the optional boost info for markets
            type: object
            properties:
              boosted_spot_market_ids:
                type: array
                items:
                  type: string
              spot_market_multipliers:
                type: array
                items:
                  type: object
                  properties:
                    maker_points_multiplier:
                      type: string
                    taker_points_multiplier:
                      type: string
              boosted_derivative_market_ids:
                type: array
                items:
                  type: string
              derivative_market_multipliers:
                type: array
                items:
                  type: object
                  properties:
                    maker_points_multiplier:
                      type: string
                    taker_points_multiplier:
                      type: string
          disqualified_market_ids:
            type: array
            items:
              type: string
            title: the marketIDs which are disqualified from being rewarded
      trading_reward_pool_campaign_schedule:
        type: array
        items:
          type: object
          properties:
            start_timestamp:
              type: string
              format: int64
            max_campaign_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: >-
                max_campaign_rewards are the maximum reward amounts to be
                disbursed at the

                end of the campaign
      total_trade_reward_points:
        type: string
      pending_trading_reward_pool_campaign_schedule:
        type: array
        items:
          type: object
          properties:
            start_timestamp:
              type: string
              format: int64
            max_campaign_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: >-
                max_campaign_rewards are the maximum reward amounts to be
                disbursed at the

                end of the campaign
      pending_total_trade_reward_points:
        type: array
        items:
          type: string
    description: |-
      QueryTradeRewardCampaignResponse is the response type for the
      Query/TradeRewardCampaign RPC method.
  injective.exchange.v1beta1.QueryTradeRewardPointsResponse:
    type: object
    properties:
      account_trade_reward_points:
        type: array
        items:
          type: string
    description: |-
      QueryTradeRewardPointsResponse is the response type for the
      Query/TradeRewardPoints RPC method.
  injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            margin:
              type: string
              title: margin of the order
            triggerPrice:
              type: string
              title: price to trigger the order
            isBuy:
              type: boolean
              title: true if the order is a buy
            isLimit:
              type: boolean
            order_hash:
              type: string
    description: |-
      QueryTraderDerivativeOrdersResponse is the response type for the
      Query/TraderDerivativeOrders RPC method.
  injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            margin:
              type: string
              title: margin of the order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            isBuy:
              type: boolean
              title: true if the order is a buy
            order_hash:
              type: string
    description: |-
      QueryTraderDerivativeOrdersResponse is the response type for the
      Query/TraderDerivativeOrders RPC method.
  injective.exchange.v1beta1.QueryTraderSpotOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
              title: price of the order
            quantity:
              type: string
              title: quantity of the order
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            isBuy:
              type: boolean
              title: true if the order is a buy
            order_hash:
              type: string
    description: |-
      QueryTraderSpotOrdersResponse is the response type for the
      Query/TraderSpotOrders RPC method.
  injective.exchange.v1beta1.SpotLimitOrder:
    type: object
    properties:
      order_info:
        title: order_info contains the information of the order
        type: object
        properties:
          subaccount_id:
            type: string
            title: bytes32 subaccount ID that created the order
          fee_recipient:
            type: string
            title: address fee_recipient address that will receive fees for the order
          price:
            type: string
            title: price of the order
          quantity:
            type: string
            title: quantity of the order
          cid:
            type: string
      order_type:
        title: order types
        type: string
        enum:
          - UNSPECIFIED
          - BUY
          - SELL
          - STOP_BUY
          - STOP_SELL
          - TAKE_BUY
          - TAKE_SELL
          - BUY_PO
          - SELL_PO
          - BUY_ATOMIC
          - SELL_ATOMIC
        default: UNSPECIFIED
      fillable:
        type: string
        title: the amount of the quantity remaining fillable
      trigger_price:
        type: string
        title: trigger_price is the trigger price used by stop/take orders
      order_hash:
        type: string
        format: byte
    description: A valid Spot limit order with Metadata.
  injective.exchange.v1beta1.SpotMarket:
    type: object
    properties:
      ticker:
        type: string
        description: >-
          A name of the pair in format AAA/BBB, where AAA is base asset, BBB is
          quote

          asset.
      base_denom:
        type: string
        title: Coin denom used for the base asset
      quote_denom:
        type: string
        title: Coin used for the quote asset
      maker_fee_rate:
        type: string
        title: maker_fee_rate defines the fee percentage makers pay when trading
      taker_fee_rate:
        type: string
        title: taker_fee_rate defines the fee percentage takers pay when trading
      relayer_fee_share_rate:
        type: string
        title: >-
          relayer_fee_share_rate defines the percentage of the transaction fee
          shared

          with the relayer in a derivative market
      market_id:
        type: string
        description: Unique market ID.
      status:
        title: Status of the market
        type: string
        enum:
          - Unspecified
          - Active
          - Paused
          - Demolished
          - Expired
        default: Unspecified
      min_price_tick_size:
        type: string
        title: >-
          min_price_tick_size defines the minimum tick size that the price
          required

          for orders in the market
      min_quantity_tick_size:
        type: string
        title: |-
          min_quantity_tick_size defines the minimum tick size of the quantity
          required for orders in the market
    description: An object describing trade pair of two assets.
  injective.exchange.v1beta1.SpotOrderBook:
    type: object
    properties:
      market_id:
        type: string
      isBuySide:
        type: boolean
      orders:
        type: array
        items:
          type: object
          properties:
            order_info:
              title: order_info contains the information of the order
              type: object
              properties:
                subaccount_id:
                  type: string
                  title: bytes32 subaccount ID that created the order
                fee_recipient:
                  type: string
                  title: >-
                    address fee_recipient address that will receive fees for the
                    order
                price:
                  type: string
                  title: price of the order
                quantity:
                  type: string
                  title: quantity of the order
                cid:
                  type: string
            order_type:
              title: order types
              type: string
              enum:
                - UNSPECIFIED
                - BUY
                - SELL
                - STOP_BUY
                - STOP_SELL
                - TAKE_BUY
                - TAKE_SELL
                - BUY_PO
                - SELL_PO
                - BUY_ATOMIC
                - SELL_ATOMIC
              default: UNSPECIFIED
            fillable:
              type: string
              title: the amount of the quantity remaining fillable
            trigger_price:
              type: string
              title: trigger_price is the trigger price used by stop/take orders
            order_hash:
              type: string
              format: byte
          description: A valid Spot limit order with Metadata.
    title: Spot Exchange Limit Orderbook
  injective.exchange.v1beta1.Subaccount:
    type: object
    properties:
      trader:
        type: string
      subaccount_nonce:
        type: integer
        format: int64
  injective.exchange.v1beta1.SubaccountNonce:
    type: object
    properties:
      subaccount_id:
        type: string
      subaccount_trade_nonce:
        type: object
        properties:
          nonce:
            type: integer
            format: int64
  injective.exchange.v1beta1.SubaccountOrder:
    type: object
    properties:
      price:
        type: string
        title: price of the order
      quantity:
        type: string
        title: the amount of the quantity remaining fillable
      isReduceOnly:
        type: boolean
  injective.exchange.v1beta1.SubaccountOrderData:
    type: object
    properties:
      order:
        type: object
        properties:
          price:
            type: string
            title: price of the order
          quantity:
            type: string
            title: the amount of the quantity remaining fillable
          isReduceOnly:
            type: boolean
      order_hash:
        type: string
        format: byte
  injective.exchange.v1beta1.SubaccountOrderbookMetadata:
    type: object
    properties:
      vanilla_limit_order_count:
        type: integer
        format: int64
      reduce_only_limit_order_count:
        type: integer
        format: int64
      aggregate_reduce_only_quantity:
        type: string
        description: |-
          AggregateReduceOnlyQuantity is the aggregate fillable quantity of the
          subaccount's reduce-only limit orders in the given direction.
      aggregate_vanilla_quantity:
        type: string
        description: |-
          AggregateVanillaQuantity is the aggregate fillable quantity of the
          subaccount's vanilla limit orders in the given direction.
      vanilla_conditional_order_count:
        type: integer
        format: int64
      reduce_only_conditional_order_count:
        type: integer
        format: int64
  injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket:
    type: object
    properties:
      metadata:
        type: object
        properties:
          vanilla_limit_order_count:
            type: integer
            format: int64
          reduce_only_limit_order_count:
            type: integer
            format: int64
          aggregate_reduce_only_quantity:
            type: string
            description: >-
              AggregateReduceOnlyQuantity is the aggregate fillable quantity of
              the

              subaccount's reduce-only limit orders in the given direction.
          aggregate_vanilla_quantity:
            type: string
            description: |-
              AggregateVanillaQuantity is the aggregate fillable quantity of the
              subaccount's vanilla limit orders in the given direction.
          vanilla_conditional_order_count:
            type: integer
            format: int64
          reduce_only_conditional_order_count:
            type: integer
            format: int64
      market_id:
        type: string
      isBuy:
        type: boolean
  injective.exchange.v1beta1.SubaccountTradeNonce:
    type: object
    properties:
      nonce:
        type: integer
        format: int64
  injective.exchange.v1beta1.TierStatistic:
    type: object
    properties:
      tier:
        type: string
        format: uint64
      count:
        type: string
        format: uint64
  injective.exchange.v1beta1.TradeHistoryOptions:
    type: object
    properties:
      trade_grouping_sec:
        type: string
        format: uint64
        title: TradeGroupingSec of 0 means use the chain's default grouping
      max_age:
        type: string
        format: uint64
        description: >-
          MaxAge restricts the trade records oldest age in seconds from the
          current

          block time to consider. A value of 0 means use all the records present
          on

          the chain.
      include_raw_history:
        type: boolean
        title: |-
          If IncludeRawHistory is true, the raw underlying data used for the
          computation is included in the response
      include_metadata:
        type: boolean
        title: >-
          If IncludeMetadata is true, metadata on the computation is included in
          the

          response
    description: |-
      TradeHistoryOptions are the optional params for Query/MarketVolatility RPC
      method.
  injective.exchange.v1beta1.TradeRecord:
    type: object
    properties:
      timestamp:
        type: string
        format: int64
      price:
        type: string
      quantity:
        type: string
  injective.exchange.v1beta1.TradeRecords:
    type: object
    properties:
      market_id:
        type: string
      latest_trade_records:
        type: array
        items:
          type: object
          properties:
            timestamp:
              type: string
              format: int64
            price:
              type: string
            quantity:
              type: string
  injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints:
    type: object
    properties:
      reward_pool_start_timestamp:
        type: string
        format: int64
      account_points:
        type: array
        items:
          type: object
          properties:
            account:
              type: string
            points:
              type: string
  injective.exchange.v1beta1.TradingRewardCampaignAccountPoints:
    type: object
    properties:
      account:
        type: string
      points:
        type: string
  injective.exchange.v1beta1.TradingRewardCampaignBoostInfo:
    type: object
    properties:
      boosted_spot_market_ids:
        type: array
        items:
          type: string
      spot_market_multipliers:
        type: array
        items:
          type: object
          properties:
            maker_points_multiplier:
              type: string
            taker_points_multiplier:
              type: string
      boosted_derivative_market_ids:
        type: array
        items:
          type: string
      derivative_market_multipliers:
        type: array
        items:
          type: object
          properties:
            maker_points_multiplier:
              type: string
            taker_points_multiplier:
              type: string
  injective.exchange.v1beta1.TradingRewardCampaignInfo:
    type: object
    properties:
      campaign_duration_seconds:
        type: string
        format: int64
        title: number of seconds of the duration of each campaign
      quote_denoms:
        type: array
        items:
          type: string
        title: the trading fee quote denoms which will be counted for the rewards
      trading_reward_boost_info:
        title: the optional boost info for markets
        type: object
        properties:
          boosted_spot_market_ids:
            type: array
            items:
              type: string
          spot_market_multipliers:
            type: array
            items:
              type: object
              properties:
                maker_points_multiplier:
                  type: string
                taker_points_multiplier:
                  type: string
          boosted_derivative_market_ids:
            type: array
            items:
              type: string
          derivative_market_multipliers:
            type: array
            items:
              type: object
              properties:
                maker_points_multiplier:
                  type: string
                taker_points_multiplier:
                  type: string
      disqualified_market_ids:
        type: array
        items:
          type: string
        title: the marketIDs which are disqualified from being rewarded
  injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder:
    type: object
    properties:
      price:
        type: string
        title: price of the order
      quantity:
        type: string
        title: quantity of the order
      margin:
        type: string
        title: margin of the order
      triggerPrice:
        type: string
        title: price to trigger the order
      isBuy:
        type: boolean
        title: true if the order is a buy
      isLimit:
        type: boolean
      order_hash:
        type: string
  injective.exchange.v1beta1.TrimmedDerivativeLimitOrder:
    type: object
    properties:
      price:
        type: string
        title: price of the order
      quantity:
        type: string
        title: quantity of the order
      margin:
        type: string
        title: margin of the order
      fillable:
        type: string
        title: the amount of the quantity remaining fillable
      isBuy:
        type: boolean
        title: true if the order is a buy
      order_hash:
        type: string
  injective.exchange.v1beta1.TrimmedSpotLimitOrder:
    type: object
    properties:
      price:
        type: string
        title: price of the order
      quantity:
        type: string
        title: quantity of the order
      fillable:
        type: string
        title: the amount of the quantity remaining fillable
      isBuy:
        type: boolean
        title: true if the order is a buy
      order_hash:
        type: string
  injective.exchange.v1beta1.VolumeRecord:
    type: object
    properties:
      maker_volume:
        type: string
      taker_volume:
        type: string
  injective.oracle.v1beta1.MetadataStatistics:
    type: object
    properties:
      group_count:
        type: integer
        format: int64
        title: >-
          GroupCount refers to the number of groups used. Equals
          RecordsSampleSize if

          no grouping is used
      records_sample_size:
        type: integer
        format: int64
        description: RecordsSampleSize refers to the total number of records used.
      mean:
        type: string
        title: >-
          Mean refers to the arithmetic mean

          For trades, the mean is the VWAP computed over the grouped trade
          records ∑

          (price * quantity) / ∑ quantity For oracle prices, the mean is
          computed

          over the price records ∑ (price) / prices_count
      twap:
        type: string
        title: >-
          TWAP refers to the time-weighted average price which equals ∑ (price_i
          *

          ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
      first_timestamp:
        type: string
        format: int64
        title: FirstTimestamp is the timestamp of the oldest record considered
      last_timestamp:
        type: string
        format: int64
        title: LastTimestamp is the timestamp of the youngest record considered
      min_price:
        type: string
        title: MinPrice refers to the smallest individual raw price considered
      max_price:
        type: string
        title: MaxPrice refers to the largest individual raw price considered
      median_price:
        type: string
        title: MedianPrice refers to the median individual raw price considered
    title: |-
      MetadataStatistics refers to the metadata summary statistics of the
      historical sample considered
  injective.oracle.v1beta1.OracleType:
    type: string
    enum:
      - Unspecified
      - Band
      - PriceFeed
      - Coinbase
      - Chainlink
      - Razor
      - Dia
      - API3
      - Uma
      - Pyth
      - BandIBC
      - Provider
    default: Unspecified
  injective.wasmx.v1.FundingMode:
    type: string
    enum:
      - Unspecified
      - SelfFunded
      - GrantOnly
      - Dual
    default: Unspecified
  injective.wasmx.v1.GenesisState:
    type: object
    properties:
      params:
        description: params defines all the parameters of related to wasmx.
        type: object
        properties:
          is_execution_enabled:
            type: boolean
            description: >-
              Set the status to active to indicate that contracts can be
              executed in

              begin blocker.
          max_begin_block_total_gas:
            type: string
            format: uint64
            description: >-
              Maximum aggregate total gas to be used for the contract executions
              in the

              BeginBlocker.
          max_contract_gas_limit:
            type: string
            format: uint64
            description: |-
              the maximum gas limit each individual contract can consume in the
              BeginBlocker.
          min_gas_price:
            type: string
            format: uint64
            description: >-
              min_gas_price defines the minimum gas price the contracts must pay
              to be

              executed in the BeginBlocker.
      registered_contracts:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            registered_contract:
              type: object
              properties:
                gas_limit:
                  type: string
                  format: uint64
                  title: limit of gas per BB execution
                gas_price:
                  type: string
                  format: uint64
                  title: >-
                    gas price that contract is willing to pay for execution in
                    BeginBlocker
                is_executable:
                  type: boolean
                  title: is contract currently active
                code_id:
                  type: string
                  format: uint64
                  title: >-
                    code_id that is allowed to be executed (to prevent malicious
                    updates) - if

                    nil/0 any code_id can be executed
                admin_address:
                  type: string
                  title: >-
                    optional - admin addr that is allowed to update contract
                    data
                granter_address:
                  type: string
                  title: |-
                    Optional: address of the contract granting fee
                    Must be set if fund_mode is GrantOnly
                fund_mode:
                  title: funding mode
                  type: string
                  enum:
                    - Unspecified
                    - SelfFunded
                    - GrantOnly
                    - Dual
                  default: Unspecified
        title: |-
          registered_contracts is an array containing the genesis registered
          contracts
    description: GenesisState defines the wasmx module's genesis state.
  injective.wasmx.v1.Params:
    type: object
    properties:
      is_execution_enabled:
        type: boolean
        description: |-
          Set the status to active to indicate that contracts can be executed in
          begin blocker.
      max_begin_block_total_gas:
        type: string
        format: uint64
        description: >-
          Maximum aggregate total gas to be used for the contract executions in
          the

          BeginBlocker.
      max_contract_gas_limit:
        type: string
        format: uint64
        description: |-
          the maximum gas limit each individual contract can consume in the
          BeginBlocker.
      min_gas_price:
        type: string
        format: uint64
        description: >-
          min_gas_price defines the minimum gas price the contracts must pay to
          be

          executed in the BeginBlocker.
  injective.wasmx.v1.QueryContractRegistrationInfoResponse:
    type: object
    properties:
      contract:
        type: object
        properties:
          gas_limit:
            type: string
            format: uint64
            title: limit of gas per BB execution
          gas_price:
            type: string
            format: uint64
            title: >-
              gas price that contract is willing to pay for execution in
              BeginBlocker
          is_executable:
            type: boolean
            title: is contract currently active
          code_id:
            type: string
            format: uint64
            title: >-
              code_id that is allowed to be executed (to prevent malicious
              updates) - if

              nil/0 any code_id can be executed
          admin_address:
            type: string
            title: optional - admin addr that is allowed to update contract data
          granter_address:
            type: string
            title: |-
              Optional: address of the contract granting fee
              Must be set if fund_mode is GrantOnly
          fund_mode:
            title: funding mode
            type: string
            enum:
              - Unspecified
              - SelfFunded
              - GrantOnly
              - Dual
            default: Unspecified
  injective.wasmx.v1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            description: params defines all the parameters of related to wasmx.
            type: object
            properties:
              is_execution_enabled:
                type: boolean
                description: >-
                  Set the status to active to indicate that contracts can be
                  executed in

                  begin blocker.
              max_begin_block_total_gas:
                type: string
                format: uint64
                description: >-
                  Maximum aggregate total gas to be used for the contract
                  executions in the

                  BeginBlocker.
              max_contract_gas_limit:
                type: string
                format: uint64
                description: >-
                  the maximum gas limit each individual contract can consume in
                  the

                  BeginBlocker.
              min_gas_price:
                type: string
                format: uint64
                description: >-
                  min_gas_price defines the minimum gas price the contracts must
                  pay to be

                  executed in the BeginBlocker.
          registered_contracts:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                registered_contract:
                  type: object
                  properties:
                    gas_limit:
                      type: string
                      format: uint64
                      title: limit of gas per BB execution
                    gas_price:
                      type: string
                      format: uint64
                      title: >-
                        gas price that contract is willing to pay for execution
                        in BeginBlocker
                    is_executable:
                      type: boolean
                      title: is contract currently active
                    code_id:
                      type: string
                      format: uint64
                      title: >-
                        code_id that is allowed to be executed (to prevent
                        malicious updates) - if

                        nil/0 any code_id can be executed
                    admin_address:
                      type: string
                      title: >-
                        optional - admin addr that is allowed to update contract
                        data
                    granter_address:
                      type: string
                      title: |-
                        Optional: address of the contract granting fee
                        Must be set if fund_mode is GrantOnly
                    fund_mode:
                      title: funding mode
                      type: string
                      enum:
                        - Unspecified
                        - SelfFunded
                        - GrantOnly
                        - Dual
                      default: Unspecified
            title: |-
              registered_contracts is an array containing the genesis registered
              contracts
        description: GenesisState defines the wasmx module's genesis state.
    description: >-
      QueryModuleStateResponse is the response type for the
      Query/WasmxModuleState

      RPC method.
  injective.wasmx.v1.QueryWasmxParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          is_execution_enabled:
            type: boolean
            description: >-
              Set the status to active to indicate that contracts can be
              executed in

              begin blocker.
          max_begin_block_total_gas:
            type: string
            format: uint64
            description: >-
              Maximum aggregate total gas to be used for the contract executions
              in the

              BeginBlocker.
          max_contract_gas_limit:
            type: string
            format: uint64
            description: |-
              the maximum gas limit each individual contract can consume in the
              BeginBlocker.
          min_gas_price:
            type: string
            format: uint64
            description: >-
              min_gas_price defines the minimum gas price the contracts must pay
              to be

              executed in the BeginBlocker.
    description: |-
      QueryWasmxParamsRequest is the response type for the Query/WasmxParams RPC
      method.
  injective.wasmx.v1.RegisteredContract:
    type: object
    properties:
      gas_limit:
        type: string
        format: uint64
        title: limit of gas per BB execution
      gas_price:
        type: string
        format: uint64
        title: >-
          gas price that contract is willing to pay for execution in
          BeginBlocker
      is_executable:
        type: boolean
        title: is contract currently active
      code_id:
        type: string
        format: uint64
        title: >-
          code_id that is allowed to be executed (to prevent malicious updates)
          - if

          nil/0 any code_id can be executed
      admin_address:
        type: string
        title: optional - admin addr that is allowed to update contract data
      granter_address:
        type: string
        title: |-
          Optional: address of the contract granting fee
          Must be set if fund_mode is GrantOnly
      fund_mode:
        title: funding mode
        type: string
        enum:
          - Unspecified
          - SelfFunded
          - GrantOnly
          - Dual
        default: Unspecified
  injective.wasmx.v1.RegisteredContractWithAddress:
    type: object
    properties:
      address:
        type: string
      registered_contract:
        type: object
        properties:
          gas_limit:
            type: string
            format: uint64
            title: limit of gas per BB execution
          gas_price:
            type: string
            format: uint64
            title: >-
              gas price that contract is willing to pay for execution in
              BeginBlocker
          is_executable:
            type: boolean
            title: is contract currently active
          code_id:
            type: string
            format: uint64
            title: >-
              code_id that is allowed to be executed (to prevent malicious
              updates) - if

              nil/0 any code_id can be executed
          admin_address:
            type: string
            title: optional - admin addr that is allowed to update contract data
          granter_address:
            type: string
            title: |-
              Optional: address of the contract granting fee
              Must be set if fund_mode is GrantOnly
          fund_mode:
            title: funding mode
            type: string
            enum:
              - Unspecified
              - SelfFunded
              - GrantOnly
              - Dual
            default: Unspecified
  injective.ocr.v1beta1.Count:
    type: object
    properties:
      address:
        type: string
      count:
        type: string
        format: uint64
  injective.ocr.v1beta1.EpochAndRound:
    type: object
    properties:
      epoch:
        type: string
        format: uint64
      round:
        type: string
        format: uint64
  injective.ocr.v1beta1.FeedConfig:
    type: object
    properties:
      signers:
        type: array
        items:
          type: string
        title: signers ith element is address ith oracle uses to sign a report
      transmitters:
        type: array
        items:
          type: string
        title: >-
          transmitters ith element is address ith oracle uses to transmit a
          report

          via the transmit method
      f:
        type: integer
        format: int64
        title: |-
          f maximum number of faulty/dishonest oracles the protocol can tolerate
          while still working correctly
      onchain_config:
        type: string
        format: byte
        description: onchain_config serialized data with reporting plugin params on chain.
      offchain_config_version:
        type: string
        format: uint64
        title: |-
          offchain_config_version version of the serialization format used for
          "offchain_config" parameter
      offchain_config:
        type: string
        format: byte
        title: >-
          offchain_config serialized data used by oracles to configure their
          offchain

          operation
      module_params:
        description: feed-specific params for the Cosmos module.
        type: object
        properties:
          feed_id:
            type: string
            title: feed_id is an unique ID for the target of this config
          min_answer:
            type: string
            title: lowest answer the median of a report is allowed to be
          max_answer:
            type: string
            title: highest answer the median of a report is allowed to be
          link_per_observation:
            type: string
            title: Fixed LINK reward for each observer
          link_per_transmission:
            type: string
            title: Fixed LINK reward for transmitter
          link_denom:
            type: string
            title: Native denom for LINK coin in the bank keeper
          unique_reports:
            type: boolean
            title: Enables unique reports
          description:
            type: string
            title: >-
              short human-readable description of observable this feed's answers
              pertain

              to
          feed_admin:
            type: string
            title: feed administrator
          billing_admin:
            type: string
            title: feed billing administrator
  injective.ocr.v1beta1.FeedConfigInfo:
    type: object
    properties:
      latest_config_digest:
        type: string
        format: byte
      f:
        type: integer
        format: int64
      'n':
        type: integer
        format: int64
      config_count:
        type: string
        format: uint64
        title: |-
          config_count ordinal number of this config setting among all config
          settings
      latest_config_block_number:
        type: string
        format: int64
  injective.ocr.v1beta1.FeedCounts:
    type: object
    properties:
      feed_id:
        type: string
      counts:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            count:
              type: string
              format: uint64
  injective.ocr.v1beta1.FeedEpochAndRound:
    type: object
    properties:
      feed_id:
        type: string
      epoch_and_round:
        type: object
        properties:
          epoch:
            type: string
            format: uint64
          round:
            type: string
            format: uint64
  injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs:
    type: object
    properties:
      feed_id:
        type: string
      aggregator_round_id:
        type: string
        format: uint64
  injective.ocr.v1beta1.FeedTransmission:
    type: object
    properties:
      feed_id:
        type: string
      transmission:
        type: object
        properties:
          answer:
            type: string
          observations_timestamp:
            type: string
            format: int64
          transmission_timestamp:
            type: string
            format: int64
        title: >-
          Transmission records the median answer from the transmit transaction
          at

          time timestamp
  injective.ocr.v1beta1.GenesisState:
    type: object
    properties:
      params:
        description: params defines all the parameters of related to OCR.
        type: object
        properties:
          link_denom:
            type: string
            title: Native denom for LINK coin in the bank keeper
          payout_block_interval:
            type: string
            format: uint64
            title: The block number interval at which payouts are made
          module_admin:
            type: string
            title: The admin for the OCR module
      feed_configs:
        type: array
        items:
          type: object
          properties:
            signers:
              type: array
              items:
                type: string
              title: signers ith element is address ith oracle uses to sign a report
            transmitters:
              type: array
              items:
                type: string
              title: >-
                transmitters ith element is address ith oracle uses to transmit
                a report

                via the transmit method
            f:
              type: integer
              format: int64
              title: >-
                f maximum number of faulty/dishonest oracles the protocol can
                tolerate

                while still working correctly
            onchain_config:
              type: string
              format: byte
              description: >-
                onchain_config serialized data with reporting plugin params on
                chain.
            offchain_config_version:
              type: string
              format: uint64
              title: >-
                offchain_config_version version of the serialization format used
                for

                "offchain_config" parameter
            offchain_config:
              type: string
              format: byte
              title: >-
                offchain_config serialized data used by oracles to configure
                their offchain

                operation
            module_params:
              description: feed-specific params for the Cosmos module.
              type: object
              properties:
                feed_id:
                  type: string
                  title: feed_id is an unique ID for the target of this config
                min_answer:
                  type: string
                  title: lowest answer the median of a report is allowed to be
                max_answer:
                  type: string
                  title: highest answer the median of a report is allowed to be
                link_per_observation:
                  type: string
                  title: Fixed LINK reward for each observer
                link_per_transmission:
                  type: string
                  title: Fixed LINK reward for transmitter
                link_denom:
                  type: string
                  title: Native denom for LINK coin in the bank keeper
                unique_reports:
                  type: boolean
                  title: Enables unique reports
                description:
                  type: string
                  title: >-
                    short human-readable description of observable this feed's
                    answers pertain

                    to
                feed_admin:
                  type: string
                  title: feed administrator
                billing_admin:
                  type: string
                  title: feed billing administrator
        title: feed_configs stores all of the supported OCR feeds
      latest_epoch_and_rounds:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            epoch_and_round:
              type: object
              properties:
                epoch:
                  type: string
                  format: uint64
                round:
                  type: string
                  format: uint64
        title: >-
          latest_epoch_and_rounds stores the latest epoch and round for each
          feedId
      feed_transmissions:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            transmission:
              type: object
              properties:
                answer:
                  type: string
                observations_timestamp:
                  type: string
                  format: int64
                transmission_timestamp:
                  type: string
                  format: int64
              title: >-
                Transmission records the median answer from the transmit
                transaction at

                time timestamp
        title: feed_transmissions stores the last transmission for each feed
      latest_aggregator_round_ids:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            aggregator_round_id:
              type: string
              format: uint64
        title: >-
          latest_aggregator_round_ids stores the latest aggregator round ID for
          each

          feedId
      reward_pools:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
        title: reward_pools stores the reward pools
      feed_observation_counts:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            counts:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  count:
                    type: string
                    format: uint64
        title: feed_observation_counts stores the feed observation counts
      feed_transmission_counts:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            counts:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  count:
                    type: string
                    format: uint64
        title: feed_transmission_counts stores the feed transmission counts
      pending_payeeships:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            transmitter:
              type: string
            proposed_payee:
              type: string
        title: pending_payeeships stores the pending payeeships
    description: GenesisState defines the OCR module's genesis state.
  injective.ocr.v1beta1.ModuleParams:
    type: object
    properties:
      feed_id:
        type: string
        title: feed_id is an unique ID for the target of this config
      min_answer:
        type: string
        title: lowest answer the median of a report is allowed to be
      max_answer:
        type: string
        title: highest answer the median of a report is allowed to be
      link_per_observation:
        type: string
        title: Fixed LINK reward for each observer
      link_per_transmission:
        type: string
        title: Fixed LINK reward for transmitter
      link_denom:
        type: string
        title: Native denom for LINK coin in the bank keeper
      unique_reports:
        type: boolean
        title: Enables unique reports
      description:
        type: string
        title: >-
          short human-readable description of observable this feed's answers
          pertain

          to
      feed_admin:
        type: string
        title: feed administrator
      billing_admin:
        type: string
        title: feed billing administrator
  injective.ocr.v1beta1.Params:
    type: object
    properties:
      link_denom:
        type: string
        title: Native denom for LINK coin in the bank keeper
      payout_block_interval:
        type: string
        format: uint64
        title: The block number interval at which payouts are made
      module_admin:
        type: string
        title: The admin for the OCR module
  injective.ocr.v1beta1.PendingPayeeship:
    type: object
    properties:
      feed_id:
        type: string
      transmitter:
        type: string
      proposed_payee:
        type: string
  injective.ocr.v1beta1.QueryFeedConfigInfoResponse:
    type: object
    properties:
      feed_config_info:
        type: object
        properties:
          latest_config_digest:
            type: string
            format: byte
          f:
            type: integer
            format: int64
          'n':
            type: integer
            format: int64
          config_count:
            type: string
            format: uint64
            title: >-
              config_count ordinal number of this config setting among all
              config

              settings
          latest_config_block_number:
            type: string
            format: int64
      epoch_and_round:
        type: object
        properties:
          epoch:
            type: string
            format: uint64
          round:
            type: string
            format: uint64
  injective.ocr.v1beta1.QueryFeedConfigResponse:
    type: object
    properties:
      feed_config_info:
        type: object
        properties:
          latest_config_digest:
            type: string
            format: byte
          f:
            type: integer
            format: int64
          'n':
            type: integer
            format: int64
          config_count:
            type: string
            format: uint64
            title: >-
              config_count ordinal number of this config setting among all
              config

              settings
          latest_config_block_number:
            type: string
            format: int64
      feed_config:
        type: object
        properties:
          signers:
            type: array
            items:
              type: string
            title: signers ith element is address ith oracle uses to sign a report
          transmitters:
            type: array
            items:
              type: string
            title: >-
              transmitters ith element is address ith oracle uses to transmit a
              report

              via the transmit method
          f:
            type: integer
            format: int64
            title: >-
              f maximum number of faulty/dishonest oracles the protocol can
              tolerate

              while still working correctly
          onchain_config:
            type: string
            format: byte
            description: >-
              onchain_config serialized data with reporting plugin params on
              chain.
          offchain_config_version:
            type: string
            format: uint64
            title: >-
              offchain_config_version version of the serialization format used
              for

              "offchain_config" parameter
          offchain_config:
            type: string
            format: byte
            title: >-
              offchain_config serialized data used by oracles to configure their
              offchain

              operation
          module_params:
            description: feed-specific params for the Cosmos module.
            type: object
            properties:
              feed_id:
                type: string
                title: feed_id is an unique ID for the target of this config
              min_answer:
                type: string
                title: lowest answer the median of a report is allowed to be
              max_answer:
                type: string
                title: highest answer the median of a report is allowed to be
              link_per_observation:
                type: string
                title: Fixed LINK reward for each observer
              link_per_transmission:
                type: string
                title: Fixed LINK reward for transmitter
              link_denom:
                type: string
                title: Native denom for LINK coin in the bank keeper
              unique_reports:
                type: boolean
                title: Enables unique reports
              description:
                type: string
                title: >-
                  short human-readable description of observable this feed's
                  answers pertain

                  to
              feed_admin:
                type: string
                title: feed administrator
              billing_admin:
                type: string
                title: feed billing administrator
  injective.ocr.v1beta1.QueryLatestRoundResponse:
    type: object
    properties:
      latest_round_id:
        type: string
        format: uint64
      data:
        type: object
        properties:
          answer:
            type: string
          observations_timestamp:
            type: string
            format: int64
          transmission_timestamp:
            type: string
            format: int64
        title: >-
          Transmission records the median answer from the transmit transaction
          at

          time timestamp
  injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse:
    type: object
    properties:
      config_digest:
        type: string
        format: byte
      epoch_and_round:
        type: object
        properties:
          epoch:
            type: string
            format: uint64
          round:
            type: string
            format: uint64
      data:
        type: object
        properties:
          answer:
            type: string
          observations_timestamp:
            type: string
            format: int64
          transmission_timestamp:
            type: string
            format: int64
        title: >-
          Transmission records the median answer from the transmit transaction
          at

          time timestamp
  injective.ocr.v1beta1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            description: params defines all the parameters of related to OCR.
            type: object
            properties:
              link_denom:
                type: string
                title: Native denom for LINK coin in the bank keeper
              payout_block_interval:
                type: string
                format: uint64
                title: The block number interval at which payouts are made
              module_admin:
                type: string
                title: The admin for the OCR module
          feed_configs:
            type: array
            items:
              type: object
              properties:
                signers:
                  type: array
                  items:
                    type: string
                  title: >-
                    signers ith element is address ith oracle uses to sign a
                    report
                transmitters:
                  type: array
                  items:
                    type: string
                  title: >-
                    transmitters ith element is address ith oracle uses to
                    transmit a report

                    via the transmit method
                f:
                  type: integer
                  format: int64
                  title: >-
                    f maximum number of faulty/dishonest oracles the protocol
                    can tolerate

                    while still working correctly
                onchain_config:
                  type: string
                  format: byte
                  description: >-
                    onchain_config serialized data with reporting plugin params
                    on chain.
                offchain_config_version:
                  type: string
                  format: uint64
                  title: >-
                    offchain_config_version version of the serialization format
                    used for

                    "offchain_config" parameter
                offchain_config:
                  type: string
                  format: byte
                  title: >-
                    offchain_config serialized data used by oracles to configure
                    their offchain

                    operation
                module_params:
                  description: feed-specific params for the Cosmos module.
                  type: object
                  properties:
                    feed_id:
                      type: string
                      title: feed_id is an unique ID for the target of this config
                    min_answer:
                      type: string
                      title: lowest answer the median of a report is allowed to be
                    max_answer:
                      type: string
                      title: highest answer the median of a report is allowed to be
                    link_per_observation:
                      type: string
                      title: Fixed LINK reward for each observer
                    link_per_transmission:
                      type: string
                      title: Fixed LINK reward for transmitter
                    link_denom:
                      type: string
                      title: Native denom for LINK coin in the bank keeper
                    unique_reports:
                      type: boolean
                      title: Enables unique reports
                    description:
                      type: string
                      title: >-
                        short human-readable description of observable this
                        feed's answers pertain

                        to
                    feed_admin:
                      type: string
                      title: feed administrator
                    billing_admin:
                      type: string
                      title: feed billing administrator
            title: feed_configs stores all of the supported OCR feeds
          latest_epoch_and_rounds:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                epoch_and_round:
                  type: object
                  properties:
                    epoch:
                      type: string
                      format: uint64
                    round:
                      type: string
                      format: uint64
            title: >-
              latest_epoch_and_rounds stores the latest epoch and round for each
              feedId
          feed_transmissions:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                transmission:
                  type: object
                  properties:
                    answer:
                      type: string
                    observations_timestamp:
                      type: string
                      format: int64
                    transmission_timestamp:
                      type: string
                      format: int64
                  title: >-
                    Transmission records the median answer from the transmit
                    transaction at

                    time timestamp
            title: feed_transmissions stores the last transmission for each feed
          latest_aggregator_round_ids:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                aggregator_round_id:
                  type: string
                  format: uint64
            title: >-
              latest_aggregator_round_ids stores the latest aggregator round ID
              for each

              feedId
          reward_pools:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            title: reward_pools stores the reward pools
          feed_observation_counts:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                counts:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                      count:
                        type: string
                        format: uint64
            title: feed_observation_counts stores the feed observation counts
          feed_transmission_counts:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                counts:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                      count:
                        type: string
                        format: uint64
            title: feed_transmission_counts stores the feed transmission counts
          pending_payeeships:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                transmitter:
                  type: string
                proposed_payee:
                  type: string
            title: pending_payeeships stores the pending payeeships
        description: GenesisState defines the OCR module's genesis state.
  injective.ocr.v1beta1.QueryOwedAmountResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  injective.ocr.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          link_denom:
            type: string
            title: Native denom for LINK coin in the bank keeper
          payout_block_interval:
            type: string
            format: uint64
            title: The block number interval at which payouts are made
          module_admin:
            type: string
            title: The admin for the OCR module
  injective.ocr.v1beta1.RewardPool:
    type: object
    properties:
      feed_id:
        type: string
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  injective.ocr.v1beta1.Transmission:
    type: object
    properties:
      answer:
        type: string
      observations_timestamp:
        type: string
        format: int64
      transmission_timestamp:
        type: string
        format: int64
    title: |-
      Transmission records the median answer from the transmit transaction at
      time timestamp
  injective.auction.v1beta1.Bid:
    type: object
    properties:
      bidder:
        type: string
      amount:
        type: string
  injective.auction.v1beta1.GenesisState:
    type: object
    properties:
      params:
        description: params defines all the parameters of related to auction.
        type: object
        properties:
          auction_period:
            type: string
            format: int64
            title: auction_period_duration defines the auction period duration
          min_next_bid_increment_rate:
            type: string
            title: >-
              min_next_bid_increment_rate defines the minimum increment rate for
              new bids
      auction_round:
        type: string
        format: uint64
        title: current auction round
      highest_bid:
        title: current highest bid
        type: object
        properties:
          bidder:
            type: string
          amount:
            type: string
      auction_ending_timestamp:
        type: string
        format: int64
        title: auction ending timestamp
    description: GenesisState defines the auction module's genesis state.
  injective.auction.v1beta1.Params:
    type: object
    properties:
      auction_period:
        type: string
        format: int64
        title: auction_period_duration defines the auction period duration
      min_next_bid_increment_rate:
        type: string
        title: >-
          min_next_bid_increment_rate defines the minimum increment rate for new
          bids
  injective.auction.v1beta1.QueryAuctionParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          auction_period:
            type: string
            format: int64
            title: auction_period_duration defines the auction period duration
          min_next_bid_increment_rate:
            type: string
            title: >-
              min_next_bid_increment_rate defines the minimum increment rate for
              new bids
    description: |-
      QueryAuctionParamsRequest is the response type for the Query/AuctionParams
      RPC method.
  injective.auction.v1beta1.QueryCurrentAuctionBasketResponse:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: amount describes the amount put on auction
      auctionRound:
        type: string
        format: uint64
        title: auctionRound describes current auction round
      auctionClosingTime:
        type: string
        format: int64
        title: auctionClosingTime describes auction close time for the round
      highestBidder:
        type: string
        title: highestBidder describes highest bidder on current round
      highestBidAmount:
        type: string
        title: highestBidAmount describes highest bid amount on current round
    description: |-
      QueryCurrentAuctionBasketResponse is the response type for the
      Query/CurrentAuctionBasket RPC method.
  injective.auction.v1beta1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            description: params defines all the parameters of related to auction.
            type: object
            properties:
              auction_period:
                type: string
                format: int64
                title: auction_period_duration defines the auction period duration
              min_next_bid_increment_rate:
                type: string
                title: >-
                  min_next_bid_increment_rate defines the minimum increment rate
                  for new bids
          auction_round:
            type: string
            format: uint64
            title: current auction round
          highest_bid:
            title: current highest bid
            type: object
            properties:
              bidder:
                type: string
              amount:
                type: string
          auction_ending_timestamp:
            type: string
            format: int64
            title: auction ending timestamp
        description: GenesisState defines the auction module's genesis state.
    description: |-
      QueryModuleStateResponse is the response type for the
      Query/AuctionModuleState RPC method.
  injective.oracle.v1beta1.BandIBCParams:
    type: object
    properties:
      band_ibc_enabled:
        type: boolean
        title: true if Band IBC should be enabled
      ibc_request_interval:
        type: string
        format: int64
        title: block request interval to send Band IBC prices
      ibc_source_channel:
        type: string
        title: band IBC source channel
      ibc_version:
        type: string
        title: band IBC version
      ibc_port_id:
        type: string
        title: band IBC portID
      legacy_oracle_ids:
        type: array
        items:
          type: string
          format: int64
        title: legacy oracle scheme ids
  injective.oracle.v1beta1.BandOracleRequest:
    type: object
    properties:
      request_id:
        type: string
        format: uint64
        title: Unique Identifier for band ibc oracle request
      oracle_script_id:
        type: string
        format: int64
        description: |-
          OracleScriptID is the unique identifier of the oracle script to be
          executed.
      symbols:
        type: array
        items:
          type: string
        title: Symbols is the list of symbols to prepare in the calldata
      ask_count:
        type: string
        format: uint64
        description: >-
          AskCount is the number of validators that are requested to respond to
          this

          oracle request. Higher value means more security, at a higher gas
          cost.
      min_count:
        type: string
        format: uint64
        description: >-
          MinCount is the minimum number of validators necessary for the request
          to

          proceed to the execution phase. Higher value means more security, at
          the

          cost of liveness.
      fee_limit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: |-
          FeeLimit is the maximum tokens that will be paid to all data source
          providers.
      prepare_gas:
        type: string
        format: uint64
        title: PrepareGas is amount of gas to pay to prepare raw requests
      execute_gas:
        type: string
        format: uint64
        title: ExecuteGas is amount of gas to reserve for executing
      min_source_count:
        type: string
        format: uint64
        title: >-
          MinSourceCount is the minimum number of data sources that must be used
          by

          each validator
  injective.oracle.v1beta1.BandPriceState:
    type: object
    properties:
      symbol:
        type: string
      rate:
        type: string
      resolve_time:
        type: string
        format: uint64
      request_ID:
        type: string
        format: uint64
      price_state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
  injective.oracle.v1beta1.CalldataRecord:
    type: object
    properties:
      client_id:
        type: string
        format: uint64
      calldata:
        type: string
        format: byte
  injective.oracle.v1beta1.ChainlinkPriceState:
    type: object
    properties:
      feed_id:
        type: string
      answer:
        type: string
      timestamp:
        type: string
        format: uint64
      price_state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
  injective.oracle.v1beta1.CoinbasePriceState:
    type: object
    properties:
      kind:
        type: string
        title: kind should always be "prices"
      timestamp:
        type: string
        format: uint64
        title: timestamp of the when the price was signed by coinbase
      key:
        type: string
        title: the symbol of the price, e.g. BTC
      value:
        type: string
        format: uint64
        title: the value of the price scaled by 1e6
      price_state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
        title: the price state
  injective.oracle.v1beta1.GenesisState:
    type: object
    properties:
      params:
        description: params defines all the parameters of related to oracle.
        type: object
        properties:
          pyth_contract:
            type: string
      band_relayers:
        type: array
        items:
          type: string
      band_price_states:
        type: array
        items:
          type: object
          properties:
            symbol:
              type: string
            rate:
              type: string
            resolve_time:
              type: string
              format: uint64
            request_ID:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
      price_feed_price_states:
        type: array
        items:
          type: object
          properties:
            base:
              type: string
            quote:
              type: string
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
            relayers:
              type: array
              items:
                type: string
      coinbase_price_states:
        type: array
        items:
          type: object
          properties:
            kind:
              type: string
              title: kind should always be "prices"
            timestamp:
              type: string
              format: uint64
              title: timestamp of the when the price was signed by coinbase
            key:
              type: string
              title: the symbol of the price, e.g. BTC
            value:
              type: string
              format: uint64
              title: the value of the price scaled by 1e6
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
              title: the price state
      band_ibc_price_states:
        type: array
        items:
          type: object
          properties:
            symbol:
              type: string
            rate:
              type: string
            resolve_time:
              type: string
              format: uint64
            request_ID:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
      band_ibc_oracle_requests:
        type: array
        items:
          type: object
          properties:
            request_id:
              type: string
              format: uint64
              title: Unique Identifier for band ibc oracle request
            oracle_script_id:
              type: string
              format: int64
              description: >-
                OracleScriptID is the unique identifier of the oracle script to
                be

                executed.
            symbols:
              type: array
              items:
                type: string
              title: Symbols is the list of symbols to prepare in the calldata
            ask_count:
              type: string
              format: uint64
              description: >-
                AskCount is the number of validators that are requested to
                respond to this

                oracle request. Higher value means more security, at a higher
                gas cost.
            min_count:
              type: string
              format: uint64
              description: >-
                MinCount is the minimum number of validators necessary for the
                request to

                proceed to the execution phase. Higher value means more
                security, at the

                cost of liveness.
            fee_limit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: >-
                FeeLimit is the maximum tokens that will be paid to all data
                source

                providers.
            prepare_gas:
              type: string
              format: uint64
              title: PrepareGas is amount of gas to pay to prepare raw requests
            execute_gas:
              type: string
              format: uint64
              title: ExecuteGas is amount of gas to reserve for executing
            min_source_count:
              type: string
              format: uint64
              title: >-
                MinSourceCount is the minimum number of data sources that must
                be used by

                each validator
      band_ibc_params:
        type: object
        properties:
          band_ibc_enabled:
            type: boolean
            title: true if Band IBC should be enabled
          ibc_request_interval:
            type: string
            format: int64
            title: block request interval to send Band IBC prices
          ibc_source_channel:
            type: string
            title: band IBC source channel
          ibc_version:
            type: string
            title: band IBC version
          ibc_port_id:
            type: string
            title: band IBC portID
          legacy_oracle_ids:
            type: array
            items:
              type: string
              format: int64
            title: legacy oracle scheme ids
      band_ibc_latest_client_id:
        type: string
        format: uint64
      calldata_records:
        type: array
        items:
          type: object
          properties:
            client_id:
              type: string
              format: uint64
            calldata:
              type: string
              format: byte
      band_ibc_latest_request_id:
        type: string
        format: uint64
      chainlink_price_states:
        type: array
        items:
          type: object
          properties:
            feed_id:
              type: string
            answer:
              type: string
            timestamp:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
      historical_price_records:
        type: array
        items:
          type: object
          properties:
            oracle:
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            symbol_id:
              type: string
            latest_price_records:
              type: array
              items:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: int64
                  price:
                    type: string
      provider_states:
        type: array
        items:
          type: object
          properties:
            provider_info:
              type: object
              properties:
                provider:
                  type: string
                relayers:
                  type: array
                  items:
                    type: string
            provider_price_states:
              type: array
              items:
                type: object
                properties:
                  symbol:
                    type: string
                  state:
                    type: object
                    properties:
                      price:
                        type: string
                      cumulative_price:
                        type: string
                      timestamp:
                        type: string
                        format: int64
      pyth_price_states:
        type: array
        items:
          type: object
          properties:
            price_id:
              type: string
            ema_price:
              type: string
            ema_conf:
              type: string
            conf:
              type: string
            publish_time:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
    description: GenesisState defines the oracle module's genesis state.
  injective.oracle.v1beta1.OracleHistoryOptions:
    type: object
    properties:
      max_age:
        type: string
        format: uint64
        description: >-
          MaxAge restricts the oracle price records oldest age in seconds from
          the

          current block time to consider. A value of 0 means use all the records

          present on the chain.
      include_raw_history:
        type: boolean
        title: |-
          If IncludeRawHistory is true, the raw underlying data used for the
          computation is included in the response
      include_metadata:
        type: boolean
        title: >-
          If IncludeMetadata is true, metadata on the computation is included in
          the

          response
  injective.oracle.v1beta1.OracleInfo:
    type: object
    properties:
      symbol:
        type: string
      oracle_type:
        type: string
        enum:
          - Unspecified
          - Band
          - PriceFeed
          - Coinbase
          - Chainlink
          - Razor
          - Dia
          - API3
          - Uma
          - Pyth
          - BandIBC
          - Provider
        default: Unspecified
  injective.oracle.v1beta1.Params:
    type: object
    properties:
      pyth_contract:
        type: string
  injective.oracle.v1beta1.PriceFeedState:
    type: object
    properties:
      base:
        type: string
      quote:
        type: string
      price_state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
      relayers:
        type: array
        items:
          type: string
  injective.oracle.v1beta1.PricePairState:
    type: object
    properties:
      pair_price:
        type: string
      base_price:
        type: string
      quote_price:
        type: string
      base_cumulative_price:
        type: string
      quote_cumulative_price:
        type: string
      base_timestamp:
        type: string
        format: int64
      quote_timestamp:
        type: string
        format: int64
  injective.oracle.v1beta1.PriceRecord:
    type: object
    properties:
      timestamp:
        type: string
        format: int64
      price:
        type: string
  injective.oracle.v1beta1.PriceRecords:
    type: object
    properties:
      oracle:
        type: string
        enum:
          - Unspecified
          - Band
          - PriceFeed
          - Coinbase
          - Chainlink
          - Razor
          - Dia
          - API3
          - Uma
          - Pyth
          - BandIBC
          - Provider
        default: Unspecified
      symbol_id:
        type: string
      latest_price_records:
        type: array
        items:
          type: object
          properties:
            timestamp:
              type: string
              format: int64
            price:
              type: string
  injective.oracle.v1beta1.PriceState:
    type: object
    properties:
      price:
        type: string
      cumulative_price:
        type: string
      timestamp:
        type: string
        format: int64
  injective.oracle.v1beta1.ProviderInfo:
    type: object
    properties:
      provider:
        type: string
      relayers:
        type: array
        items:
          type: string
  injective.oracle.v1beta1.ProviderPriceState:
    type: object
    properties:
      symbol:
        type: string
      state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
  injective.oracle.v1beta1.ProviderState:
    type: object
    properties:
      provider_info:
        type: object
        properties:
          provider:
            type: string
          relayers:
            type: array
            items:
              type: string
      provider_price_states:
        type: array
        items:
          type: object
          properties:
            symbol:
              type: string
            state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
  injective.oracle.v1beta1.PythPriceState:
    type: object
    properties:
      price_id:
        type: string
      ema_price:
        type: string
      ema_conf:
        type: string
      conf:
        type: string
      publish_time:
        type: string
        format: uint64
      price_state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
  injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse:
    type: object
    properties:
      price_states:
        type: array
        items:
          type: object
          properties:
            symbol:
              type: string
            rate:
              type: string
            resolve_time:
              type: string
              format: uint64
            request_ID:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
    description: |-
      QueryBandIBCPriceStatesResponse is the response type for the
      Query/BandIBCPriceStates RPC method.
  injective.oracle.v1beta1.QueryBandPriceStatesResponse:
    type: object
    properties:
      price_states:
        type: array
        items:
          type: object
          properties:
            symbol:
              type: string
            rate:
              type: string
            resolve_time:
              type: string
              format: uint64
            request_ID:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
    description: |-
      QueryBandPriceStatesResponse is the response type for the
      Query/BandPriceStates RPC method.
  injective.oracle.v1beta1.QueryBandRelayersResponse:
    type: object
    properties:
      relayers:
        type: array
        items:
          type: string
    description: >-
      QueryBandRelayersResponse is the response type for the Query/BandRelayers
      RPC

      method.
  injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse:
    type: object
    properties:
      price_states:
        type: array
        items:
          type: object
          properties:
            kind:
              type: string
              title: kind should always be "prices"
            timestamp:
              type: string
              format: uint64
              title: timestamp of the when the price was signed by coinbase
            key:
              type: string
              title: the symbol of the price, e.g. BTC
            value:
              type: string
              format: uint64
              title: the value of the price scaled by 1e6
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
              title: the price state
    description: |-
      QueryCoinbasePriceStatesResponse is the response type for the
      Query/CoinbasePriceStates RPC method.
  injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse:
    type: object
    properties:
      price_records:
        type: array
        items:
          type: object
          properties:
            oracle:
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            symbol_id:
              type: string
            latest_price_records:
              type: array
              items:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: int64
                  price:
                    type: string
  injective.oracle.v1beta1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            description: params defines all the parameters of related to oracle.
            type: object
            properties:
              pyth_contract:
                type: string
          band_relayers:
            type: array
            items:
              type: string
          band_price_states:
            type: array
            items:
              type: object
              properties:
                symbol:
                  type: string
                rate:
                  type: string
                resolve_time:
                  type: string
                  format: uint64
                request_ID:
                  type: string
                  format: uint64
                price_state:
                  type: object
                  properties:
                    price:
                      type: string
                    cumulative_price:
                      type: string
                    timestamp:
                      type: string
                      format: int64
          price_feed_price_states:
            type: array
            items:
              type: object
              properties:
                base:
                  type: string
                quote:
                  type: string
                price_state:
                  type: object
                  properties:
                    price:
                      type: string
                    cumulative_price:
                      type: string
                    timestamp:
                      type: string
                      format: int64
                relayers:
                  type: array
                  items:
                    type: string
          coinbase_price_states:
            type: array
            items:
              type: object
              properties:
                kind:
                  type: string
                  title: kind should always be "prices"
                timestamp:
                  type: string
                  format: uint64
                  title: timestamp of the when the price was signed by coinbase
                key:
                  type: string
                  title: the symbol of the price, e.g. BTC
                value:
                  type: string
                  format: uint64
                  title: the value of the price scaled by 1e6
                price_state:
                  type: object
                  properties:
                    price:
                      type: string
                    cumulative_price:
                      type: string
                    timestamp:
                      type: string
                      format: int64
                  title: the price state
          band_ibc_price_states:
            type: array
            items:
              type: object
              properties:
                symbol:
                  type: string
                rate:
                  type: string
                resolve_time:
                  type: string
                  format: uint64
                request_ID:
                  type: string
                  format: uint64
                price_state:
                  type: object
                  properties:
                    price:
                      type: string
                    cumulative_price:
                      type: string
                    timestamp:
                      type: string
                      format: int64
          band_ibc_oracle_requests:
            type: array
            items:
              type: object
              properties:
                request_id:
                  type: string
                  format: uint64
                  title: Unique Identifier for band ibc oracle request
                oracle_script_id:
                  type: string
                  format: int64
                  description: >-
                    OracleScriptID is the unique identifier of the oracle script
                    to be

                    executed.
                symbols:
                  type: array
                  items:
                    type: string
                  title: Symbols is the list of symbols to prepare in the calldata
                ask_count:
                  type: string
                  format: uint64
                  description: >-
                    AskCount is the number of validators that are requested to
                    respond to this

                    oracle request. Higher value means more security, at a
                    higher gas cost.
                min_count:
                  type: string
                  format: uint64
                  description: >-
                    MinCount is the minimum number of validators necessary for
                    the request to

                    proceed to the execution phase. Higher value means more
                    security, at the

                    cost of liveness.
                fee_limit:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  description: >-
                    FeeLimit is the maximum tokens that will be paid to all data
                    source

                    providers.
                prepare_gas:
                  type: string
                  format: uint64
                  title: PrepareGas is amount of gas to pay to prepare raw requests
                execute_gas:
                  type: string
                  format: uint64
                  title: ExecuteGas is amount of gas to reserve for executing
                min_source_count:
                  type: string
                  format: uint64
                  title: >-
                    MinSourceCount is the minimum number of data sources that
                    must be used by

                    each validator
          band_ibc_params:
            type: object
            properties:
              band_ibc_enabled:
                type: boolean
                title: true if Band IBC should be enabled
              ibc_request_interval:
                type: string
                format: int64
                title: block request interval to send Band IBC prices
              ibc_source_channel:
                type: string
                title: band IBC source channel
              ibc_version:
                type: string
                title: band IBC version
              ibc_port_id:
                type: string
                title: band IBC portID
              legacy_oracle_ids:
                type: array
                items:
                  type: string
                  format: int64
                title: legacy oracle scheme ids
          band_ibc_latest_client_id:
            type: string
            format: uint64
          calldata_records:
            type: array
            items:
              type: object
              properties:
                client_id:
                  type: string
                  format: uint64
                calldata:
                  type: string
                  format: byte
          band_ibc_latest_request_id:
            type: string
            format: uint64
          chainlink_price_states:
            type: array
            items:
              type: object
              properties:
                feed_id:
                  type: string
                answer:
                  type: string
                timestamp:
                  type: string
                  format: uint64
                price_state:
                  type: object
                  properties:
                    price:
                      type: string
                    cumulative_price:
                      type: string
                    timestamp:
                      type: string
                      format: int64
          historical_price_records:
            type: array
            items:
              type: object
              properties:
                oracle:
                  type: string
                  enum:
                    - Unspecified
                    - Band
                    - PriceFeed
                    - Coinbase
                    - Chainlink
                    - Razor
                    - Dia
                    - API3
                    - Uma
                    - Pyth
                    - BandIBC
                    - Provider
                  default: Unspecified
                symbol_id:
                  type: string
                latest_price_records:
                  type: array
                  items:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        format: int64
                      price:
                        type: string
          provider_states:
            type: array
            items:
              type: object
              properties:
                provider_info:
                  type: object
                  properties:
                    provider:
                      type: string
                    relayers:
                      type: array
                      items:
                        type: string
                provider_price_states:
                  type: array
                  items:
                    type: object
                    properties:
                      symbol:
                        type: string
                      state:
                        type: object
                        properties:
                          price:
                            type: string
                          cumulative_price:
                            type: string
                          timestamp:
                            type: string
                            format: int64
          pyth_price_states:
            type: array
            items:
              type: object
              properties:
                price_id:
                  type: string
                ema_price:
                  type: string
                ema_conf:
                  type: string
                conf:
                  type: string
                publish_time:
                  type: string
                  format: uint64
                price_state:
                  type: object
                  properties:
                    price:
                      type: string
                    cumulative_price:
                      type: string
                    timestamp:
                      type: string
                      format: int64
        description: GenesisState defines the oracle module's genesis state.
    description: >-
      QueryModuleStateResponse is the response type for the
      Query/OracleModuleState

      RPC method.
  injective.oracle.v1beta1.QueryOraclePriceResponse:
    type: object
    properties:
      price_pair_state:
        type: object
        properties:
          pair_price:
            type: string
          base_price:
            type: string
          quote_price:
            type: string
          base_cumulative_price:
            type: string
          quote_cumulative_price:
            type: string
          base_timestamp:
            type: string
            format: int64
          quote_timestamp:
            type: string
            format: int64
    description: >-
      QueryOraclePriceResponse is the response type for the Query/OraclePrice
      RPC

      method.
  injective.oracle.v1beta1.QueryOracleProviderPricesResponse:
    type: object
    properties:
      providerState:
        type: array
        items:
          type: object
          properties:
            provider_info:
              type: object
              properties:
                provider:
                  type: string
                relayers:
                  type: array
                  items:
                    type: string
            provider_price_states:
              type: array
              items:
                type: object
                properties:
                  symbol:
                    type: string
                  state:
                    type: object
                    properties:
                      price:
                        type: string
                      cumulative_price:
                        type: string
                      timestamp:
                        type: string
                        format: int64
  injective.oracle.v1beta1.QueryOracleProvidersInfoResponse:
    type: object
    properties:
      providers:
        type: array
        items:
          type: object
          properties:
            provider:
              type: string
            relayers:
              type: array
              items:
                type: string
  injective.oracle.v1beta1.QueryOracleVolatilityResponse:
    type: object
    properties:
      volatility:
        type: string
      history_metadata:
        type: object
        properties:
          group_count:
            type: integer
            format: int64
            title: >-
              GroupCount refers to the number of groups used. Equals
              RecordsSampleSize if

              no grouping is used
          records_sample_size:
            type: integer
            format: int64
            description: RecordsSampleSize refers to the total number of records used.
          mean:
            type: string
            title: >-
              Mean refers to the arithmetic mean

              For trades, the mean is the VWAP computed over the grouped trade
              records ∑

              (price * quantity) / ∑ quantity For oracle prices, the mean is
              computed

              over the price records ∑ (price) / prices_count
          twap:
            type: string
            title: >-
              TWAP refers to the time-weighted average price which equals ∑
              (price_i *

              ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
          first_timestamp:
            type: string
            format: int64
            title: FirstTimestamp is the timestamp of the oldest record considered
          last_timestamp:
            type: string
            format: int64
            title: LastTimestamp is the timestamp of the youngest record considered
          min_price:
            type: string
            title: MinPrice refers to the smallest individual raw price considered
          max_price:
            type: string
            title: MaxPrice refers to the largest individual raw price considered
          median_price:
            type: string
            title: MedianPrice refers to the median individual raw price considered
        title: |-
          MetadataStatistics refers to the metadata summary statistics of the
          historical sample considered
      raw_history:
        type: array
        items:
          type: object
          properties:
            timestamp:
              type: string
              format: int64
            price:
              type: string
    description: >-
      QueryOracleVolatilityResponse is the response type for
      Query/OracleVolatility

      RPC method.
  injective.oracle.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          pyth_contract:
            type: string
    description: >-
      QueryOracleParamsResponse is the response type for the Query/OracleParams
      RPC

      method.
  injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse:
    type: object
    properties:
      price_states:
        type: array
        items:
          type: object
          properties:
            base:
              type: string
            quote:
              type: string
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
            relayers:
              type: array
              items:
                type: string
    description: |-
      QueryPriceFeedPriceStatesResponse is the response type for the
      Query/PriceFeedPriceStates RPC method.
  injective.oracle.v1beta1.QueryProviderPriceStateResponse:
    type: object
    properties:
      price_state:
        type: object
        properties:
          price:
            type: string
          cumulative_price:
            type: string
          timestamp:
            type: string
            format: int64
    description: |-
      QueryProviderPriceStatesResponse is the response type for the
      Query/ProviderPriceStates RPC method.
  injective.oracle.v1beta1.QueryPythPriceResponse:
    type: object
    properties:
      price_state:
        type: object
        properties:
          price_id:
            type: string
          ema_price:
            type: string
          ema_conf:
            type: string
          conf:
            type: string
          publish_time:
            type: string
            format: uint64
          price_state:
            type: object
            properties:
              price:
                type: string
              cumulative_price:
                type: string
              timestamp:
                type: string
                format: int64
  injective.oracle.v1beta1.QueryPythPriceStatesResponse:
    type: object
    properties:
      price_states:
        type: array
        items:
          type: object
          properties:
            price_id:
              type: string
            ema_price:
              type: string
            ema_conf:
              type: string
            conf:
              type: string
            publish_time:
              type: string
              format: uint64
            price_state:
              type: object
              properties:
                price:
                  type: string
                cumulative_price:
                  type: string
                timestamp:
                  type: string
                  format: int64
    description: |-
      QueryPythPriceStatesResponse is the response type for the
      Query/CoinbasePriceStates RPC method.
  injective.insurance.v1beta1.GenesisState:
    type: object
    properties:
      params:
        description: params defines all the parameters of related to insurance.
        type: object
        properties:
          default_redemption_notice_period_duration:
            type: string
            title: >-
              default_redemption_notice_period_duration defines the default
              minimum

              notice period duration that must pass after an underwriter sends a

              redemption request before the underwriter can claim his tokens
      insurance_funds:
        type: array
        items:
          type: object
          properties:
            deposit_denom:
              type: string
              title: deposit denomination for the given insurance fund
            insurance_pool_token_denom:
              type: string
              title: >-
                insurance fund pool token denomination for the given insurance
                fund
            redemption_notice_period_duration:
              type: string
              title: >-
                redemption_notice_period_duration defines the minimum notice
                period

                duration that must pass after an underwriter sends a redemption
                request

                before the underwriter can claim his tokens
            balance:
              type: string
              title: balance of fund
            total_share:
              type: string
              title: total share tokens minted
            market_id:
              type: string
              title: marketID of the derivative market
            market_ticker:
              type: string
              title: ticker of the derivative market
            oracle_base:
              type: string
              description: >-
                Oracle base currency of the derivative market OR the oracle
                symbol for the

                binary options market.
            oracle_quote:
              type: string
              description: >-
                Oracle quote currency of the derivative market OR the oracle
                provider for

                the binary options market.
            oracle_type:
              title: Oracle type of the binary options or derivative market
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            expiry:
              type: string
              format: int64
              description: >-
                Expiration time of the derivative market. Should be -1 for
                perpetual or -2

                for binary options markets.
        title: |-
          insurance_funds describes the insurance funds available for derivative
          markets
      redemption_schedule:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              title: id of redemption schedule
            marketId:
              type: string
              title: marketId of insurance fund for the redemption
            redeemer:
              type: string
              title: address of the redeemer
            claimable_redemption_time:
              type: string
              format: date-time
              title: the time after which the redemption can be claimed
            redemption_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: the insurance_pool_token amount to redeem
        title: redemption_schedule describes the redemption requests pending
      next_share_denom_id:
        type: string
        format: uint64
        title: >-
          next_share_denom_id describes the next share denom id to be used for
          newly

          creating insurance fund incremented by 1 per insurance fund creation
      next_redemption_schedule_id:
        type: string
        format: uint64
        title: >-
          next_redemption_schedule_id describes next redemption schedule id to
          be

          used for next schedule incremented by 1 per redemption request
    description: GenesisState defines the insurance module's genesis state.
  injective.insurance.v1beta1.InsuranceFund:
    type: object
    properties:
      deposit_denom:
        type: string
        title: deposit denomination for the given insurance fund
      insurance_pool_token_denom:
        type: string
        title: insurance fund pool token denomination for the given insurance fund
      redemption_notice_period_duration:
        type: string
        title: >-
          redemption_notice_period_duration defines the minimum notice period

          duration that must pass after an underwriter sends a redemption
          request

          before the underwriter can claim his tokens
      balance:
        type: string
        title: balance of fund
      total_share:
        type: string
        title: total share tokens minted
      market_id:
        type: string
        title: marketID of the derivative market
      market_ticker:
        type: string
        title: ticker of the derivative market
      oracle_base:
        type: string
        description: >-
          Oracle base currency of the derivative market OR the oracle symbol for
          the

          binary options market.
      oracle_quote:
        type: string
        description: >-
          Oracle quote currency of the derivative market OR the oracle provider
          for

          the binary options market.
      oracle_type:
        title: Oracle type of the binary options or derivative market
        type: string
        enum:
          - Unspecified
          - Band
          - PriceFeed
          - Coinbase
          - Chainlink
          - Razor
          - Dia
          - API3
          - Uma
          - Pyth
          - BandIBC
          - Provider
        default: Unspecified
      expiry:
        type: string
        format: int64
        description: >-
          Expiration time of the derivative market. Should be -1 for perpetual
          or -2

          for binary options markets.
  injective.insurance.v1beta1.Params:
    type: object
    properties:
      default_redemption_notice_period_duration:
        type: string
        title: |-
          default_redemption_notice_period_duration defines the default minimum
          notice period duration that must pass after an underwriter sends a
          redemption request before the underwriter can claim his tokens
  injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: |-
      QueryEstimatedRedemptionsResponse is the response type for the
      Query/EstimatedRedemptions RPC method.
  injective.insurance.v1beta1.QueryInsuranceFundResponse:
    type: object
    properties:
      fund:
        type: object
        properties:
          deposit_denom:
            type: string
            title: deposit denomination for the given insurance fund
          insurance_pool_token_denom:
            type: string
            title: >-
              insurance fund pool token denomination for the given insurance
              fund
          redemption_notice_period_duration:
            type: string
            title: >-
              redemption_notice_period_duration defines the minimum notice
              period

              duration that must pass after an underwriter sends a redemption
              request

              before the underwriter can claim his tokens
          balance:
            type: string
            title: balance of fund
          total_share:
            type: string
            title: total share tokens minted
          market_id:
            type: string
            title: marketID of the derivative market
          market_ticker:
            type: string
            title: ticker of the derivative market
          oracle_base:
            type: string
            description: >-
              Oracle base currency of the derivative market OR the oracle symbol
              for the

              binary options market.
          oracle_quote:
            type: string
            description: >-
              Oracle quote currency of the derivative market OR the oracle
              provider for

              the binary options market.
          oracle_type:
            title: Oracle type of the binary options or derivative market
            type: string
            enum:
              - Unspecified
              - Band
              - PriceFeed
              - Coinbase
              - Chainlink
              - Razor
              - Dia
              - API3
              - Uma
              - Pyth
              - BandIBC
              - Provider
            default: Unspecified
          expiry:
            type: string
            format: int64
            description: >-
              Expiration time of the derivative market. Should be -1 for
              perpetual or -2

              for binary options markets.
    description: >-
      QueryInsuranceFundResponse is the response type for the
      Query/InsuranceFund

      RPC method.
  injective.insurance.v1beta1.QueryInsuranceFundsResponse:
    type: object
    properties:
      funds:
        type: array
        items:
          type: object
          properties:
            deposit_denom:
              type: string
              title: deposit denomination for the given insurance fund
            insurance_pool_token_denom:
              type: string
              title: >-
                insurance fund pool token denomination for the given insurance
                fund
            redemption_notice_period_duration:
              type: string
              title: >-
                redemption_notice_period_duration defines the minimum notice
                period

                duration that must pass after an underwriter sends a redemption
                request

                before the underwriter can claim his tokens
            balance:
              type: string
              title: balance of fund
            total_share:
              type: string
              title: total share tokens minted
            market_id:
              type: string
              title: marketID of the derivative market
            market_ticker:
              type: string
              title: ticker of the derivative market
            oracle_base:
              type: string
              description: >-
                Oracle base currency of the derivative market OR the oracle
                symbol for the

                binary options market.
            oracle_quote:
              type: string
              description: >-
                Oracle quote currency of the derivative market OR the oracle
                provider for

                the binary options market.
            oracle_type:
              title: Oracle type of the binary options or derivative market
              type: string
              enum:
                - Unspecified
                - Band
                - PriceFeed
                - Coinbase
                - Chainlink
                - Razor
                - Dia
                - API3
                - Uma
                - Pyth
                - BandIBC
                - Provider
              default: Unspecified
            expiry:
              type: string
              format: int64
              description: >-
                Expiration time of the derivative market. Should be -1 for
                perpetual or -2

                for binary options markets.
    description: >-
      QueryInsuranceFundsResponse is the response type for the
      Query/InsuranceFunds

      RPC method.
  injective.insurance.v1beta1.QueryInsuranceParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          default_redemption_notice_period_duration:
            type: string
            title: >-
              default_redemption_notice_period_duration defines the default
              minimum

              notice period duration that must pass after an underwriter sends a

              redemption request before the underwriter can claim his tokens
    description: |-
      QueryInsuranceParamsRequest is the response type for the
      Query/InsuranceParams RPC method.
  injective.insurance.v1beta1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            description: params defines all the parameters of related to insurance.
            type: object
            properties:
              default_redemption_notice_period_duration:
                type: string
                title: >-
                  default_redemption_notice_period_duration defines the default
                  minimum

                  notice period duration that must pass after an underwriter
                  sends a

                  redemption request before the underwriter can claim his tokens
          insurance_funds:
            type: array
            items:
              type: object
              properties:
                deposit_denom:
                  type: string
                  title: deposit denomination for the given insurance fund
                insurance_pool_token_denom:
                  type: string
                  title: >-
                    insurance fund pool token denomination for the given
                    insurance fund
                redemption_notice_period_duration:
                  type: string
                  title: >-
                    redemption_notice_period_duration defines the minimum notice
                    period

                    duration that must pass after an underwriter sends a
                    redemption request

                    before the underwriter can claim his tokens
                balance:
                  type: string
                  title: balance of fund
                total_share:
                  type: string
                  title: total share tokens minted
                market_id:
                  type: string
                  title: marketID of the derivative market
                market_ticker:
                  type: string
                  title: ticker of the derivative market
                oracle_base:
                  type: string
                  description: >-
                    Oracle base currency of the derivative market OR the oracle
                    symbol for the

                    binary options market.
                oracle_quote:
                  type: string
                  description: >-
                    Oracle quote currency of the derivative market OR the oracle
                    provider for

                    the binary options market.
                oracle_type:
                  title: Oracle type of the binary options or derivative market
                  type: string
                  enum:
                    - Unspecified
                    - Band
                    - PriceFeed
                    - Coinbase
                    - Chainlink
                    - Razor
                    - Dia
                    - API3
                    - Uma
                    - Pyth
                    - BandIBC
                    - Provider
                  default: Unspecified
                expiry:
                  type: string
                  format: int64
                  description: >-
                    Expiration time of the derivative market. Should be -1 for
                    perpetual or -2

                    for binary options markets.
            title: >-
              insurance_funds describes the insurance funds available for
              derivative

              markets
          redemption_schedule:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                  title: id of redemption schedule
                marketId:
                  type: string
                  title: marketId of insurance fund for the redemption
                redeemer:
                  type: string
                  title: address of the redeemer
                claimable_redemption_time:
                  type: string
                  format: date-time
                  title: the time after which the redemption can be claimed
                redemption_amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  title: the insurance_pool_token amount to redeem
            title: redemption_schedule describes the redemption requests pending
          next_share_denom_id:
            type: string
            format: uint64
            title: >-
              next_share_denom_id describes the next share denom id to be used
              for newly

              creating insurance fund incremented by 1 per insurance fund
              creation
          next_redemption_schedule_id:
            type: string
            format: uint64
            title: >-
              next_redemption_schedule_id describes next redemption schedule id
              to be

              used for next schedule incremented by 1 per redemption request
        description: GenesisState defines the insurance module's genesis state.
    description: |-
      QueryModuleStateResponse is the response type for the
      Query/InsuranceModuleState RPC method.
  injective.insurance.v1beta1.QueryPendingRedemptionsResponse:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: |-
      QueryPendingRedemptionsResponse is the response type for the
      Query/PendingRedemptions RPC method.
  injective.insurance.v1beta1.RedemptionSchedule:
    type: object
    properties:
      id:
        type: string
        format: uint64
        title: id of redemption schedule
      marketId:
        type: string
        title: marketId of insurance fund for the redemption
      redeemer:
        type: string
        title: address of the redeemer
      claimable_redemption_time:
        type: string
        format: date-time
        title: the time after which the redemption can be claimed
      redemption_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: the insurance_pool_token amount to redeem
  injective.peggy.v1.Attestation:
    type: object
    properties:
      observed:
        type: boolean
      votes:
        type: array
        items:
          type: string
      height:
        type: string
        format: uint64
      claim:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      The actual content of the claims is passed in with the transaction making
      the

      claim and then passed through the call stack alongside the attestation
      while

      it is processed the key in which the attestation is stored is keyed on the

      exact details of the claim but there is no reason to store those exact

      details becuause the next message sender will kindly provide you with
      them.
    title: >-
      Attestation is an aggregate of `claims` that eventually becomes `observed`
      by

      all orchestrators

      EVENT_NONCE:

      EventNonce a nonce provided by the peggy contract that is unique per event

      fired These event nonces must be relayed in order. This is a correctness

      issue, if relaying out of order transaction replay attacks become possible

      OBSERVED:

      Observed indicates that >67% of validators have attested to the event,

      and that the event should be executed by the peggy state machine
  injective.peggy.v1.BatchFees:
    type: object
    properties:
      token:
        type: string
      total_fees:
        type: string
  injective.peggy.v1.BridgeValidator:
    type: object
    properties:
      power:
        type: string
        format: uint64
      ethereum_address:
        type: string
    title: BridgeValidator represents a validator's ETH address and its power
  injective.peggy.v1.ERC20ToDenom:
    type: object
    properties:
      erc20:
        type: string
      denom:
        type: string
    title: |-
      This records the relationship between an ERC20 token and the denom
      of the corresponding Cosmos originated asset
  injective.peggy.v1.ERC20Token:
    type: object
    properties:
      contract:
        type: string
      amount:
        type: string
    title: >-
      ERC20Token unique identifier for an Ethereum ERC20 token.

      CONTRACT:

      The contract address on ETH of the token, this could be a Cosmos

      originated token, if so it will be the ERC20 address of the representation

      (note: developers should look up the token symbol using the address on ETH
      to

      display for UI)
  injective.peggy.v1.GenesisState:
    type: object
    properties:
      params:
        type: object
        properties:
          peggy_id:
            type: string
          contract_source_hash:
            type: string
          bridge_ethereum_address:
            type: string
          bridge_chain_id:
            type: string
            format: uint64
          signed_valsets_window:
            type: string
            format: uint64
          signed_batches_window:
            type: string
            format: uint64
          signed_claims_window:
            type: string
            format: uint64
          target_batch_timeout:
            type: string
            format: uint64
          average_block_time:
            type: string
            format: uint64
          average_ethereum_block_time:
            type: string
            format: uint64
          slash_fraction_valset:
            type: string
            format: byte
          slash_fraction_batch:
            type: string
            format: byte
          slash_fraction_claim:
            type: string
            format: byte
          slash_fraction_conflicting_claim:
            type: string
            format: byte
          unbond_slashing_valsets_window:
            type: string
            format: uint64
          slash_fraction_bad_eth_signature:
            type: string
            format: byte
          cosmos_coin_denom:
            type: string
          cosmos_coin_erc20_contract:
            type: string
          claim_slashing_enabled:
            type: boolean
          bridge_contract_start_height:
            type: string
            format: uint64
          valset_reward:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
      last_observed_nonce:
        type: string
        format: uint64
      valsets:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            members:
              type: array
              items:
                type: object
                properties:
                  power:
                    type: string
                    format: uint64
                  ethereum_address:
                    type: string
                title: >-
                  BridgeValidator represents a validator's ETH address and its
                  power
            height:
              type: string
              format: uint64
            reward_amount:
              type: string
            reward_token:
              type: string
              title: the reward token in it's Ethereum hex address representation
          title: >-
            Valset is the Ethereum Bridge Multsig Set, each peggy validator also

            maintains an ETH key to sign messages, these are used to check
            signatures on

            ETH because of the significant gas savings
      valset_confirms:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            orchestrator:
              type: string
            eth_address:
              type: string
            signature:
              type: string
          description: >-
            MsgValsetConfirm

            this is the message sent by the validators when they wish to submit
            their

            signatures over the validator set at a given block height. A
            validator must

            first call MsgSetEthAddress to set their Ethereum address to be used
            for

            signing. Then someone (anyone) must make a ValsetRequest the request
            is

            essentially a messaging mechanism to determine which block all
            validators

            should submit signatures over. Finally validators sign the validator
            set,

            powers, and Ethereum addresses of the entire validator set at the
            height of a

            ValsetRequest and submit that signature with this message.


            If a sufficient number of validators (66% of voting power) (A) have
            set

            Ethereum addresses and (B) submit ValsetConfirm messages with their

            signatures it is then possible for anyone to view these signatures
            in the

            chain store and submit them to Ethereum to update the validator set

            -------------
      batches:
        type: array
        items:
          type: object
          properties:
            batch_nonce:
              type: string
              format: uint64
            batch_timeout:
              type: string
              format: uint64
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  sender:
                    type: string
                  dest_address:
                    type: string
                  erc20_token:
                    type: object
                    properties:
                      contract:
                        type: string
                      amount:
                        type: string
                    title: >-
                      ERC20Token unique identifier for an Ethereum ERC20 token.

                      CONTRACT:

                      The contract address on ETH of the token, this could be a
                      Cosmos

                      originated token, if so it will be the ERC20 address of
                      the representation

                      (note: developers should look up the token symbol using
                      the address on ETH to

                      display for UI)
                  erc20_fee:
                    type: object
                    properties:
                      contract:
                        type: string
                      amount:
                        type: string
                    title: >-
                      ERC20Token unique identifier for an Ethereum ERC20 token.

                      CONTRACT:

                      The contract address on ETH of the token, this could be a
                      Cosmos

                      originated token, if so it will be the ERC20 address of
                      the representation

                      (note: developers should look up the token symbol using
                      the address on ETH to

                      display for UI)
                title: >-
                  OutgoingTransferTx represents an individual send from Peggy to
                  ETH
            token_contract:
              type: string
            block:
              type: string
              format: uint64
          title: >-
            OutgoingTxBatch represents a batch of transactions going from Peggy
            to ETH
      batch_confirms:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            token_contract:
              type: string
            eth_signer:
              type: string
            orchestrator:
              type: string
            signature:
              type: string
          title: >-
            MsgConfirmBatch

            When validators observe a MsgRequestBatch they form a batch by
            ordering

            transactions currently in the txqueue in order of highest to lowest
            fee,

            cutting off when the batch either reaches a hardcoded maximum size
            (to be

            decided, probably around 100) or when transactions stop being
            profitable

            (TODO determine this without nondeterminism) This message includes
            the batch

            as well as an Ethereum signature over this batch by the validator

            -------------
      attestations:
        type: array
        items:
          type: object
          properties:
            observed:
              type: boolean
            votes:
              type: array
              items:
                type: string
            height:
              type: string
              format: uint64
            claim:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: >-
            The actual content of the claims is passed in with the transaction
            making the

            claim and then passed through the call stack alongside the
            attestation while

            it is processed the key in which the attestation is stored is keyed
            on the

            exact details of the claim but there is no reason to store those
            exact

            details becuause the next message sender will kindly provide you
            with them.
          title: >-
            Attestation is an aggregate of `claims` that eventually becomes
            `observed` by

            all orchestrators

            EVENT_NONCE:

            EventNonce a nonce provided by the peggy contract that is unique per
            event

            fired These event nonces must be relayed in order. This is a
            correctness

            issue, if relaying out of order transaction replay attacks become
            possible

            OBSERVED:

            Observed indicates that >67% of validators have attested to the
            event,

            and that the event should be executed by the peggy state machine
      orchestrator_addresses:
        type: array
        items:
          type: object
          properties:
            sender:
              type: string
            orchestrator:
              type: string
            eth_address:
              type: string
          title: >-
            MsgSetOrchestratorAddresses

            this message allows validators to delegate their voting
            responsibilities

            to a given key. This key is then used as an optional authentication
            method

            for sigining oracle claims

            VALIDATOR

            The validator field is a cosmosvaloper1... string (i.e.
            sdk.ValAddress)

            that references a validator in the active set

            ORCHESTRATOR

            The orchestrator field is a cosmos1... string  (i.e. sdk.AccAddress)
            that

            references the key that is being delegated to

            ETH_ADDRESS

            This is a hex encoded 0x Ethereum public key that will be used by
            this

            validator on Ethereum
      erc20_to_denoms:
        type: array
        items:
          type: object
          properties:
            erc20:
              type: string
            denom:
              type: string
          title: |-
            This records the relationship between an ERC20 token and the denom
            of the corresponding Cosmos originated asset
      unbatched_transfers:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            sender:
              type: string
            dest_address:
              type: string
            erc20_token:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
            erc20_fee:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
          title: OutgoingTransferTx represents an individual send from Peggy to ETH
      last_observed_ethereum_height:
        type: string
        format: uint64
      last_outgoing_batch_id:
        type: string
        format: uint64
      last_outgoing_pool_id:
        type: string
        format: uint64
      last_observed_valset:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          members:
            type: array
            items:
              type: object
              properties:
                power:
                  type: string
                  format: uint64
                ethereum_address:
                  type: string
              title: >-
                BridgeValidator represents a validator's ETH address and its
                power
          height:
            type: string
            format: uint64
          reward_amount:
            type: string
          reward_token:
            type: string
            title: the reward token in it's Ethereum hex address representation
        title: >-
          Valset is the Ethereum Bridge Multsig Set, each peggy validator also

          maintains an ETH key to sign messages, these are used to check
          signatures on

          ETH because of the significant gas savings
      ethereum_blacklist:
        type: array
        items:
          type: string
    title: GenesisState struct
  injective.peggy.v1.LastClaimEvent:
    type: object
    properties:
      ethereum_event_nonce:
        type: string
        format: uint64
      ethereum_event_height:
        type: string
        format: uint64
    description: LastClaimEvent stores last claim event details of validator.
  injective.peggy.v1.MissingNoncesResponse:
    type: object
    properties:
      operator_addresses:
        type: array
        items:
          type: string
  injective.peggy.v1.MsgConfirmBatch:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      token_contract:
        type: string
      eth_signer:
        type: string
      orchestrator:
        type: string
      signature:
        type: string
    title: >-
      MsgConfirmBatch

      When validators observe a MsgRequestBatch they form a batch by ordering

      transactions currently in the txqueue in order of highest to lowest fee,

      cutting off when the batch either reaches a hardcoded maximum size (to be

      decided, probably around 100) or when transactions stop being profitable

      (TODO determine this without nondeterminism) This message includes the
      batch

      as well as an Ethereum signature over this batch by the validator

      -------------
  injective.peggy.v1.MsgSetOrchestratorAddresses:
    type: object
    properties:
      sender:
        type: string
      orchestrator:
        type: string
      eth_address:
        type: string
    title: |-
      MsgSetOrchestratorAddresses
      this message allows validators to delegate their voting responsibilities
      to a given key. This key is then used as an optional authentication method
      for sigining oracle claims
      VALIDATOR
      The validator field is a cosmosvaloper1... string (i.e. sdk.ValAddress)
      that references a validator in the active set
      ORCHESTRATOR
      The orchestrator field is a cosmos1... string  (i.e. sdk.AccAddress) that
      references the key that is being delegated to
      ETH_ADDRESS
      This is a hex encoded 0x Ethereum public key that will be used by this
      validator on Ethereum
  injective.peggy.v1.MsgValsetConfirm:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      orchestrator:
        type: string
      eth_address:
        type: string
      signature:
        type: string
    description: >-
      MsgValsetConfirm

      this is the message sent by the validators when they wish to submit their

      signatures over the validator set at a given block height. A validator
      must

      first call MsgSetEthAddress to set their Ethereum address to be used for

      signing. Then someone (anyone) must make a ValsetRequest the request is

      essentially a messaging mechanism to determine which block all validators

      should submit signatures over. Finally validators sign the validator set,

      powers, and Ethereum addresses of the entire validator set at the height
      of a

      ValsetRequest and submit that signature with this message.


      If a sufficient number of validators (66% of voting power) (A) have set

      Ethereum addresses and (B) submit ValsetConfirm messages with their

      signatures it is then possible for anyone to view these signatures in the

      chain store and submit them to Ethereum to update the validator set

      -------------
  injective.peggy.v1.OutgoingTransferTx:
    type: object
    properties:
      id:
        type: string
        format: uint64
      sender:
        type: string
      dest_address:
        type: string
      erc20_token:
        type: object
        properties:
          contract:
            type: string
          amount:
            type: string
        title: >-
          ERC20Token unique identifier for an Ethereum ERC20 token.

          CONTRACT:

          The contract address on ETH of the token, this could be a Cosmos

          originated token, if so it will be the ERC20 address of the
          representation

          (note: developers should look up the token symbol using the address on
          ETH to

          display for UI)
      erc20_fee:
        type: object
        properties:
          contract:
            type: string
          amount:
            type: string
        title: >-
          ERC20Token unique identifier for an Ethereum ERC20 token.

          CONTRACT:

          The contract address on ETH of the token, this could be a Cosmos

          originated token, if so it will be the ERC20 address of the
          representation

          (note: developers should look up the token symbol using the address on
          ETH to

          display for UI)
    title: OutgoingTransferTx represents an individual send from Peggy to ETH
  injective.peggy.v1.OutgoingTxBatch:
    type: object
    properties:
      batch_nonce:
        type: string
        format: uint64
      batch_timeout:
        type: string
        format: uint64
      transactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            sender:
              type: string
            dest_address:
              type: string
            erc20_token:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
            erc20_fee:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
          title: OutgoingTransferTx represents an individual send from Peggy to ETH
      token_contract:
        type: string
      block:
        type: string
        format: uint64
    title: OutgoingTxBatch represents a batch of transactions going from Peggy to ETH
  injective.peggy.v1.Params:
    type: object
    properties:
      peggy_id:
        type: string
      contract_source_hash:
        type: string
      bridge_ethereum_address:
        type: string
      bridge_chain_id:
        type: string
        format: uint64
      signed_valsets_window:
        type: string
        format: uint64
      signed_batches_window:
        type: string
        format: uint64
      signed_claims_window:
        type: string
        format: uint64
      target_batch_timeout:
        type: string
        format: uint64
      average_block_time:
        type: string
        format: uint64
      average_ethereum_block_time:
        type: string
        format: uint64
      slash_fraction_valset:
        type: string
        format: byte
      slash_fraction_batch:
        type: string
        format: byte
      slash_fraction_claim:
        type: string
        format: byte
      slash_fraction_conflicting_claim:
        type: string
        format: byte
      unbond_slashing_valsets_window:
        type: string
        format: uint64
      slash_fraction_bad_eth_signature:
        type: string
        format: byte
      cosmos_coin_denom:
        type: string
      cosmos_coin_erc20_contract:
        type: string
      claim_slashing_enabled:
        type: boolean
      bridge_contract_start_height:
        type: string
        format: uint64
      valset_reward:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  injective.peggy.v1.QueryBatchConfirmsResponse:
    type: object
    properties:
      confirms:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            token_contract:
              type: string
            eth_signer:
              type: string
            orchestrator:
              type: string
            signature:
              type: string
          title: >-
            MsgConfirmBatch

            When validators observe a MsgRequestBatch they form a batch by
            ordering

            transactions currently in the txqueue in order of highest to lowest
            fee,

            cutting off when the batch either reaches a hardcoded maximum size
            (to be

            decided, probably around 100) or when transactions stop being
            profitable

            (TODO determine this without nondeterminism) This message includes
            the batch

            as well as an Ethereum signature over this batch by the validator

            -------------
  injective.peggy.v1.QueryBatchFeeResponse:
    type: object
    properties:
      batchFees:
        type: array
        items:
          type: object
          properties:
            token:
              type: string
            total_fees:
              type: string
  injective.peggy.v1.QueryBatchRequestByNonceResponse:
    type: object
    properties:
      batch:
        type: object
        properties:
          batch_nonce:
            type: string
            format: uint64
          batch_timeout:
            type: string
            format: uint64
          transactions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                sender:
                  type: string
                dest_address:
                  type: string
                erc20_token:
                  type: object
                  properties:
                    contract:
                      type: string
                    amount:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token, this could be a
                    Cosmos

                    originated token, if so it will be the ERC20 address of the
                    representation

                    (note: developers should look up the token symbol using the
                    address on ETH to

                    display for UI)
                erc20_fee:
                  type: object
                  properties:
                    contract:
                      type: string
                    amount:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token, this could be a
                    Cosmos

                    originated token, if so it will be the ERC20 address of the
                    representation

                    (note: developers should look up the token symbol using the
                    address on ETH to

                    display for UI)
              title: >-
                OutgoingTransferTx represents an individual send from Peggy to
                ETH
          token_contract:
            type: string
          block:
            type: string
            format: uint64
        title: >-
          OutgoingTxBatch represents a batch of transactions going from Peggy to
          ETH
  injective.peggy.v1.QueryCurrentValsetResponse:
    type: object
    properties:
      valset:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          members:
            type: array
            items:
              type: object
              properties:
                power:
                  type: string
                  format: uint64
                ethereum_address:
                  type: string
              title: >-
                BridgeValidator represents a validator's ETH address and its
                power
          height:
            type: string
            format: uint64
          reward_amount:
            type: string
          reward_token:
            type: string
            title: the reward token in it's Ethereum hex address representation
        title: >-
          Valset is the Ethereum Bridge Multsig Set, each peggy validator also

          maintains an ETH key to sign messages, these are used to check
          signatures on

          ETH because of the significant gas savings
  injective.peggy.v1.QueryDelegateKeysByEthAddressResponse:
    type: object
    properties:
      validator_address:
        type: string
      orchestrator_address:
        type: string
  injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse:
    type: object
    properties:
      validator_address:
        type: string
      eth_address:
        type: string
  injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse:
    type: object
    properties:
      eth_address:
        type: string
      orchestrator_address:
        type: string
  injective.peggy.v1.QueryDenomToERC20Response:
    type: object
    properties:
      erc20:
        type: string
      cosmos_originated:
        type: boolean
  injective.peggy.v1.QueryERC20ToDenomResponse:
    type: object
    properties:
      denom:
        type: string
      cosmos_originated:
        type: boolean
  injective.peggy.v1.QueryLastEventByAddrResponse:
    type: object
    properties:
      last_claim_event:
        type: object
        properties:
          ethereum_event_nonce:
            type: string
            format: uint64
          ethereum_event_height:
            type: string
            format: uint64
        description: LastClaimEvent stores last claim event details of validator.
  injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse:
    type: object
    properties:
      batch:
        type: object
        properties:
          batch_nonce:
            type: string
            format: uint64
          batch_timeout:
            type: string
            format: uint64
          transactions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                sender:
                  type: string
                dest_address:
                  type: string
                erc20_token:
                  type: object
                  properties:
                    contract:
                      type: string
                    amount:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token, this could be a
                    Cosmos

                    originated token, if so it will be the ERC20 address of the
                    representation

                    (note: developers should look up the token symbol using the
                    address on ETH to

                    display for UI)
                erc20_fee:
                  type: object
                  properties:
                    contract:
                      type: string
                    amount:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token, this could be a
                    Cosmos

                    originated token, if so it will be the ERC20 address of the
                    representation

                    (note: developers should look up the token symbol using the
                    address on ETH to

                    display for UI)
              title: >-
                OutgoingTransferTx represents an individual send from Peggy to
                ETH
          token_contract:
            type: string
          block:
            type: string
            format: uint64
        title: >-
          OutgoingTxBatch represents a batch of transactions going from Peggy to
          ETH
  injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse:
    type: object
    properties:
      valsets:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            members:
              type: array
              items:
                type: object
                properties:
                  power:
                    type: string
                    format: uint64
                  ethereum_address:
                    type: string
                title: >-
                  BridgeValidator represents a validator's ETH address and its
                  power
            height:
              type: string
              format: uint64
            reward_amount:
              type: string
            reward_token:
              type: string
              title: the reward token in it's Ethereum hex address representation
          title: >-
            Valset is the Ethereum Bridge Multsig Set, each peggy validator also

            maintains an ETH key to sign messages, these are used to check
            signatures on

            ETH because of the significant gas savings
  injective.peggy.v1.QueryLastValsetRequestsResponse:
    type: object
    properties:
      valsets:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            members:
              type: array
              items:
                type: object
                properties:
                  power:
                    type: string
                    format: uint64
                  ethereum_address:
                    type: string
                title: >-
                  BridgeValidator represents a validator's ETH address and its
                  power
            height:
              type: string
              format: uint64
            reward_amount:
              type: string
            reward_token:
              type: string
              title: the reward token in it's Ethereum hex address representation
          title: >-
            Valset is the Ethereum Bridge Multsig Set, each peggy validator also

            maintains an ETH key to sign messages, these are used to check
            signatures on

            ETH because of the significant gas savings
  injective.peggy.v1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            type: object
            properties:
              peggy_id:
                type: string
              contract_source_hash:
                type: string
              bridge_ethereum_address:
                type: string
              bridge_chain_id:
                type: string
                format: uint64
              signed_valsets_window:
                type: string
                format: uint64
              signed_batches_window:
                type: string
                format: uint64
              signed_claims_window:
                type: string
                format: uint64
              target_batch_timeout:
                type: string
                format: uint64
              average_block_time:
                type: string
                format: uint64
              average_ethereum_block_time:
                type: string
                format: uint64
              slash_fraction_valset:
                type: string
                format: byte
              slash_fraction_batch:
                type: string
                format: byte
              slash_fraction_claim:
                type: string
                format: byte
              slash_fraction_conflicting_claim:
                type: string
                format: byte
              unbond_slashing_valsets_window:
                type: string
                format: uint64
              slash_fraction_bad_eth_signature:
                type: string
                format: byte
              cosmos_coin_denom:
                type: string
              cosmos_coin_erc20_contract:
                type: string
              claim_slashing_enabled:
                type: boolean
              bridge_contract_start_height:
                type: string
                format: uint64
              valset_reward:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
          last_observed_nonce:
            type: string
            format: uint64
          valsets:
            type: array
            items:
              type: object
              properties:
                nonce:
                  type: string
                  format: uint64
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      power:
                        type: string
                        format: uint64
                      ethereum_address:
                        type: string
                    title: >-
                      BridgeValidator represents a validator's ETH address and
                      its power
                height:
                  type: string
                  format: uint64
                reward_amount:
                  type: string
                reward_token:
                  type: string
                  title: the reward token in it's Ethereum hex address representation
              title: >-
                Valset is the Ethereum Bridge Multsig Set, each peggy validator
                also

                maintains an ETH key to sign messages, these are used to check
                signatures on

                ETH because of the significant gas savings
          valset_confirms:
            type: array
            items:
              type: object
              properties:
                nonce:
                  type: string
                  format: uint64
                orchestrator:
                  type: string
                eth_address:
                  type: string
                signature:
                  type: string
              description: >-
                MsgValsetConfirm

                this is the message sent by the validators when they wish to
                submit their

                signatures over the validator set at a given block height. A
                validator must

                first call MsgSetEthAddress to set their Ethereum address to be
                used for

                signing. Then someone (anyone) must make a ValsetRequest the
                request is

                essentially a messaging mechanism to determine which block all
                validators

                should submit signatures over. Finally validators sign the
                validator set,

                powers, and Ethereum addresses of the entire validator set at
                the height of a

                ValsetRequest and submit that signature with this message.


                If a sufficient number of validators (66% of voting power) (A)
                have set

                Ethereum addresses and (B) submit ValsetConfirm messages with
                their

                signatures it is then possible for anyone to view these
                signatures in the

                chain store and submit them to Ethereum to update the validator
                set

                -------------
          batches:
            type: array
            items:
              type: object
              properties:
                batch_nonce:
                  type: string
                  format: uint64
                batch_timeout:
                  type: string
                  format: uint64
                transactions:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uint64
                      sender:
                        type: string
                      dest_address:
                        type: string
                      erc20_token:
                        type: object
                        properties:
                          contract:
                            type: string
                          amount:
                            type: string
                        title: >-
                          ERC20Token unique identifier for an Ethereum ERC20
                          token.

                          CONTRACT:

                          The contract address on ETH of the token, this could
                          be a Cosmos

                          originated token, if so it will be the ERC20 address
                          of the representation

                          (note: developers should look up the token symbol
                          using the address on ETH to

                          display for UI)
                      erc20_fee:
                        type: object
                        properties:
                          contract:
                            type: string
                          amount:
                            type: string
                        title: >-
                          ERC20Token unique identifier for an Ethereum ERC20
                          token.

                          CONTRACT:

                          The contract address on ETH of the token, this could
                          be a Cosmos

                          originated token, if so it will be the ERC20 address
                          of the representation

                          (note: developers should look up the token symbol
                          using the address on ETH to

                          display for UI)
                    title: >-
                      OutgoingTransferTx represents an individual send from
                      Peggy to ETH
                token_contract:
                  type: string
                block:
                  type: string
                  format: uint64
              title: >-
                OutgoingTxBatch represents a batch of transactions going from
                Peggy to ETH
          batch_confirms:
            type: array
            items:
              type: object
              properties:
                nonce:
                  type: string
                  format: uint64
                token_contract:
                  type: string
                eth_signer:
                  type: string
                orchestrator:
                  type: string
                signature:
                  type: string
              title: >-
                MsgConfirmBatch

                When validators observe a MsgRequestBatch they form a batch by
                ordering

                transactions currently in the txqueue in order of highest to
                lowest fee,

                cutting off when the batch either reaches a hardcoded maximum
                size (to be

                decided, probably around 100) or when transactions stop being
                profitable

                (TODO determine this without nondeterminism) This message
                includes the batch

                as well as an Ethereum signature over this batch by the
                validator

                -------------
          attestations:
            type: array
            items:
              type: object
              properties:
                observed:
                  type: boolean
                votes:
                  type: array
                  items:
                    type: string
                height:
                  type: string
                  format: uint64
                claim:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
              description: >-
                The actual content of the claims is passed in with the
                transaction making the

                claim and then passed through the call stack alongside the
                attestation while

                it is processed the key in which the attestation is stored is
                keyed on the

                exact details of the claim but there is no reason to store those
                exact

                details becuause the next message sender will kindly provide you
                with them.
              title: >-
                Attestation is an aggregate of `claims` that eventually becomes
                `observed` by

                all orchestrators

                EVENT_NONCE:

                EventNonce a nonce provided by the peggy contract that is unique
                per event

                fired These event nonces must be relayed in order. This is a
                correctness

                issue, if relaying out of order transaction replay attacks
                become possible

                OBSERVED:

                Observed indicates that >67% of validators have attested to the
                event,

                and that the event should be executed by the peggy state machine
          orchestrator_addresses:
            type: array
            items:
              type: object
              properties:
                sender:
                  type: string
                orchestrator:
                  type: string
                eth_address:
                  type: string
              title: >-
                MsgSetOrchestratorAddresses

                this message allows validators to delegate their voting
                responsibilities

                to a given key. This key is then used as an optional
                authentication method

                for sigining oracle claims

                VALIDATOR

                The validator field is a cosmosvaloper1... string (i.e.
                sdk.ValAddress)

                that references a validator in the active set

                ORCHESTRATOR

                The orchestrator field is a cosmos1... string  (i.e.
                sdk.AccAddress) that

                references the key that is being delegated to

                ETH_ADDRESS

                This is a hex encoded 0x Ethereum public key that will be used
                by this

                validator on Ethereum
          erc20_to_denoms:
            type: array
            items:
              type: object
              properties:
                erc20:
                  type: string
                denom:
                  type: string
              title: >-
                This records the relationship between an ERC20 token and the
                denom

                of the corresponding Cosmos originated asset
          unbatched_transfers:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                sender:
                  type: string
                dest_address:
                  type: string
                erc20_token:
                  type: object
                  properties:
                    contract:
                      type: string
                    amount:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token, this could be a
                    Cosmos

                    originated token, if so it will be the ERC20 address of the
                    representation

                    (note: developers should look up the token symbol using the
                    address on ETH to

                    display for UI)
                erc20_fee:
                  type: object
                  properties:
                    contract:
                      type: string
                    amount:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token, this could be a
                    Cosmos

                    originated token, if so it will be the ERC20 address of the
                    representation

                    (note: developers should look up the token symbol using the
                    address on ETH to

                    display for UI)
              title: >-
                OutgoingTransferTx represents an individual send from Peggy to
                ETH
          last_observed_ethereum_height:
            type: string
            format: uint64
          last_outgoing_batch_id:
            type: string
            format: uint64
          last_outgoing_pool_id:
            type: string
            format: uint64
          last_observed_valset:
            type: object
            properties:
              nonce:
                type: string
                format: uint64
              members:
                type: array
                items:
                  type: object
                  properties:
                    power:
                      type: string
                      format: uint64
                    ethereum_address:
                      type: string
                  title: >-
                    BridgeValidator represents a validator's ETH address and its
                    power
              height:
                type: string
                format: uint64
              reward_amount:
                type: string
              reward_token:
                type: string
                title: the reward token in it's Ethereum hex address representation
            title: >-
              Valset is the Ethereum Bridge Multsig Set, each peggy validator
              also

              maintains an ETH key to sign messages, these are used to check
              signatures on

              ETH because of the significant gas savings
          ethereum_blacklist:
            type: array
            items:
              type: string
        title: GenesisState struct
    description: >-
      QueryModuleStateResponse is the response type for the
      Query/PeggyModuleState

      RPC method.
  injective.peggy.v1.QueryOutgoingTxBatchesResponse:
    type: object
    properties:
      batches:
        type: array
        items:
          type: object
          properties:
            batch_nonce:
              type: string
              format: uint64
            batch_timeout:
              type: string
              format: uint64
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  sender:
                    type: string
                  dest_address:
                    type: string
                  erc20_token:
                    type: object
                    properties:
                      contract:
                        type: string
                      amount:
                        type: string
                    title: >-
                      ERC20Token unique identifier for an Ethereum ERC20 token.

                      CONTRACT:

                      The contract address on ETH of the token, this could be a
                      Cosmos

                      originated token, if so it will be the ERC20 address of
                      the representation

                      (note: developers should look up the token symbol using
                      the address on ETH to

                      display for UI)
                  erc20_fee:
                    type: object
                    properties:
                      contract:
                        type: string
                      amount:
                        type: string
                    title: >-
                      ERC20Token unique identifier for an Ethereum ERC20 token.

                      CONTRACT:

                      The contract address on ETH of the token, this could be a
                      Cosmos

                      originated token, if so it will be the ERC20 address of
                      the representation

                      (note: developers should look up the token symbol using
                      the address on ETH to

                      display for UI)
                title: >-
                  OutgoingTransferTx represents an individual send from Peggy to
                  ETH
            token_contract:
              type: string
            block:
              type: string
              format: uint64
          title: >-
            OutgoingTxBatch represents a batch of transactions going from Peggy
            to ETH
  injective.peggy.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          peggy_id:
            type: string
          contract_source_hash:
            type: string
          bridge_ethereum_address:
            type: string
          bridge_chain_id:
            type: string
            format: uint64
          signed_valsets_window:
            type: string
            format: uint64
          signed_batches_window:
            type: string
            format: uint64
          signed_claims_window:
            type: string
            format: uint64
          target_batch_timeout:
            type: string
            format: uint64
          average_block_time:
            type: string
            format: uint64
          average_ethereum_block_time:
            type: string
            format: uint64
          slash_fraction_valset:
            type: string
            format: byte
          slash_fraction_batch:
            type: string
            format: byte
          slash_fraction_claim:
            type: string
            format: byte
          slash_fraction_conflicting_claim:
            type: string
            format: byte
          unbond_slashing_valsets_window:
            type: string
            format: uint64
          slash_fraction_bad_eth_signature:
            type: string
            format: byte
          cosmos_coin_denom:
            type: string
          cosmos_coin_erc20_contract:
            type: string
          claim_slashing_enabled:
            type: boolean
          bridge_contract_start_height:
            type: string
            format: uint64
          valset_reward:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
  injective.peggy.v1.QueryPendingSendToEthResponse:
    type: object
    properties:
      transfers_in_batches:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            sender:
              type: string
            dest_address:
              type: string
            erc20_token:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
            erc20_fee:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
          title: OutgoingTransferTx represents an individual send from Peggy to ETH
      unbatched_transfers:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            sender:
              type: string
            dest_address:
              type: string
            erc20_token:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
            erc20_fee:
              type: object
              properties:
                contract:
                  type: string
                amount:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token, this could be a Cosmos

                originated token, if so it will be the ERC20 address of the
                representation

                (note: developers should look up the token symbol using the
                address on ETH to

                display for UI)
          title: OutgoingTransferTx represents an individual send from Peggy to ETH
  injective.peggy.v1.QueryValsetConfirmResponse:
    type: object
    properties:
      confirm:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          orchestrator:
            type: string
          eth_address:
            type: string
          signature:
            type: string
        description: >-
          MsgValsetConfirm

          this is the message sent by the validators when they wish to submit
          their

          signatures over the validator set at a given block height. A validator
          must

          first call MsgSetEthAddress to set their Ethereum address to be used
          for

          signing. Then someone (anyone) must make a ValsetRequest the request
          is

          essentially a messaging mechanism to determine which block all
          validators

          should submit signatures over. Finally validators sign the validator
          set,

          powers, and Ethereum addresses of the entire validator set at the
          height of a

          ValsetRequest and submit that signature with this message.


          If a sufficient number of validators (66% of voting power) (A) have
          set

          Ethereum addresses and (B) submit ValsetConfirm messages with their

          signatures it is then possible for anyone to view these signatures in
          the

          chain store and submit them to Ethereum to update the validator set

          -------------
  injective.peggy.v1.QueryValsetConfirmsByNonceResponse:
    type: object
    properties:
      confirms:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            orchestrator:
              type: string
            eth_address:
              type: string
            signature:
              type: string
          description: >-
            MsgValsetConfirm

            this is the message sent by the validators when they wish to submit
            their

            signatures over the validator set at a given block height. A
            validator must

            first call MsgSetEthAddress to set their Ethereum address to be used
            for

            signing. Then someone (anyone) must make a ValsetRequest the request
            is

            essentially a messaging mechanism to determine which block all
            validators

            should submit signatures over. Finally validators sign the validator
            set,

            powers, and Ethereum addresses of the entire validator set at the
            height of a

            ValsetRequest and submit that signature with this message.


            If a sufficient number of validators (66% of voting power) (A) have
            set

            Ethereum addresses and (B) submit ValsetConfirm messages with their

            signatures it is then possible for anyone to view these signatures
            in the

            chain store and submit them to Ethereum to update the validator set

            -------------
  injective.peggy.v1.QueryValsetRequestResponse:
    type: object
    properties:
      valset:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          members:
            type: array
            items:
              type: object
              properties:
                power:
                  type: string
                  format: uint64
                ethereum_address:
                  type: string
              title: >-
                BridgeValidator represents a validator's ETH address and its
                power
          height:
            type: string
            format: uint64
          reward_amount:
            type: string
          reward_token:
            type: string
            title: the reward token in it's Ethereum hex address representation
        title: >-
          Valset is the Ethereum Bridge Multsig Set, each peggy validator also

          maintains an ETH key to sign messages, these are used to check
          signatures on

          ETH because of the significant gas savings
  injective.peggy.v1.Valset:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      members:
        type: array
        items:
          type: object
          properties:
            power:
              type: string
              format: uint64
            ethereum_address:
              type: string
          title: BridgeValidator represents a validator's ETH address and its power
      height:
        type: string
        format: uint64
      reward_amount:
        type: string
      reward_token:
        type: string
        title: the reward token in it's Ethereum hex address representation
    title: >-
      Valset is the Ethereum Bridge Multsig Set, each peggy validator also

      maintains an ETH key to sign messages, these are used to check signatures
      on

      ETH because of the significant gas savings
  injective.tokenfactory.v1beta1.DenomAuthorityMetadata:
    type: object
    properties:
      admin:
        type: string
        title: Can be empty for no admin, or a valid injective address
    description: |-
      DenomAuthorityMetadata specifies metadata for addresses that have specific
      capabilities over a token factory denom. Right now there is only one Admin
      permission, but is planned to be extended to the future.
  injective.tokenfactory.v1beta1.GenesisDenom:
    type: object
    properties:
      denom:
        type: string
      authority_metadata:
        type: object
        properties:
          admin:
            type: string
            title: Can be empty for no admin, or a valid injective address
        description: >-
          DenomAuthorityMetadata specifies metadata for addresses that have
          specific

          capabilities over a token factory denom. Right now there is only one
          Admin

          permission, but is planned to be extended to the future.
      name:
        type: string
      symbol:
        type: string
    description: |-
      GenesisDenom defines a tokenfactory denom that is defined within genesis
      state. The structure contains DenomAuthorityMetadata which defines the
      denom's admin.
  injective.tokenfactory.v1beta1.GenesisState:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          denom_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
      factory_denoms:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            authority_metadata:
              type: object
              properties:
                admin:
                  type: string
                  title: Can be empty for no admin, or a valid injective address
              description: >-
                DenomAuthorityMetadata specifies metadata for addresses that
                have specific

                capabilities over a token factory denom. Right now there is only
                one Admin

                permission, but is planned to be extended to the future.
            name:
              type: string
            symbol:
              type: string
          description: >-
            GenesisDenom defines a tokenfactory denom that is defined within
            genesis

            state. The structure contains DenomAuthorityMetadata which defines
            the

            denom's admin.
    description: GenesisState defines the tokenfactory module's genesis state.
  injective.tokenfactory.v1beta1.Params:
    type: object
    properties:
      denom_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: Params defines the parameters for the tokenfactory module.
  injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse:
    type: object
    properties:
      authority_metadata:
        type: object
        properties:
          admin:
            type: string
            title: Can be empty for no admin, or a valid injective address
        description: >-
          DenomAuthorityMetadata specifies metadata for addresses that have
          specific

          capabilities over a token factory denom. Right now there is only one
          Admin

          permission, but is planned to be extended to the future.
    description: |-
      QueryDenomAuthorityMetadataResponse defines the response structure for the
      DenomAuthorityMetadata gRPC query.
  injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse:
    type: object
    properties:
      denoms:
        type: array
        items:
          type: string
    description: |-
      QueryDenomsFromCreatorRequest defines the response structure for the
      DenomsFromCreator gRPC query.
  injective.tokenfactory.v1beta1.QueryModuleStateResponse:
    type: object
    properties:
      state:
        type: object
        properties:
          params:
            description: params defines the parameters of the module.
            type: object
            properties:
              denom_creation_fee:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
          factory_denoms:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                authority_metadata:
                  type: object
                  properties:
                    admin:
                      type: string
                      title: Can be empty for no admin, or a valid injective address
                  description: >-
                    DenomAuthorityMetadata specifies metadata for addresses that
                    have specific

                    capabilities over a token factory denom. Right now there is
                    only one Admin

                    permission, but is planned to be extended to the future.
                name:
                  type: string
                symbol:
                  type: string
              description: >-
                GenesisDenom defines a tokenfactory denom that is defined within
                genesis

                state. The structure contains DenomAuthorityMetadata which
                defines the

                denom's admin.
        description: GenesisState defines the tokenfactory module's genesis state.
    description: |-
      QueryModuleStateResponse is the response type for the
      Query/TokenfactoryModuleState RPC method.
  injective.tokenfactory.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          denom_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.auth.v1beta1.AddressBytesToStringResponse:
    type: object
    properties:
      address_string:
        type: string
    description: >-
      AddressBytesToStringResponse is the response type for AddressString rpc
      method.


      Since: cosmos-sdk 0.46
  cosmos.auth.v1beta1.AddressStringToBytesResponse:
    type: object
    properties:
      address_bytes:
        type: string
        format: byte
    description: >-
      AddressStringToBytesResponse is the response type for AddressBytes rpc
      method.


      Since: cosmos-sdk 0.46
  cosmos.auth.v1beta1.BaseAccount:
    type: object
    properties:
      address:
        type: string
      pub_key:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      account_number:
        type: string
        format: uint64
      sequence:
        type: string
        format: uint64
    description: >-
      BaseAccount defines a base account type. It contains all the necessary
      fields

      for basic account functionality. Any custom account type should extend
      this

      type for additional functionality (e.g. vesting).
  cosmos.auth.v1beta1.Bech32PrefixResponse:
    type: object
    properties:
      bech32_prefix:
        type: string
    description: |-
      Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

      Since: cosmos-sdk 0.46
  cosmos.auth.v1beta1.Params:
    type: object
    properties:
      max_memo_characters:
        type: string
        format: uint64
      tx_sig_limit:
        type: string
        format: uint64
      tx_size_cost_per_byte:
        type: string
        format: uint64
      sig_verify_cost_ed25519:
        type: string
        format: uint64
      sig_verify_cost_secp256k1:
        type: string
        format: uint64
    description: Params defines the parameters for the auth module.
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
    type: object
    properties:
      account_address:
        type: string
    description: 'Since: cosmos-sdk 0.46.2'
    title: >-
      QueryAccountAddressByIDResponse is the response type for
      AccountAddressByID rpc method
  cosmos.auth.v1beta1.QueryAccountInfoResponse:
    type: object
    properties:
      info:
        description: info is the account info which is represented by BaseAccount.
        type: object
        properties:
          address:
            type: string
          pub_key:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          account_number:
            type: string
            format: uint64
          sequence:
            type: string
            format: uint64
    description: |-
      QueryAccountInfoResponse is the Query/AccountInfo response type.

      Since: cosmos-sdk 0.47
  cosmos.auth.v1beta1.QueryAccountResponse:
    type: object
    properties:
      account:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
  cosmos.auth.v1beta1.QueryAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON


            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        title: accounts are the existing accounts
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAccountsResponse is the response type for the Query/Accounts RPC
      method.


      Since: cosmos-sdk 0.43
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
    type: object
    properties:
      account:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      QueryModuleAccountByNameResponse is the response type for the
      Query/ModuleAccountByName RPC method.
  cosmos.auth.v1beta1.QueryModuleAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON


            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
    description: >-
      QueryModuleAccountsResponse is the response type for the
      Query/ModuleAccounts RPC method.


      Since: cosmos-sdk 0.46
  cosmos.auth.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_memo_characters:
            type: string
            format: uint64
          tx_sig_limit:
            type: string
            format: uint64
          tx_size_cost_per_byte:
            type: string
            format: uint64
          sig_verify_cost_ed25519:
            type: string
            format: uint64
          sig_verify_cost_secp256k1:
            type: string
            format: uint64
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
      reverse:
        type: boolean
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.authz.v1beta1.Grant:
    type: object
    properties:
      authorization:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      expiration:
        type: string
        format: date-time
        title: >-
          time when the grant will expire and will be pruned. If null, then the
          grant

          doesn't have a time expiration (other conditions  in `authorization`

          may apply to invalidate the grant)
    description: |-
      Grant gives permissions to execute
      the provide method with expiration time.
  cosmos.authz.v1beta1.GrantAuthorization:
    type: object
    properties:
      granter:
        type: string
      grantee:
        type: string
      authorization:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      expiration:
        type: string
        format: date-time
    title: >-
      GrantAuthorization extends a grant with both the addresses of the grantee
      and granter.

      It is used in genesis.proto and query.proto
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
    type: object
    properties:
      grants:
        type: array
        items:
          type: object
          properties:
            granter:
              type: string
            grantee:
              type: string
            authorization:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            expiration:
              type: string
              format: date-time
          title: >-
            GrantAuthorization extends a grant with both the addresses of the
            grantee and granter.

            It is used in genesis.proto and query.proto
        description: grants is a list of grants granted to the grantee.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryGranteeGrantsResponse is the response type for the
      Query/GranteeGrants RPC method.
  cosmos.authz.v1beta1.QueryGranterGrantsResponse:
    type: object
    properties:
      grants:
        type: array
        items:
          type: object
          properties:
            granter:
              type: string
            grantee:
              type: string
            authorization:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            expiration:
              type: string
              format: date-time
          title: >-
            GrantAuthorization extends a grant with both the addresses of the
            grantee and granter.

            It is used in genesis.proto and query.proto
        description: grants is a list of grants granted by the granter.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryGranterGrantsResponse is the response type for the
      Query/GranterGrants RPC method.
  cosmos.authz.v1beta1.QueryGrantsResponse:
    type: object
    properties:
      grants:
        type: array
        items:
          type: object
          properties:
            authorization:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            expiration:
              type: string
              format: date-time
              title: >-
                time when the grant will expire and will be pruned. If null,
                then the grant

                doesn't have a time expiration (other conditions  in
                `authorization`

                may apply to invalidate the grant)
          description: |-
            Grant gives permissions to execute
            the provide method with expiration time.
        description: authorizations is a list of grants granted for grantee by granter.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryGrantsResponse is the response type for the Query/Authorizations RPC
      method.
  cosmos.bank.v1beta1.DenomOwner:
    type: object
    properties:
      address:
        type: string
        description: address defines the address that owns a particular denomination.
      balance:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: |-
      DenomOwner defines structure representing an account that owns or holds a
      particular denominated token. It contains the account address and account
      balance of the denominated token.

      Since: cosmos-sdk 0.46
  cosmos.bank.v1beta1.DenomUnit:
    type: object
    properties:
      denom:
        type: string
        description: denom represents the string name of the given denom unit (e.g uatom).
      exponent:
        type: integer
        format: int64
        description: >-
          exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit's denom

          1 denom = 10^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom'
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).
      aliases:
        type: array
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
  cosmos.bank.v1beta1.Metadata:
    type: object
    properties:
      description:
        type: string
      denom_units:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: >-
                denom represents the string name of the given denom unit (e.g
                uatom).
            exponent:
              type: integer
              format: int64
              description: >-
                exponent represents power of 10 exponent that one must

                raise the base_denom to in order to equal the given DenomUnit's
                denom

                1 denom = 10^exponent base_denom

                (e.g. with a base_denom of uatom, one can create a DenomUnit of
                'atom' with

                exponent = 6, thus: 1 atom = 10^6 uatom).
            aliases:
              type: array
              items:
                type: string
              title: aliases is a list of string aliases for the given denom
          description: |-
            DenomUnit represents a struct that describes a given
            denomination unit of the basic token.
        title: denom_units represents the list of DenomUnit's for a given coin
      base:
        type: string
        description: >-
          base represents the base denom (should be the DenomUnit with exponent
          = 0).
      display:
        type: string
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
      name:
        type: string
        description: 'Since: cosmos-sdk 0.43'
        title: 'name defines the name of the token (eg: Cosmos Atom)'
      symbol:
        type: string
        description: >-
          symbol is the token symbol usually shown on exchanges (eg: ATOM). This
          can

          be the same as the display.


          Since: cosmos-sdk 0.43
      uri:
        type: string
        description: >-
          URI to a document (on or off-chain) that contains additional
          information. Optional.


          Since: cosmos-sdk 0.46
      uri_hash:
        type: string
        description: >-
          URIHash is a sha256 hash of a document pointed by URI. It's used to
          verify that

          the document didn't change. Optional.


          Since: cosmos-sdk 0.46
    description: |-
      Metadata represents a struct that describes
      a basic token.
  cosmos.bank.v1beta1.Params:
    type: object
    properties:
      send_enabled:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
        description: >-
          Deprecated: Use of SendEnabled in params is deprecated.

          For genesis, use the newly added send_enabled field in the genesis
          object.

          Storage, lookup, and manipulation of this information is now in the
          keeper.


          As of cosmos-sdk 0.47, this only exists for backwards compatibility of
          genesis files.
      default_send_enabled:
        type: boolean
    description: Params defines the parameters for the bank module.
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    type: object
    properties:
      balances:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: balances is the balances of all the coins.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.
  cosmos.bank.v1beta1.QueryBalanceResponse:
    type: object
    properties:
      balance:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    type: object
    properties:
      metadata:
        type: object
        properties:
          description:
            type: string
          denom_units:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  description: >-
                    denom represents the string name of the given denom unit
                    (e.g uatom).
                exponent:
                  type: integer
                  format: int64
                  description: >-
                    exponent represents power of 10 exponent that one must

                    raise the base_denom to in order to equal the given
                    DenomUnit's denom

                    1 denom = 10^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit
                    of 'atom' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).
                aliases:
                  type: array
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
              description: |-
                DenomUnit represents a struct that describes a given
                denomination unit of the basic token.
            title: denom_units represents the list of DenomUnit's for a given coin
          base:
            type: string
            description: >-
              base represents the base denom (should be the DenomUnit with
              exponent = 0).
          display:
            type: string
            description: |-
              display indicates the suggested denom that should be
              displayed in clients.
          name:
            type: string
            description: 'Since: cosmos-sdk 0.43'
            title: 'name defines the name of the token (eg: Cosmos Atom)'
          symbol:
            type: string
            description: >-
              symbol is the token symbol usually shown on exchanges (eg: ATOM).
              This can

              be the same as the display.


              Since: cosmos-sdk 0.43
          uri:
            type: string
            description: >-
              URI to a document (on or off-chain) that contains additional
              information. Optional.


              Since: cosmos-sdk 0.46
          uri_hash:
            type: string
            description: >-
              URIHash is a sha256 hash of a document pointed by URI. It's used
              to verify that

              the document didn't change. Optional.


              Since: cosmos-sdk 0.46
        description: |-
          Metadata represents a struct that describes
          a basic token.
    description: >-
      QueryDenomMetadataResponse is the response type for the
      Query/DenomMetadata RPC

      method.
  cosmos.bank.v1beta1.QueryDenomOwnersResponse:
    type: object
    properties:
      denom_owners:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              description: address defines the address that owns a particular denomination.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            DenomOwner defines structure representing an account that owns or
            holds a

            particular denominated token. It contains the account address and
            account

            balance of the denominated token.


            Since: cosmos-sdk 0.46
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC
      query.


      Since: cosmos-sdk 0.46
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    type: object
    properties:
      metadatas:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            denom_units:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: >-
                      denom represents the string name of the given denom unit
                      (e.g uatom).
                  exponent:
                    type: integer
                    format: int64
                    description: >-
                      exponent represents power of 10 exponent that one must

                      raise the base_denom to in order to equal the given
                      DenomUnit's denom

                      1 denom = 10^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a
                      DenomUnit of 'atom' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).
                  aliases:
                    type: array
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
              title: denom_units represents the list of DenomUnit's for a given coin
            base:
              type: string
              description: >-
                base represents the base denom (should be the DenomUnit with
                exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
            name:
              type: string
              description: 'Since: cosmos-sdk 0.43'
              title: 'name defines the name of the token (eg: Cosmos Atom)'
            symbol:
              type: string
              description: >-
                symbol is the token symbol usually shown on exchanges (eg:
                ATOM). This can

                be the same as the display.


                Since: cosmos-sdk 0.43
            uri:
              type: string
              description: >-
                URI to a document (on or off-chain) that contains additional
                information. Optional.


                Since: cosmos-sdk 0.46
            uri_hash:
              type: string
              description: >-
                URIHash is a sha256 hash of a document pointed by URI. It's used
                to verify that

                the document didn't change. Optional.


                Since: cosmos-sdk 0.46
          description: |-
            Metadata represents a struct that describes
            a basic token.
        description: >-
          metadata provides the client information for all the registered
          tokens.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryDenomsMetadataResponse is the response type for the
      Query/DenomsMetadata RPC

      method.
  cosmos.bank.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          send_enabled:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                enabled:
                  type: boolean
              description: >-
                SendEnabled maps coin denom to a send_enabled status (whether a
                denom is

                sendable).
            description: >-
              Deprecated: Use of SendEnabled in params is deprecated.

              For genesis, use the newly added send_enabled field in the genesis
              object.

              Storage, lookup, and manipulation of this information is now in
              the keeper.


              As of cosmos-sdk 0.47, this only exists for backwards
              compatibility of genesis files.
          default_send_enabled:
            type: boolean
        description: Params defines the parameters for the bank module.
    description: >-
      QueryParamsResponse defines the response type for querying x/bank
      parameters.
  cosmos.bank.v1beta1.QuerySendEnabledResponse:
    type: object
    properties:
      send_enabled:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
      pagination:
        description: |-
          pagination defines the pagination in the response. This field is only
          populated if the denoms field in the request is empty.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QuerySendEnabledResponse defines the RPC response of a SendEnable query.

      Since: cosmos-sdk 0.47
  cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
    type: object
    properties:
      balance:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QuerySpendableBalanceByDenomResponse defines the gRPC response structure
      for

      querying an account's spendable balance for a specific denom.


      Since: cosmos-sdk 0.47
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
    type: object
    properties:
      balances:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: balances is the spendable balances of all the coins.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QuerySpendableBalancesResponse defines the gRPC response structure for
      querying

      an account's spendable balances.


      Since: cosmos-sdk 0.46
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC
      method.
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    type: object
    properties:
      supply:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: supply is the supply of the coins
      pagination:
        description: |-
          pagination defines the pagination in the response.

          Since: cosmos-sdk 0.43
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method
  cosmos.bank.v1beta1.SendEnabled:
    type: object
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    description: |-
      SendEnabled maps coin denom to a send_enabled status (whether a denom is
      sendable).
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
    type: object
    properties:
      code:
        type: integer
        format: int64
      log:
        type: string
      info:
        type: string
      index:
        type: string
        format: int64
      key:
        type: string
        format: byte
      value:
        type: string
        format: byte
      proof_ops:
        type: object
        properties:
          ops:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                key:
                  type: string
                  format: byte
                data:
                  type: string
                  format: byte
              description: >-
                ProofOp defines an operation used for calculating Merkle root.
                The data could

                be arbitrary format, providing necessary data for example
                neighbouring node

                hash.


                Note: This type is a duplicate of the ProofOp proto type defined
                in Tendermint.
        description: >-
          ProofOps is Merkle proof defined by the list of ProofOps.


          Note: This type is a duplicate of the ProofOps proto type defined in
          Tendermint.
      height:
        type: string
        format: int64
      codespace:
        type: string
    description: >-
      ABCIQueryResponse defines the response structure for the ABCIQuery gRPC
      query.


      Note: This type is a duplicate of the ResponseQuery proto type defined in

      Tendermint.
  cosmos.base.tendermint.v1beta1.Block:
    type: object
    properties:
      header:
        type: object
        properties:
          version:
            title: basic block info
            type: object
            properties:
              block:
                type: string
                format: uint64
              app:
                type: string
                format: uint64
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
          chain_id:
            type: string
          height:
            type: string
            format: int64
          time:
            type: string
            format: date-time
          last_block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          last_commit_hash:
            type: string
            format: byte
            title: hashes of block data
          data_hash:
            type: string
            format: byte
          validators_hash:
            type: string
            format: byte
            title: hashes from the app output from the prev block
          next_validators_hash:
            type: string
            format: byte
          consensus_hash:
            type: string
            format: byte
          app_hash:
            type: string
            format: byte
          last_results_hash:
            type: string
            format: byte
          evidence_hash:
            type: string
            format: byte
            title: consensus info
          proposer_address:
            type: string
            description: >-
              proposer_address is the original block proposer address, formatted
              as a Bech32 string.

              In Tendermint, this type is `bytes`, but in the SDK, we convert it
              to a Bech32 string

              for better UX.
        description: Header defines the structure of a Tendermint block header.
      data:
        type: object
        properties:
          txs:
            type: array
            items:
              type: string
              format: byte
            description: >-
              Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We're just agreeing on the
              order first.

              This means that block.AppHash does not include these txs.
        title: Data contains the set of transactions included in the block
      evidence:
        type: object
        properties:
          evidence:
            type: array
            items:
              type: object
              properties:
                duplicate_vote_evidence:
                  type: object
                  properties:
                    vote_a:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          type: object
                          properties:
                            hash:
                              type: string
                              format: byte
                            part_set_header:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  type: string
                                  format: byte
                              title: PartsetHeader
                          title: BlockID
                        timestamp:
                          type: string
                          format: date-time
                        validator_address:
                          type: string
                          format: byte
                        validator_index:
                          type: integer
                          format: int32
                        signature:
                          type: string
                          format: byte
                      description: >-
                        Vote represents a prevote, precommit, or commit vote
                        from validators for

                        consensus.
                    vote_b:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          type: object
                          properties:
                            hash:
                              type: string
                              format: byte
                            part_set_header:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  type: string
                                  format: byte
                              title: PartsetHeader
                          title: BlockID
                        timestamp:
                          type: string
                          format: date-time
                        validator_address:
                          type: string
                          format: byte
                        validator_index:
                          type: integer
                          format: int32
                        signature:
                          type: string
                          format: byte
                      description: >-
                        Vote represents a prevote, precommit, or commit vote
                        from validators for

                        consensus.
                    total_voting_power:
                      type: string
                      format: int64
                    validator_power:
                      type: string
                      format: int64
                    timestamp:
                      type: string
                      format: date-time
                  description: >-
                    DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting votes.
                light_client_attack_evidence:
                  type: object
                  properties:
                    conflicting_block:
                      type: object
                      properties:
                        signed_header:
                          type: object
                          properties:
                            header:
                              type: object
                              properties:
                                version:
                                  title: basic block info
                                  type: object
                                  properties:
                                    block:
                                      type: string
                                      format: uint64
                                    app:
                                      type: string
                                      format: uint64
                                  description: >-
                                    Consensus captures the consensus rules for
                                    processing a block in the blockchain,

                                    including all blockchain data structures and
                                    the rules of the application's

                                    state transition machine.
                                chain_id:
                                  type: string
                                height:
                                  type: string
                                  format: int64
                                time:
                                  type: string
                                  format: date-time
                                last_block_id:
                                  type: object
                                  properties:
                                    hash:
                                      type: string
                                      format: byte
                                    part_set_header:
                                      type: object
                                      properties:
                                        total:
                                          type: integer
                                          format: int64
                                        hash:
                                          type: string
                                          format: byte
                                      title: PartsetHeader
                                  title: BlockID
                                last_commit_hash:
                                  type: string
                                  format: byte
                                  title: hashes of block data
                                data_hash:
                                  type: string
                                  format: byte
                                validators_hash:
                                  type: string
                                  format: byte
                                  title: >-
                                    hashes from the app output from the prev
                                    block
                                next_validators_hash:
                                  type: string
                                  format: byte
                                consensus_hash:
                                  type: string
                                  format: byte
                                app_hash:
                                  type: string
                                  format: byte
                                last_results_hash:
                                  type: string
                                  format: byte
                                evidence_hash:
                                  type: string
                                  format: byte
                                  title: consensus info
                                proposer_address:
                                  type: string
                                  format: byte
                              description: >-
                                Header defines the structure of a Tendermint
                                block header.
                            commit:
                              type: object
                              properties:
                                height:
                                  type: string
                                  format: int64
                                round:
                                  type: integer
                                  format: int32
                                block_id:
                                  type: object
                                  properties:
                                    hash:
                                      type: string
                                      format: byte
                                    part_set_header:
                                      type: object
                                      properties:
                                        total:
                                          type: integer
                                          format: int64
                                        hash:
                                          type: string
                                          format: byte
                                      title: PartsetHeader
                                  title: BlockID
                                signatures:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      block_id_flag:
                                        type: string
                                        enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        title: >-
                                          BlockIdFlag indicates which BlcokID the
                                          signature is for
                                      validator_address:
                                        type: string
                                        format: byte
                                      timestamp:
                                        type: string
                                        format: date-time
                                      signature:
                                        type: string
                                        format: byte
                                    description: >-
                                      CommitSig is a part of the Vote included
                                      in a Commit.
                              description: >-
                                Commit contains the evidence that a block was
                                committed by a set of validators.
                        validator_set:
                          type: object
                          properties:
                            validators:
                              type: array
                              items:
                                type: object
                                properties:
                                  address:
                                    type: string
                                    format: byte
                                  pub_key:
                                    type: object
                                    properties:
                                      ed25519:
                                        type: string
                                        format: byte
                                      secp256k1:
                                        type: string
                                        format: byte
                                    title: >-
                                      PublicKey defines the keys available for
                                      use with Tendermint Validators
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                            proposer:
                              type: object
                              properties:
                                address:
                                  type: string
                                  format: byte
                                pub_key:
                                  type: object
                                  properties:
                                    ed25519:
                                      type: string
                                      format: byte
                                    secp256k1:
                                      type: string
                                      format: byte
                                  title: >-
                                    PublicKey defines the keys available for use
                                    with Tendermint Validators
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                            total_voting_power:
                              type: string
                              format: int64
                    common_height:
                      type: string
                      format: int64
                    byzantine_validators:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            format: byte
                          pub_key:
                            type: object
                            properties:
                              ed25519:
                                type: string
                                format: byte
                              secp256k1:
                                type: string
                                format: byte
                            title: >-
                              PublicKey defines the keys available for use with
                              Tendermint Validators
                          voting_power:
                            type: string
                            format: int64
                          proposer_priority:
                            type: string
                            format: int64
                    total_voting_power:
                      type: string
                      format: int64
                    timestamp:
                      type: string
                      format: date-time
                  description: >-
                    LightClientAttackEvidence contains evidence of a set of
                    validators attempting to mislead a light client.
      last_commit:
        type: object
        properties:
          height:
            type: string
            format: int64
          round:
            type: integer
            format: int32
          block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          signatures:
            type: array
            items:
              type: object
              properties:
                block_id_flag:
                  type: string
                  enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  default: BLOCK_ID_FLAG_UNKNOWN
                  title: BlockIdFlag indicates which BlcokID the signature is for
                validator_address:
                  type: string
                  format: byte
                timestamp:
                  type: string
                  format: date-time
                signature:
                  type: string
                  format: byte
              description: CommitSig is a part of the Vote included in a Commit.
        description: >-
          Commit contains the evidence that a block was committed by a set of
          validators.
    description: |-
      Block is tendermint type Block, with the Header proposer address
      field converted to bech32 string.
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
    type: object
    properties:
      block_id:
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
        title: BlockID
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                format: byte
            description: Header defines the structure of a Tendermint block header.
          data:
            type: object
            properties:
              txs:
                type: array
                items:
                  type: string
                  format: byte
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
            title: Data contains the set of transactions included in the block
          evidence:
            type: object
            properties:
              evidence:
                type: array
                items:
                  type: object
                  properties:
                    duplicate_vote_evidence:
                      type: object
                      properties:
                        vote_a:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        vote_b:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        total_voting_power:
                          type: string
                          format: int64
                        validator_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                    light_client_attack_evidence:
                      type: object
                      properties:
                        conflicting_block:
                          type: object
                          properties:
                            signed_header:
                              type: object
                              properties:
                                header:
                                  type: object
                                  properties:
                                    version:
                                      title: basic block info
                                      type: object
                                      properties:
                                        block:
                                          type: string
                                          format: uint64
                                        app:
                                          type: string
                                          format: uint64
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                    chain_id:
                                      type: string
                                    height:
                                      type: string
                                      format: int64
                                    time:
                                      type: string
                                      format: date-time
                                    last_block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    last_commit_hash:
                                      type: string
                                      format: byte
                                      title: hashes of block data
                                    data_hash:
                                      type: string
                                      format: byte
                                    validators_hash:
                                      type: string
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                    next_validators_hash:
                                      type: string
                                      format: byte
                                    consensus_hash:
                                      type: string
                                      format: byte
                                    app_hash:
                                      type: string
                                      format: byte
                                    last_results_hash:
                                      type: string
                                      format: byte
                                    evidence_hash:
                                      type: string
                                      format: byte
                                      title: consensus info
                                    proposer_address:
                                      type: string
                                      format: byte
                                  description: >-
                                    Header defines the structure of a Tendermint
                                    block header.
                                commit:
                                  type: object
                                  properties:
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    signatures:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          block_id_flag:
                                            type: string
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            title: >-
                                              BlockIdFlag indicates which BlcokID the
                                              signature is for
                                          validator_address:
                                            type: string
                                            format: byte
                                          timestamp:
                                            type: string
                                            format: date-time
                                          signature:
                                            type: string
                                            format: byte
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                            validator_set:
                              type: object
                              properties:
                                validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                proposer:
                                  type: object
                                  properties:
                                    address:
                                      type: string
                                      format: byte
                                    pub_key:
                                      type: object
                                      properties:
                                        ed25519:
                                          type: string
                                          format: byte
                                        secp256k1:
                                          type: string
                                          format: byte
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Tendermint Validators
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                        common_height:
                          type: string
                          format: int64
                        byzantine_validators:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                format: byte
                              pub_key:
                                type: object
                                properties:
                                  ed25519:
                                    type: string
                                    format: byte
                                  secp256k1:
                                    type: string
                                    format: byte
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Tendermint Validators
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                        total_voting_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
          last_commit:
            type: object
            properties:
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              signatures:
                type: array
                items:
                  type: object
                  properties:
                    block_id_flag:
                      type: string
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      default: BLOCK_ID_FLAG_UNKNOWN
                      title: BlockIdFlag indicates which BlcokID the signature is for
                    validator_address:
                      type: string
                      format: byte
                    timestamp:
                      type: string
                      format: date-time
                    signature:
                      type: string
                      format: byte
                  description: CommitSig is a part of the Vote included in a Commit.
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
      sdk_block:
        title: 'Since: cosmos-sdk 0.47'
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                description: >-
                  proposer_address is the original block proposer address,
                  formatted as a Bech32 string.

                  In Tendermint, this type is `bytes`, but in the SDK, we
                  convert it to a Bech32 string

                  for better UX.
            description: Header defines the structure of a Tendermint block header.
          data:
            type: object
            properties:
              txs:
                type: array
                items:
                  type: string
                  format: byte
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
            title: Data contains the set of transactions included in the block
          evidence:
            type: object
            properties:
              evidence:
                type: array
                items:
                  type: object
                  properties:
                    duplicate_vote_evidence:
                      type: object
                      properties:
                        vote_a:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        vote_b:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        total_voting_power:
                          type: string
                          format: int64
                        validator_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                    light_client_attack_evidence:
                      type: object
                      properties:
                        conflicting_block:
                          type: object
                          properties:
                            signed_header:
                              type: object
                              properties:
                                header:
                                  type: object
                                  properties:
                                    version:
                                      title: basic block info
                                      type: object
                                      properties:
                                        block:
                                          type: string
                                          format: uint64
                                        app:
                                          type: string
                                          format: uint64
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                    chain_id:
                                      type: string
                                    height:
                                      type: string
                                      format: int64
                                    time:
                                      type: string
                                      format: date-time
                                    last_block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    last_commit_hash:
                                      type: string
                                      format: byte
                                      title: hashes of block data
                                    data_hash:
                                      type: string
                                      format: byte
                                    validators_hash:
                                      type: string
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                    next_validators_hash:
                                      type: string
                                      format: byte
                                    consensus_hash:
                                      type: string
                                      format: byte
                                    app_hash:
                                      type: string
                                      format: byte
                                    last_results_hash:
                                      type: string
                                      format: byte
                                    evidence_hash:
                                      type: string
                                      format: byte
                                      title: consensus info
                                    proposer_address:
                                      type: string
                                      format: byte
                                  description: >-
                                    Header defines the structure of a Tendermint
                                    block header.
                                commit:
                                  type: object
                                  properties:
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    signatures:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          block_id_flag:
                                            type: string
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            title: >-
                                              BlockIdFlag indicates which BlcokID the
                                              signature is for
                                          validator_address:
                                            type: string
                                            format: byte
                                          timestamp:
                                            type: string
                                            format: date-time
                                          signature:
                                            type: string
                                            format: byte
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                            validator_set:
                              type: object
                              properties:
                                validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                proposer:
                                  type: object
                                  properties:
                                    address:
                                      type: string
                                      format: byte
                                    pub_key:
                                      type: object
                                      properties:
                                        ed25519:
                                          type: string
                                          format: byte
                                        secp256k1:
                                          type: string
                                          format: byte
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Tendermint Validators
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                        common_height:
                          type: string
                          format: int64
                        byzantine_validators:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                format: byte
                              pub_key:
                                type: object
                                properties:
                                  ed25519:
                                    type: string
                                    format: byte
                                  secp256k1:
                                    type: string
                                    format: byte
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Tendermint Validators
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                        total_voting_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
          last_commit:
            type: object
            properties:
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              signatures:
                type: array
                items:
                  type: object
                  properties:
                    block_id_flag:
                      type: string
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      default: BLOCK_ID_FLAG_UNKNOWN
                      title: BlockIdFlag indicates which BlcokID the signature is for
                    validator_address:
                      type: string
                      format: byte
                    timestamp:
                      type: string
                      format: date-time
                    signature:
                      type: string
                      format: byte
                  description: CommitSig is a part of the Vote included in a Commit.
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
        description: |-
          Block is tendermint type Block, with the Header proposer address
          field converted to bech32 string.
    description: >-
      GetBlockByHeightResponse is the response type for the
      Query/GetBlockByHeight RPC method.
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
    type: object
    properties:
      block_id:
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
        title: BlockID
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                format: byte
            description: Header defines the structure of a Tendermint block header.
          data:
            type: object
            properties:
              txs:
                type: array
                items:
                  type: string
                  format: byte
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
            title: Data contains the set of transactions included in the block
          evidence:
            type: object
            properties:
              evidence:
                type: array
                items:
                  type: object
                  properties:
                    duplicate_vote_evidence:
                      type: object
                      properties:
                        vote_a:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        vote_b:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        total_voting_power:
                          type: string
                          format: int64
                        validator_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                    light_client_attack_evidence:
                      type: object
                      properties:
                        conflicting_block:
                          type: object
                          properties:
                            signed_header:
                              type: object
                              properties:
                                header:
                                  type: object
                                  properties:
                                    version:
                                      title: basic block info
                                      type: object
                                      properties:
                                        block:
                                          type: string
                                          format: uint64
                                        app:
                                          type: string
                                          format: uint64
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                    chain_id:
                                      type: string
                                    height:
                                      type: string
                                      format: int64
                                    time:
                                      type: string
                                      format: date-time
                                    last_block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    last_commit_hash:
                                      type: string
                                      format: byte
                                      title: hashes of block data
                                    data_hash:
                                      type: string
                                      format: byte
                                    validators_hash:
                                      type: string
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                    next_validators_hash:
                                      type: string
                                      format: byte
                                    consensus_hash:
                                      type: string
                                      format: byte
                                    app_hash:
                                      type: string
                                      format: byte
                                    last_results_hash:
                                      type: string
                                      format: byte
                                    evidence_hash:
                                      type: string
                                      format: byte
                                      title: consensus info
                                    proposer_address:
                                      type: string
                                      format: byte
                                  description: >-
                                    Header defines the structure of a Tendermint
                                    block header.
                                commit:
                                  type: object
                                  properties:
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    signatures:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          block_id_flag:
                                            type: string
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            title: >-
                                              BlockIdFlag indicates which BlcokID the
                                              signature is for
                                          validator_address:
                                            type: string
                                            format: byte
                                          timestamp:
                                            type: string
                                            format: date-time
                                          signature:
                                            type: string
                                            format: byte
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                            validator_set:
                              type: object
                              properties:
                                validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                proposer:
                                  type: object
                                  properties:
                                    address:
                                      type: string
                                      format: byte
                                    pub_key:
                                      type: object
                                      properties:
                                        ed25519:
                                          type: string
                                          format: byte
                                        secp256k1:
                                          type: string
                                          format: byte
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Tendermint Validators
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                        common_height:
                          type: string
                          format: int64
                        byzantine_validators:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                format: byte
                              pub_key:
                                type: object
                                properties:
                                  ed25519:
                                    type: string
                                    format: byte
                                  secp256k1:
                                    type: string
                                    format: byte
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Tendermint Validators
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                        total_voting_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
          last_commit:
            type: object
            properties:
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              signatures:
                type: array
                items:
                  type: object
                  properties:
                    block_id_flag:
                      type: string
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      default: BLOCK_ID_FLAG_UNKNOWN
                      title: BlockIdFlag indicates which BlcokID the signature is for
                    validator_address:
                      type: string
                      format: byte
                    timestamp:
                      type: string
                      format: date-time
                    signature:
                      type: string
                      format: byte
                  description: CommitSig is a part of the Vote included in a Commit.
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
      sdk_block:
        title: 'Since: cosmos-sdk 0.47'
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                description: >-
                  proposer_address is the original block proposer address,
                  formatted as a Bech32 string.

                  In Tendermint, this type is `bytes`, but in the SDK, we
                  convert it to a Bech32 string

                  for better UX.
            description: Header defines the structure of a Tendermint block header.
          data:
            type: object
            properties:
              txs:
                type: array
                items:
                  type: string
                  format: byte
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
            title: Data contains the set of transactions included in the block
          evidence:
            type: object
            properties:
              evidence:
                type: array
                items:
                  type: object
                  properties:
                    duplicate_vote_evidence:
                      type: object
                      properties:
                        vote_a:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        vote_b:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            timestamp:
                              type: string
                              format: date-time
                            validator_address:
                              type: string
                              format: byte
                            validator_index:
                              type: integer
                              format: int32
                            signature:
                              type: string
                              format: byte
                          description: >-
                            Vote represents a prevote, precommit, or commit vote
                            from validators for

                            consensus.
                        total_voting_power:
                          type: string
                          format: int64
                        validator_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                    light_client_attack_evidence:
                      type: object
                      properties:
                        conflicting_block:
                          type: object
                          properties:
                            signed_header:
                              type: object
                              properties:
                                header:
                                  type: object
                                  properties:
                                    version:
                                      title: basic block info
                                      type: object
                                      properties:
                                        block:
                                          type: string
                                          format: uint64
                                        app:
                                          type: string
                                          format: uint64
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                    chain_id:
                                      type: string
                                    height:
                                      type: string
                                      format: int64
                                    time:
                                      type: string
                                      format: date-time
                                    last_block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    last_commit_hash:
                                      type: string
                                      format: byte
                                      title: hashes of block data
                                    data_hash:
                                      type: string
                                      format: byte
                                    validators_hash:
                                      type: string
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                    next_validators_hash:
                                      type: string
                                      format: byte
                                    consensus_hash:
                                      type: string
                                      format: byte
                                    app_hash:
                                      type: string
                                      format: byte
                                    last_results_hash:
                                      type: string
                                      format: byte
                                    evidence_hash:
                                      type: string
                                      format: byte
                                      title: consensus info
                                    proposer_address:
                                      type: string
                                      format: byte
                                  description: >-
                                    Header defines the structure of a Tendermint
                                    block header.
                                commit:
                                  type: object
                                  properties:
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id:
                                      type: object
                                      properties:
                                        hash:
                                          type: string
                                          format: byte
                                        part_set_header:
                                          type: object
                                          properties:
                                            total:
                                              type: integer
                                              format: int64
                                            hash:
                                              type: string
                                              format: byte
                                          title: PartsetHeader
                                      title: BlockID
                                    signatures:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          block_id_flag:
                                            type: string
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            title: >-
                                              BlockIdFlag indicates which BlcokID the
                                              signature is for
                                          validator_address:
                                            type: string
                                            format: byte
                                          timestamp:
                                            type: string
                                            format: date-time
                                          signature:
                                            type: string
                                            format: byte
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                            validator_set:
                              type: object
                              properties:
                                validators:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Tendermint Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                proposer:
                                  type: object
                                  properties:
                                    address:
                                      type: string
                                      format: byte
                                    pub_key:
                                      type: object
                                      properties:
                                        ed25519:
                                          type: string
                                          format: byte
                                        secp256k1:
                                          type: string
                                          format: byte
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Tendermint Validators
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                                total_voting_power:
                                  type: string
                                  format: int64
                        common_height:
                          type: string
                          format: int64
                        byzantine_validators:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                format: byte
                              pub_key:
                                type: object
                                properties:
                                  ed25519:
                                    type: string
                                    format: byte
                                  secp256k1:
                                    type: string
                                    format: byte
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Tendermint Validators
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                        total_voting_power:
                          type: string
                          format: int64
                        timestamp:
                          type: string
                          format: date-time
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
          last_commit:
            type: object
            properties:
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              signatures:
                type: array
                items:
                  type: object
                  properties:
                    block_id_flag:
                      type: string
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      default: BLOCK_ID_FLAG_UNKNOWN
                      title: BlockIdFlag indicates which BlcokID the signature is for
                    validator_address:
                      type: string
                      format: byte
                    timestamp:
                      type: string
                      format: date-time
                    signature:
                      type: string
                      format: byte
                  description: CommitSig is a part of the Vote included in a Commit.
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
        description: |-
          Block is tendermint type Block, with the Header proposer address
          field converted to bech32 string.
    description: >-
      GetLatestBlockResponse is the response type for the Query/GetLatestBlock
      RPC method.
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
    type: object
    properties:
      block_height:
        type: string
        format: int64
      validators:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            pub_key:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
          description: Validator is the type for the validator-set.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      GetLatestValidatorSetResponse is the response type for the
      Query/GetValidatorSetByHeight RPC method.
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
    type: object
    properties:
      default_node_info:
        type: object
        properties:
          protocol_version:
            type: object
            properties:
              p2p:
                type: string
                format: uint64
              block:
                type: string
                format: uint64
              app:
                type: string
                format: uint64
          default_node_id:
            type: string
          listen_addr:
            type: string
          network:
            type: string
          version:
            type: string
          channels:
            type: string
            format: byte
          moniker:
            type: string
          other:
            type: object
            properties:
              tx_index:
                type: string
              rpc_address:
                type: string
      application_version:
        type: object
        properties:
          name:
            type: string
          app_name:
            type: string
          version:
            type: string
          git_commit:
            type: string
          build_tags:
            type: string
          go_version:
            type: string
          build_deps:
            type: array
            items:
              type: object
              properties:
                path:
                  type: string
                  title: module path
                version:
                  type: string
                  title: module version
                sum:
                  type: string
                  title: checksum
              title: Module is the type for VersionInfo
          cosmos_sdk_version:
            type: string
            title: 'Since: cosmos-sdk 0.43'
        description: VersionInfo is the type for the GetNodeInfoResponse message.
    description: >-
      GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC
      method.
  cosmos.base.tendermint.v1beta1.GetSyncingResponse:
    type: object
    properties:
      syncing:
        type: boolean
    description: >-
      GetSyncingResponse is the response type for the Query/GetSyncing RPC
      method.
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
    type: object
    properties:
      block_height:
        type: string
        format: int64
      validators:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            pub_key:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
          description: Validator is the type for the validator-set.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      GetValidatorSetByHeightResponse is the response type for the
      Query/GetValidatorSetByHeight RPC method.
  cosmos.base.tendermint.v1beta1.Header:
    type: object
    properties:
      version:
        title: basic block info
        type: object
        properties:
          block:
            type: string
            format: uint64
          app:
            type: string
            format: uint64
        description: >-
          Consensus captures the consensus rules for processing a block in the
          blockchain,

          including all blockchain data structures and the rules of the
          application's

          state transition machine.
      chain_id:
        type: string
      height:
        type: string
        format: int64
      time:
        type: string
        format: date-time
      last_block_id:
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
        title: BlockID
      last_commit_hash:
        type: string
        format: byte
        title: hashes of block data
      data_hash:
        type: string
        format: byte
      validators_hash:
        type: string
        format: byte
        title: hashes from the app output from the prev block
      next_validators_hash:
        type: string
        format: byte
      consensus_hash:
        type: string
        format: byte
      app_hash:
        type: string
        format: byte
      last_results_hash:
        type: string
        format: byte
      evidence_hash:
        type: string
        format: byte
        title: consensus info
      proposer_address:
        type: string
        description: >-
          proposer_address is the original block proposer address, formatted as
          a Bech32 string.

          In Tendermint, this type is `bytes`, but in the SDK, we convert it to
          a Bech32 string

          for better UX.
    description: Header defines the structure of a Tendermint block header.
  cosmos.base.tendermint.v1beta1.Module:
    type: object
    properties:
      path:
        type: string
        title: module path
      version:
        type: string
        title: module version
      sum:
        type: string
        title: checksum
    title: Module is the type for VersionInfo
  cosmos.base.tendermint.v1beta1.ProofOp:
    type: object
    properties:
      type:
        type: string
      key:
        type: string
        format: byte
      data:
        type: string
        format: byte
    description: >-
      ProofOp defines an operation used for calculating Merkle root. The data
      could

      be arbitrary format, providing necessary data for example neighbouring
      node

      hash.


      Note: This type is a duplicate of the ProofOp proto type defined in
      Tendermint.
  cosmos.base.tendermint.v1beta1.ProofOps:
    type: object
    properties:
      ops:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            key:
              type: string
              format: byte
            data:
              type: string
              format: byte
          description: >-
            ProofOp defines an operation used for calculating Merkle root. The
            data could

            be arbitrary format, providing necessary data for example
            neighbouring node

            hash.


            Note: This type is a duplicate of the ProofOp proto type defined in
            Tendermint.
    description: >-
      ProofOps is Merkle proof defined by the list of ProofOps.


      Note: This type is a duplicate of the ProofOps proto type defined in
      Tendermint.
  cosmos.base.tendermint.v1beta1.Validator:
    type: object
    properties:
      address:
        type: string
      pub_key:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      voting_power:
        type: string
        format: int64
      proposer_priority:
        type: string
        format: int64
    description: Validator is the type for the validator-set.
  cosmos.base.tendermint.v1beta1.VersionInfo:
    type: object
    properties:
      name:
        type: string
      app_name:
        type: string
      version:
        type: string
      git_commit:
        type: string
      build_tags:
        type: string
      go_version:
        type: string
      build_deps:
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              title: module path
            version:
              type: string
              title: module version
            sum:
              type: string
              title: checksum
          title: Module is the type for VersionInfo
      cosmos_sdk_version:
        type: string
        title: 'Since: cosmos-sdk 0.43'
    description: VersionInfo is the type for the GetNodeInfoResponse message.
  tendermint.crypto.PublicKey:
    type: object
    properties:
      ed25519:
        type: string
        format: byte
      secp256k1:
        type: string
        format: byte
    title: PublicKey defines the keys available for use with Tendermint Validators
  tendermint.p2p.DefaultNodeInfo:
    type: object
    properties:
      protocol_version:
        type: object
        properties:
          p2p:
            type: string
            format: uint64
          block:
            type: string
            format: uint64
          app:
            type: string
            format: uint64
      default_node_id:
        type: string
      listen_addr:
        type: string
      network:
        type: string
      version:
        type: string
      channels:
        type: string
        format: byte
      moniker:
        type: string
      other:
        type: object
        properties:
          tx_index:
            type: string
          rpc_address:
            type: string
  tendermint.p2p.DefaultNodeInfoOther:
    type: object
    properties:
      tx_index:
        type: string
      rpc_address:
        type: string
  tendermint.p2p.ProtocolVersion:
    type: object
    properties:
      p2p:
        type: string
        format: uint64
      block:
        type: string
        format: uint64
      app:
        type: string
        format: uint64
  tendermint.types.Block:
    type: object
    properties:
      header:
        type: object
        properties:
          version:
            title: basic block info
            type: object
            properties:
              block:
                type: string
                format: uint64
              app:
                type: string
                format: uint64
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
          chain_id:
            type: string
          height:
            type: string
            format: int64
          time:
            type: string
            format: date-time
          last_block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          last_commit_hash:
            type: string
            format: byte
            title: hashes of block data
          data_hash:
            type: string
            format: byte
          validators_hash:
            type: string
            format: byte
            title: hashes from the app output from the prev block
          next_validators_hash:
            type: string
            format: byte
          consensus_hash:
            type: string
            format: byte
          app_hash:
            type: string
            format: byte
          last_results_hash:
            type: string
            format: byte
          evidence_hash:
            type: string
            format: byte
            title: consensus info
          proposer_address:
            type: string
            format: byte
        description: Header defines the structure of a Tendermint block header.
      data:
        type: object
        properties:
          txs:
            type: array
            items:
              type: string
              format: byte
            description: >-
              Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We're just agreeing on the
              order first.

              This means that block.AppHash does not include these txs.
        title: Data contains the set of transactions included in the block
      evidence:
        type: object
        properties:
          evidence:
            type: array
            items:
              type: object
              properties:
                duplicate_vote_evidence:
                  type: object
                  properties:
                    vote_a:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          type: object
                          properties:
                            hash:
                              type: string
                              format: byte
                            part_set_header:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  type: string
                                  format: byte
                              title: PartsetHeader
                          title: BlockID
                        timestamp:
                          type: string
                          format: date-time
                        validator_address:
                          type: string
                          format: byte
                        validator_index:
                          type: integer
                          format: int32
                        signature:
                          type: string
                          format: byte
                      description: >-
                        Vote represents a prevote, precommit, or commit vote
                        from validators for

                        consensus.
                    vote_b:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          type: object
                          properties:
                            hash:
                              type: string
                              format: byte
                            part_set_header:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  type: string
                                  format: byte
                              title: PartsetHeader
                          title: BlockID
                        timestamp:
                          type: string
                          format: date-time
                        validator_address:
                          type: string
                          format: byte
                        validator_index:
                          type: integer
                          format: int32
                        signature:
                          type: string
                          format: byte
                      description: >-
                        Vote represents a prevote, precommit, or commit vote
                        from validators for

                        consensus.
                    total_voting_power:
                      type: string
                      format: int64
                    validator_power:
                      type: string
                      format: int64
                    timestamp:
                      type: string
                      format: date-time
                  description: >-
                    DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting votes.
                light_client_attack_evidence:
                  type: object
                  properties:
                    conflicting_block:
                      type: object
                      properties:
                        signed_header:
                          type: object
                          properties:
                            header:
                              type: object
                              properties:
                                version:
                                  title: basic block info
                                  type: object
                                  properties:
                                    block:
                                      type: string
                                      format: uint64
                                    app:
                                      type: string
                                      format: uint64
                                  description: >-
                                    Consensus captures the consensus rules for
                                    processing a block in the blockchain,

                                    including all blockchain data structures and
                                    the rules of the application's

                                    state transition machine.
                                chain_id:
                                  type: string
                                height:
                                  type: string
                                  format: int64
                                time:
                                  type: string
                                  format: date-time
                                last_block_id:
                                  type: object
                                  properties:
                                    hash:
                                      type: string
                                      format: byte
                                    part_set_header:
                                      type: object
                                      properties:
                                        total:
                                          type: integer
                                          format: int64
                                        hash:
                                          type: string
                                          format: byte
                                      title: PartsetHeader
                                  title: BlockID
                                last_commit_hash:
                                  type: string
                                  format: byte
                                  title: hashes of block data
                                data_hash:
                                  type: string
                                  format: byte
                                validators_hash:
                                  type: string
                                  format: byte
                                  title: >-
                                    hashes from the app output from the prev
                                    block
                                next_validators_hash:
                                  type: string
                                  format: byte
                                consensus_hash:
                                  type: string
                                  format: byte
                                app_hash:
                                  type: string
                                  format: byte
                                last_results_hash:
                                  type: string
                                  format: byte
                                evidence_hash:
                                  type: string
                                  format: byte
                                  title: consensus info
                                proposer_address:
                                  type: string
                                  format: byte
                              description: >-
                                Header defines the structure of a Tendermint
                                block header.
                            commit:
                              type: object
                              properties:
                                height:
                                  type: string
                                  format: int64
                                round:
                                  type: integer
                                  format: int32
                                block_id:
                                  type: object
                                  properties:
                                    hash:
                                      type: string
                                      format: byte
                                    part_set_header:
                                      type: object
                                      properties:
                                        total:
                                          type: integer
                                          format: int64
                                        hash:
                                          type: string
                                          format: byte
                                      title: PartsetHeader
                                  title: BlockID
                                signatures:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      block_id_flag:
                                        type: string
                                        enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        title: >-
                                          BlockIdFlag indicates which BlcokID the
                                          signature is for
                                      validator_address:
                                        type: string
                                        format: byte
                                      timestamp:
                                        type: string
                                        format: date-time
                                      signature:
                                        type: string
                                        format: byte
                                    description: >-
                                      CommitSig is a part of the Vote included
                                      in a Commit.
                              description: >-
                                Commit contains the evidence that a block was
                                committed by a set of validators.
                        validator_set:
                          type: object
                          properties:
                            validators:
                              type: array
                              items:
                                type: object
                                properties:
                                  address:
                                    type: string
                                    format: byte
                                  pub_key:
                                    type: object
                                    properties:
                                      ed25519:
                                        type: string
                                        format: byte
                                      secp256k1:
                                        type: string
                                        format: byte
                                    title: >-
                                      PublicKey defines the keys available for
                                      use with Tendermint Validators
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                            proposer:
                              type: object
                              properties:
                                address:
                                  type: string
                                  format: byte
                                pub_key:
                                  type: object
                                  properties:
                                    ed25519:
                                      type: string
                                      format: byte
                                    secp256k1:
                                      type: string
                                      format: byte
                                  title: >-
                                    PublicKey defines the keys available for use
                                    with Tendermint Validators
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                            total_voting_power:
                              type: string
                              format: int64
                    common_height:
                      type: string
                      format: int64
                    byzantine_validators:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            format: byte
                          pub_key:
                            type: object
                            properties:
                              ed25519:
                                type: string
                                format: byte
                              secp256k1:
                                type: string
                                format: byte
                            title: >-
                              PublicKey defines the keys available for use with
                              Tendermint Validators
                          voting_power:
                            type: string
                            format: int64
                          proposer_priority:
                            type: string
                            format: int64
                    total_voting_power:
                      type: string
                      format: int64
                    timestamp:
                      type: string
                      format: date-time
                  description: >-
                    LightClientAttackEvidence contains evidence of a set of
                    validators attempting to mislead a light client.
      last_commit:
        type: object
        properties:
          height:
            type: string
            format: int64
          round:
            type: integer
            format: int32
          block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          signatures:
            type: array
            items:
              type: object
              properties:
                block_id_flag:
                  type: string
                  enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  default: BLOCK_ID_FLAG_UNKNOWN
                  title: BlockIdFlag indicates which BlcokID the signature is for
                validator_address:
                  type: string
                  format: byte
                timestamp:
                  type: string
                  format: date-time
                signature:
                  type: string
                  format: byte
              description: CommitSig is a part of the Vote included in a Commit.
        description: >-
          Commit contains the evidence that a block was committed by a set of
          validators.
  tendermint.types.BlockID:
    type: object
    properties:
      hash:
        type: string
        format: byte
      part_set_header:
        type: object
        properties:
          total:
            type: integer
            format: int64
          hash:
            type: string
            format: byte
        title: PartsetHeader
    title: BlockID
  tendermint.types.BlockIDFlag:
    type: string
    enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
    default: BLOCK_ID_FLAG_UNKNOWN
    title: BlockIdFlag indicates which BlcokID the signature is for
  tendermint.types.Commit:
    type: object
    properties:
      height:
        type: string
        format: int64
      round:
        type: integer
        format: int32
      block_id:
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
        title: BlockID
      signatures:
        type: array
        items:
          type: object
          properties:
            block_id_flag:
              type: string
              enum:
                - BLOCK_ID_FLAG_UNKNOWN
                - BLOCK_ID_FLAG_ABSENT
                - BLOCK_ID_FLAG_COMMIT
                - BLOCK_ID_FLAG_NIL
              default: BLOCK_ID_FLAG_UNKNOWN
              title: BlockIdFlag indicates which BlcokID the signature is for
            validator_address:
              type: string
              format: byte
            timestamp:
              type: string
              format: date-time
            signature:
              type: string
              format: byte
          description: CommitSig is a part of the Vote included in a Commit.
    description: >-
      Commit contains the evidence that a block was committed by a set of
      validators.
  tendermint.types.CommitSig:
    type: object
    properties:
      block_id_flag:
        type: string
        enum:
          - BLOCK_ID_FLAG_UNKNOWN
          - BLOCK_ID_FLAG_ABSENT
          - BLOCK_ID_FLAG_COMMIT
          - BLOCK_ID_FLAG_NIL
        default: BLOCK_ID_FLAG_UNKNOWN
        title: BlockIdFlag indicates which BlcokID the signature is for
      validator_address:
        type: string
        format: byte
      timestamp:
        type: string
        format: date-time
      signature:
        type: string
        format: byte
    description: CommitSig is a part of the Vote included in a Commit.
  tendermint.types.Data:
    type: object
    properties:
      txs:
        type: array
        items:
          type: string
          format: byte
        description: >-
          Txs that will be applied by state @ block.Height+1.

          NOTE: not all txs here are valid.  We're just agreeing on the order
          first.

          This means that block.AppHash does not include these txs.
    title: Data contains the set of transactions included in the block
  tendermint.types.DuplicateVoteEvidence:
    type: object
    properties:
      vote_a:
        type: object
        properties:
          type:
            type: string
            enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            default: SIGNED_MSG_TYPE_UNKNOWN
            description: |-
              SignedMsgType is a type of signed message in the consensus.

               - SIGNED_MSG_TYPE_PREVOTE: Votes
               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
          height:
            type: string
            format: int64
          round:
            type: integer
            format: int32
          block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          timestamp:
            type: string
            format: date-time
          validator_address:
            type: string
            format: byte
          validator_index:
            type: integer
            format: int32
          signature:
            type: string
            format: byte
        description: >-
          Vote represents a prevote, precommit, or commit vote from validators
          for

          consensus.
      vote_b:
        type: object
        properties:
          type:
            type: string
            enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            default: SIGNED_MSG_TYPE_UNKNOWN
            description: |-
              SignedMsgType is a type of signed message in the consensus.

               - SIGNED_MSG_TYPE_PREVOTE: Votes
               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
          height:
            type: string
            format: int64
          round:
            type: integer
            format: int32
          block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          timestamp:
            type: string
            format: date-time
          validator_address:
            type: string
            format: byte
          validator_index:
            type: integer
            format: int32
          signature:
            type: string
            format: byte
        description: >-
          Vote represents a prevote, precommit, or commit vote from validators
          for

          consensus.
      total_voting_power:
        type: string
        format: int64
      validator_power:
        type: string
        format: int64
      timestamp:
        type: string
        format: date-time
    description: >-
      DuplicateVoteEvidence contains evidence of a validator signed two
      conflicting votes.
  tendermint.types.Evidence:
    type: object
    properties:
      duplicate_vote_evidence:
        type: object
        properties:
          vote_a:
            type: object
            properties:
              type:
                type: string
                enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                default: SIGNED_MSG_TYPE_UNKNOWN
                description: |-
                  SignedMsgType is a type of signed message in the consensus.

                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              timestamp:
                type: string
                format: date-time
              validator_address:
                type: string
                format: byte
              validator_index:
                type: integer
                format: int32
              signature:
                type: string
                format: byte
            description: >-
              Vote represents a prevote, precommit, or commit vote from
              validators for

              consensus.
          vote_b:
            type: object
            properties:
              type:
                type: string
                enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                default: SIGNED_MSG_TYPE_UNKNOWN
                description: |-
                  SignedMsgType is a type of signed message in the consensus.

                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              timestamp:
                type: string
                format: date-time
              validator_address:
                type: string
                format: byte
              validator_index:
                type: integer
                format: int32
              signature:
                type: string
                format: byte
            description: >-
              Vote represents a prevote, precommit, or commit vote from
              validators for

              consensus.
          total_voting_power:
            type: string
            format: int64
          validator_power:
            type: string
            format: int64
          timestamp:
            type: string
            format: date-time
        description: >-
          DuplicateVoteEvidence contains evidence of a validator signed two
          conflicting votes.
      light_client_attack_evidence:
        type: object
        properties:
          conflicting_block:
            type: object
            properties:
              signed_header:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        format: byte
                    description: Header defines the structure of a Tendermint block header.
                  commit:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      signatures:
                        type: array
                        items:
                          type: object
                          properties:
                            block_id_flag:
                              type: string
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              default: BLOCK_ID_FLAG_UNKNOWN
                              title: >-
                                BlockIdFlag indicates which BlcokID the
                                signature is for
                            validator_address:
                              type: string
                              format: byte
                            timestamp:
                              type: string
                              format: date-time
                            signature:
                              type: string
                              format: byte
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
              validator_set:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          format: byte
                        pub_key:
                          type: object
                          properties:
                            ed25519:
                              type: string
                              format: byte
                            secp256k1:
                              type: string
                              format: byte
                          title: >-
                            PublicKey defines the keys available for use with
                            Tendermint Validators
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                  proposer:
                    type: object
                    properties:
                      address:
                        type: string
                        format: byte
                      pub_key:
                        type: object
                        properties:
                          ed25519:
                            type: string
                            format: byte
                          secp256k1:
                            type: string
                            format: byte
                        title: >-
                          PublicKey defines the keys available for use with
                          Tendermint Validators
                      voting_power:
                        type: string
                        format: int64
                      proposer_priority:
                        type: string
                        format: int64
                  total_voting_power:
                    type: string
                    format: int64
          common_height:
            type: string
            format: int64
          byzantine_validators:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                  format: byte
                pub_key:
                  type: object
                  properties:
                    ed25519:
                      type: string
                      format: byte
                    secp256k1:
                      type: string
                      format: byte
                  title: >-
                    PublicKey defines the keys available for use with Tendermint
                    Validators
                voting_power:
                  type: string
                  format: int64
                proposer_priority:
                  type: string
                  format: int64
          total_voting_power:
            type: string
            format: int64
          timestamp:
            type: string
            format: date-time
        description: >-
          LightClientAttackEvidence contains evidence of a set of validators
          attempting to mislead a light client.
  tendermint.types.EvidenceList:
    type: object
    properties:
      evidence:
        type: array
        items:
          type: object
          properties:
            duplicate_vote_evidence:
              type: object
              properties:
                vote_a:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      default: SIGNED_MSG_TYPE_UNKNOWN
                      description: >-
                        SignedMsgType is a type of signed message in the
                        consensus.

                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                    height:
                      type: string
                      format: int64
                    round:
                      type: integer
                      format: int32
                    block_id:
                      type: object
                      properties:
                        hash:
                          type: string
                          format: byte
                        part_set_header:
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              type: string
                              format: byte
                          title: PartsetHeader
                      title: BlockID
                    timestamp:
                      type: string
                      format: date-time
                    validator_address:
                      type: string
                      format: byte
                    validator_index:
                      type: integer
                      format: int32
                    signature:
                      type: string
                      format: byte
                  description: >-
                    Vote represents a prevote, precommit, or commit vote from
                    validators for

                    consensus.
                vote_b:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      default: SIGNED_MSG_TYPE_UNKNOWN
                      description: >-
                        SignedMsgType is a type of signed message in the
                        consensus.

                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                    height:
                      type: string
                      format: int64
                    round:
                      type: integer
                      format: int32
                    block_id:
                      type: object
                      properties:
                        hash:
                          type: string
                          format: byte
                        part_set_header:
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              type: string
                              format: byte
                          title: PartsetHeader
                      title: BlockID
                    timestamp:
                      type: string
                      format: date-time
                    validator_address:
                      type: string
                      format: byte
                    validator_index:
                      type: integer
                      format: int32
                    signature:
                      type: string
                      format: byte
                  description: >-
                    Vote represents a prevote, precommit, or commit vote from
                    validators for

                    consensus.
                total_voting_power:
                  type: string
                  format: int64
                validator_power:
                  type: string
                  format: int64
                timestamp:
                  type: string
                  format: date-time
              description: >-
                DuplicateVoteEvidence contains evidence of a validator signed
                two conflicting votes.
            light_client_attack_evidence:
              type: object
              properties:
                conflicting_block:
                  type: object
                  properties:
                    signed_header:
                      type: object
                      properties:
                        header:
                          type: object
                          properties:
                            version:
                              title: basic block info
                              type: object
                              properties:
                                block:
                                  type: string
                                  format: uint64
                                app:
                                  type: string
                                  format: uint64
                              description: >-
                                Consensus captures the consensus rules for
                                processing a block in the blockchain,

                                including all blockchain data structures and the
                                rules of the application's

                                state transition machine.
                            chain_id:
                              type: string
                            height:
                              type: string
                              format: int64
                            time:
                              type: string
                              format: date-time
                            last_block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            last_commit_hash:
                              type: string
                              format: byte
                              title: hashes of block data
                            data_hash:
                              type: string
                              format: byte
                            validators_hash:
                              type: string
                              format: byte
                              title: hashes from the app output from the prev block
                            next_validators_hash:
                              type: string
                              format: byte
                            consensus_hash:
                              type: string
                              format: byte
                            app_hash:
                              type: string
                              format: byte
                            last_results_hash:
                              type: string
                              format: byte
                            evidence_hash:
                              type: string
                              format: byte
                              title: consensus info
                            proposer_address:
                              type: string
                              format: byte
                          description: >-
                            Header defines the structure of a Tendermint block
                            header.
                        commit:
                          type: object
                          properties:
                            height:
                              type: string
                              format: int64
                            round:
                              type: integer
                              format: int32
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  format: byte
                                part_set_header:
                                  type: object
                                  properties:
                                    total:
                                      type: integer
                                      format: int64
                                    hash:
                                      type: string
                                      format: byte
                                  title: PartsetHeader
                              title: BlockID
                            signatures:
                              type: array
                              items:
                                type: object
                                properties:
                                  block_id_flag:
                                    type: string
                                    enum:
                                      - BLOCK_ID_FLAG_UNKNOWN
                                      - BLOCK_ID_FLAG_ABSENT
                                      - BLOCK_ID_FLAG_COMMIT
                                      - BLOCK_ID_FLAG_NIL
                                    default: BLOCK_ID_FLAG_UNKNOWN
                                    title: >-
                                      BlockIdFlag indicates which BlcokID the
                                      signature is for
                                  validator_address:
                                    type: string
                                    format: byte
                                  timestamp:
                                    type: string
                                    format: date-time
                                  signature:
                                    type: string
                                    format: byte
                                description: >-
                                  CommitSig is a part of the Vote included in a
                                  Commit.
                          description: >-
                            Commit contains the evidence that a block was
                            committed by a set of validators.
                    validator_set:
                      type: object
                      properties:
                        validators:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                format: byte
                              pub_key:
                                type: object
                                properties:
                                  ed25519:
                                    type: string
                                    format: byte
                                  secp256k1:
                                    type: string
                                    format: byte
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Tendermint Validators
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                        proposer:
                          type: object
                          properties:
                            address:
                              type: string
                              format: byte
                            pub_key:
                              type: object
                              properties:
                                ed25519:
                                  type: string
                                  format: byte
                                secp256k1:
                                  type: string
                                  format: byte
                              title: >-
                                PublicKey defines the keys available for use
                                with Tendermint Validators
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                        total_voting_power:
                          type: string
                          format: int64
                common_height:
                  type: string
                  format: int64
                byzantine_validators:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                        format: byte
                      pub_key:
                        type: object
                        properties:
                          ed25519:
                            type: string
                            format: byte
                          secp256k1:
                            type: string
                            format: byte
                        title: >-
                          PublicKey defines the keys available for use with
                          Tendermint Validators
                      voting_power:
                        type: string
                        format: int64
                      proposer_priority:
                        type: string
                        format: int64
                total_voting_power:
                  type: string
                  format: int64
                timestamp:
                  type: string
                  format: date-time
              description: >-
                LightClientAttackEvidence contains evidence of a set of
                validators attempting to mislead a light client.
  tendermint.types.Header:
    type: object
    properties:
      version:
        title: basic block info
        type: object
        properties:
          block:
            type: string
            format: uint64
          app:
            type: string
            format: uint64
        description: >-
          Consensus captures the consensus rules for processing a block in the
          blockchain,

          including all blockchain data structures and the rules of the
          application's

          state transition machine.
      chain_id:
        type: string
      height:
        type: string
        format: int64
      time:
        type: string
        format: date-time
      last_block_id:
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
        title: BlockID
      last_commit_hash:
        type: string
        format: byte
        title: hashes of block data
      data_hash:
        type: string
        format: byte
      validators_hash:
        type: string
        format: byte
        title: hashes from the app output from the prev block
      next_validators_hash:
        type: string
        format: byte
      consensus_hash:
        type: string
        format: byte
      app_hash:
        type: string
        format: byte
      last_results_hash:
        type: string
        format: byte
      evidence_hash:
        type: string
        format: byte
        title: consensus info
      proposer_address:
        type: string
        format: byte
    description: Header defines the structure of a Tendermint block header.
  tendermint.types.LightBlock:
    type: object
    properties:
      signed_header:
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                format: byte
            description: Header defines the structure of a Tendermint block header.
          commit:
            type: object
            properties:
              height:
                type: string
                format: int64
              round:
                type: integer
                format: int32
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              signatures:
                type: array
                items:
                  type: object
                  properties:
                    block_id_flag:
                      type: string
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      default: BLOCK_ID_FLAG_UNKNOWN
                      title: BlockIdFlag indicates which BlcokID the signature is for
                    validator_address:
                      type: string
                      format: byte
                    timestamp:
                      type: string
                      format: date-time
                    signature:
                      type: string
                      format: byte
                  description: CommitSig is a part of the Vote included in a Commit.
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
      validator_set:
        type: object
        properties:
          validators:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                  format: byte
                pub_key:
                  type: object
                  properties:
                    ed25519:
                      type: string
                      format: byte
                    secp256k1:
                      type: string
                      format: byte
                  title: >-
                    PublicKey defines the keys available for use with Tendermint
                    Validators
                voting_power:
                  type: string
                  format: int64
                proposer_priority:
                  type: string
                  format: int64
          proposer:
            type: object
            properties:
              address:
                type: string
                format: byte
              pub_key:
                type: object
                properties:
                  ed25519:
                    type: string
                    format: byte
                  secp256k1:
                    type: string
                    format: byte
                title: >-
                  PublicKey defines the keys available for use with Tendermint
                  Validators
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
          total_voting_power:
            type: string
            format: int64
  tendermint.types.LightClientAttackEvidence:
    type: object
    properties:
      conflicting_block:
        type: object
        properties:
          signed_header:
            type: object
            properties:
              header:
                type: object
                properties:
                  version:
                    title: basic block info
                    type: object
                    properties:
                      block:
                        type: string
                        format: uint64
                      app:
                        type: string
                        format: uint64
                    description: >-
                      Consensus captures the consensus rules for processing a
                      block in the blockchain,

                      including all blockchain data structures and the rules of
                      the application's

                      state transition machine.
                  chain_id:
                    type: string
                  height:
                    type: string
                    format: int64
                  time:
                    type: string
                    format: date-time
                  last_block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        format: byte
                      part_set_header:
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            type: string
                            format: byte
                        title: PartsetHeader
                    title: BlockID
                  last_commit_hash:
                    type: string
                    format: byte
                    title: hashes of block data
                  data_hash:
                    type: string
                    format: byte
                  validators_hash:
                    type: string
                    format: byte
                    title: hashes from the app output from the prev block
                  next_validators_hash:
                    type: string
                    format: byte
                  consensus_hash:
                    type: string
                    format: byte
                  app_hash:
                    type: string
                    format: byte
                  last_results_hash:
                    type: string
                    format: byte
                  evidence_hash:
                    type: string
                    format: byte
                    title: consensus info
                  proposer_address:
                    type: string
                    format: byte
                description: Header defines the structure of a Tendermint block header.
              commit:
                type: object
                properties:
                  height:
                    type: string
                    format: int64
                  round:
                    type: integer
                    format: int32
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        format: byte
                      part_set_header:
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            type: string
                            format: byte
                        title: PartsetHeader
                    title: BlockID
                  signatures:
                    type: array
                    items:
                      type: object
                      properties:
                        block_id_flag:
                          type: string
                          enum:
                            - BLOCK_ID_FLAG_UNKNOWN
                            - BLOCK_ID_FLAG_ABSENT
                            - BLOCK_ID_FLAG_COMMIT
                            - BLOCK_ID_FLAG_NIL
                          default: BLOCK_ID_FLAG_UNKNOWN
                          title: >-
                            BlockIdFlag indicates which BlcokID the signature is
                            for
                        validator_address:
                          type: string
                          format: byte
                        timestamp:
                          type: string
                          format: date-time
                        signature:
                          type: string
                          format: byte
                      description: CommitSig is a part of the Vote included in a Commit.
                description: >-
                  Commit contains the evidence that a block was committed by a
                  set of validators.
          validator_set:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      format: byte
                    pub_key:
                      type: object
                      properties:
                        ed25519:
                          type: string
                          format: byte
                        secp256k1:
                          type: string
                          format: byte
                      title: >-
                        PublicKey defines the keys available for use with
                        Tendermint Validators
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
              proposer:
                type: object
                properties:
                  address:
                    type: string
                    format: byte
                  pub_key:
                    type: object
                    properties:
                      ed25519:
                        type: string
                        format: byte
                      secp256k1:
                        type: string
                        format: byte
                    title: >-
                      PublicKey defines the keys available for use with
                      Tendermint Validators
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
              total_voting_power:
                type: string
                format: int64
      common_height:
        type: string
        format: int64
      byzantine_validators:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              format: byte
            pub_key:
              type: object
              properties:
                ed25519:
                  type: string
                  format: byte
                secp256k1:
                  type: string
                  format: byte
              title: >-
                PublicKey defines the keys available for use with Tendermint
                Validators
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
      total_voting_power:
        type: string
        format: int64
      timestamp:
        type: string
        format: date-time
    description: >-
      LightClientAttackEvidence contains evidence of a set of validators
      attempting to mislead a light client.
  tendermint.types.PartSetHeader:
    type: object
    properties:
      total:
        type: integer
        format: int64
      hash:
        type: string
        format: byte
    title: PartsetHeader
  tendermint.types.SignedHeader:
    type: object
    properties:
      header:
        type: object
        properties:
          version:
            title: basic block info
            type: object
            properties:
              block:
                type: string
                format: uint64
              app:
                type: string
                format: uint64
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
          chain_id:
            type: string
          height:
            type: string
            format: int64
          time:
            type: string
            format: date-time
          last_block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          last_commit_hash:
            type: string
            format: byte
            title: hashes of block data
          data_hash:
            type: string
            format: byte
          validators_hash:
            type: string
            format: byte
            title: hashes from the app output from the prev block
          next_validators_hash:
            type: string
            format: byte
          consensus_hash:
            type: string
            format: byte
          app_hash:
            type: string
            format: byte
          last_results_hash:
            type: string
            format: byte
          evidence_hash:
            type: string
            format: byte
            title: consensus info
          proposer_address:
            type: string
            format: byte
        description: Header defines the structure of a Tendermint block header.
      commit:
        type: object
        properties:
          height:
            type: string
            format: int64
          round:
            type: integer
            format: int32
          block_id:
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
            title: BlockID
          signatures:
            type: array
            items:
              type: object
              properties:
                block_id_flag:
                  type: string
                  enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  default: BLOCK_ID_FLAG_UNKNOWN
                  title: BlockIdFlag indicates which BlcokID the signature is for
                validator_address:
                  type: string
                  format: byte
                timestamp:
                  type: string
                  format: date-time
                signature:
                  type: string
                  format: byte
              description: CommitSig is a part of the Vote included in a Commit.
        description: >-
          Commit contains the evidence that a block was committed by a set of
          validators.
  tendermint.types.SignedMsgType:
    type: string
    enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
    default: SIGNED_MSG_TYPE_UNKNOWN
    description: |-
      SignedMsgType is a type of signed message in the consensus.

       - SIGNED_MSG_TYPE_PREVOTE: Votes
       - SIGNED_MSG_TYPE_PROPOSAL: Proposals
  tendermint.types.Validator:
    type: object
    properties:
      address:
        type: string
        format: byte
      pub_key:
        type: object
        properties:
          ed25519:
            type: string
            format: byte
          secp256k1:
            type: string
            format: byte
        title: >-
          PublicKey defines the keys available for use with Tendermint
          Validators
      voting_power:
        type: string
        format: int64
      proposer_priority:
        type: string
        format: int64
  tendermint.types.ValidatorSet:
    type: object
    properties:
      validators:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              format: byte
            pub_key:
              type: object
              properties:
                ed25519:
                  type: string
                  format: byte
                secp256k1:
                  type: string
                  format: byte
              title: >-
                PublicKey defines the keys available for use with Tendermint
                Validators
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
      proposer:
        type: object
        properties:
          address:
            type: string
            format: byte
          pub_key:
            type: object
            properties:
              ed25519:
                type: string
                format: byte
              secp256k1:
                type: string
                format: byte
            title: >-
              PublicKey defines the keys available for use with Tendermint
              Validators
          voting_power:
            type: string
            format: int64
          proposer_priority:
            type: string
            format: int64
      total_voting_power:
        type: string
        format: int64
  tendermint.types.Vote:
    type: object
    properties:
      type:
        type: string
        enum:
          - SIGNED_MSG_TYPE_UNKNOWN
          - SIGNED_MSG_TYPE_PREVOTE
          - SIGNED_MSG_TYPE_PRECOMMIT
          - SIGNED_MSG_TYPE_PROPOSAL
        default: SIGNED_MSG_TYPE_UNKNOWN
        description: |-
          SignedMsgType is a type of signed message in the consensus.

           - SIGNED_MSG_TYPE_PREVOTE: Votes
           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
      height:
        type: string
        format: int64
      round:
        type: integer
        format: int32
      block_id:
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
        title: BlockID
      timestamp:
        type: string
        format: date-time
      validator_address:
        type: string
        format: byte
      validator_index:
        type: integer
        format: int32
      signature:
        type: string
        format: byte
    description: |-
      Vote represents a prevote, precommit, or commit vote from validators for
      consensus.
  tendermint.version.Consensus:
    type: object
    properties:
      block:
        type: string
        format: uint64
      app:
        type: string
        format: uint64
    description: >-
      Consensus captures the consensus rules for processing a block in the
      blockchain,

      including all blockchain data structures and the rules of the
      application's

      state transition machine.
  cosmos.consensus.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: >-
          params are the tendermint consensus params stored in the consensus
          module.

          Please note that `params.version` is not populated in this response,
          it is

          tracked separately in the x/upgrade module.
        type: object
        properties:
          block:
            type: object
            properties:
              max_bytes:
                type: string
                format: int64
                title: |-
                  Max block size, in bytes.
                  Note: must be greater than 0
              max_gas:
                type: string
                format: int64
                title: |-
                  Max gas per block.
                  Note: must be greater or equal to -1
              time_iota_ms:
                type: string
                format: int64
                description: >-
                  Minimum time increment between consecutive blocks (in
                  milliseconds) If the

                  block header timestamp is ahead of the system clock, decrease
                  this value.


                  Not exposed to the application.
            description: BlockParams contains limits on the block size.
          evidence:
            type: object
            properties:
              max_age_num_blocks:
                type: string
                format: int64
                description: >-
                  Max age of evidence, in blocks.


                  The basic formula for calculating this is: MaxAgeDuration /
                  {average block

                  time}.
              max_age_duration:
                type: string
                description: >-
                  Max age of evidence, in time.


                  It should correspond with an app's "unbonding period" or other
                  similar

                  mechanism for handling [Nothing-At-Stake

                  attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
              max_bytes:
                type: string
                format: int64
                title: >-
                  This sets the maximum size of total evidence in bytes that can
                  be committed in a single block.

                  and should fall comfortably under the max block bytes.

                  Default is 1048576 or 1MB
            description: EvidenceParams determine how we handle evidence of malfeasance.
          validator:
            type: object
            properties:
              pub_key_types:
                type: array
                items:
                  type: string
            description: |-
              ValidatorParams restrict the public key types validators can use.
              NOTE: uses ABCI pubkey naming, not Amino names.
          version:
            type: object
            properties:
              app_version:
                type: string
                format: uint64
            description: VersionParams contains the ABCI application version.
    description: >-
      QueryParamsResponse defines the response type for querying x/consensus
      parameters.
  tendermint.types.BlockParams:
    type: object
    properties:
      max_bytes:
        type: string
        format: int64
        title: |-
          Max block size, in bytes.
          Note: must be greater than 0
      max_gas:
        type: string
        format: int64
        title: |-
          Max gas per block.
          Note: must be greater or equal to -1
      time_iota_ms:
        type: string
        format: int64
        description: >-
          Minimum time increment between consecutive blocks (in milliseconds) If
          the

          block header timestamp is ahead of the system clock, decrease this
          value.


          Not exposed to the application.
    description: BlockParams contains limits on the block size.
  tendermint.types.ConsensusParams:
    type: object
    properties:
      block:
        type: object
        properties:
          max_bytes:
            type: string
            format: int64
            title: |-
              Max block size, in bytes.
              Note: must be greater than 0
          max_gas:
            type: string
            format: int64
            title: |-
              Max gas per block.
              Note: must be greater or equal to -1
          time_iota_ms:
            type: string
            format: int64
            description: >-
              Minimum time increment between consecutive blocks (in
              milliseconds) If the

              block header timestamp is ahead of the system clock, decrease this
              value.


              Not exposed to the application.
        description: BlockParams contains limits on the block size.
      evidence:
        type: object
        properties:
          max_age_num_blocks:
            type: string
            format: int64
            description: >-
              Max age of evidence, in blocks.


              The basic formula for calculating this is: MaxAgeDuration /
              {average block

              time}.
          max_age_duration:
            type: string
            description: >-
              Max age of evidence, in time.


              It should correspond with an app's "unbonding period" or other
              similar

              mechanism for handling [Nothing-At-Stake

              attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
          max_bytes:
            type: string
            format: int64
            title: >-
              This sets the maximum size of total evidence in bytes that can be
              committed in a single block.

              and should fall comfortably under the max block bytes.

              Default is 1048576 or 1MB
        description: EvidenceParams determine how we handle evidence of malfeasance.
      validator:
        type: object
        properties:
          pub_key_types:
            type: array
            items:
              type: string
        description: |-
          ValidatorParams restrict the public key types validators can use.
          NOTE: uses ABCI pubkey naming, not Amino names.
      version:
        type: object
        properties:
          app_version:
            type: string
            format: uint64
        description: VersionParams contains the ABCI application version.
    description: |-
      ConsensusParams contains consensus critical parameters that determine the
      validity of blocks.
  tendermint.types.EvidenceParams:
    type: object
    properties:
      max_age_num_blocks:
        type: string
        format: int64
        description: >-
          Max age of evidence, in blocks.


          The basic formula for calculating this is: MaxAgeDuration / {average
          block

          time}.
      max_age_duration:
        type: string
        description: >-
          Max age of evidence, in time.


          It should correspond with an app's "unbonding period" or other similar

          mechanism for handling [Nothing-At-Stake

          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
      max_bytes:
        type: string
        format: int64
        title: >-
          This sets the maximum size of total evidence in bytes that can be
          committed in a single block.

          and should fall comfortably under the max block bytes.

          Default is 1048576 or 1MB
    description: EvidenceParams determine how we handle evidence of malfeasance.
  tendermint.types.ValidatorParams:
    type: object
    properties:
      pub_key_types:
        type: array
        items:
          type: string
    description: |-
      ValidatorParams restrict the public key types validators can use.
      NOTE: uses ABCI pubkey naming, not Amino names.
  tendermint.types.VersionParams:
    type: object
    properties:
      app_version:
        type: string
        format: uint64
    description: VersionParams contains the ABCI application version.
  cosmos.base.v1beta1.DecCoin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
  cosmos.distribution.v1beta1.DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        type: string
      reward:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    description: |-
      DelegationDelegatorReward represents the properties
      of a delegator's delegation reward.
  cosmos.distribution.v1beta1.Params:
    type: object
    properties:
      community_tax:
        type: string
      base_proposer_reward:
        type: string
        description: >-
          Deprecated: The base_proposer_reward field is deprecated and is no
          longer used

          in the x/distribution module's reward mechanism.
      bonus_proposer_reward:
        type: string
        description: >-
          Deprecated: The bonus_proposer_reward field is deprecated and is no
          longer used

          in the x/distribution module's reward mechanism.
      withdraw_addr_enabled:
        type: boolean
    description: Params defines the set of params for the distribution module.
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
    type: object
    properties:
      pool:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: pool defines community pool's coins.
    description: >-
      QueryCommunityPoolResponse is the response type for the
      Query/CommunityPool

      RPC method.
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: rewards defines the rewards accrued by a delegation.
    description: |-
      QueryDelegationRewardsResponse is the response type for the
      Query/DelegationRewards RPC method.
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            validator_address:
              type: string
            reward:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
          description: |-
            DelegationDelegatorReward represents the properties
            of a delegator's delegation reward.
        description: rewards defines all the rewards accrued by a delegator.
      total:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: total defines the sum of all the rewards.
    description: |-
      QueryDelegationTotalRewardsResponse is the response type for the
      Query/DelegationTotalRewards RPC method.
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: string
        description: validators defines the validators a delegator is delegating for.
    description: |-
      QueryDelegatorValidatorsResponse is the response type for the
      Query/DelegatorValidators RPC method.
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
    type: object
    properties:
      withdraw_address:
        type: string
        description: withdraw_address defines the delegator address to query for.
    description: |-
      QueryDelegatorWithdrawAddressResponse is the response type for the
      Query/DelegatorWithdrawAddress RPC method.
  cosmos.distribution.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          community_tax:
            type: string
          base_proposer_reward:
            type: string
            description: >-
              Deprecated: The base_proposer_reward field is deprecated and is no
              longer used

              in the x/distribution module's reward mechanism.
          bonus_proposer_reward:
            type: string
            description: >-
              Deprecated: The bonus_proposer_reward field is deprecated and is
              no longer used

              in the x/distribution module's reward mechanism.
          withdraw_addr_enabled:
            type: boolean
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
    type: object
    properties:
      commission:
        description: commission defines the commission the validator received.
        type: object
        properties:
          commission:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
    title: |-
      QueryValidatorCommissionResponse is the response type for the
      Query/ValidatorCommission RPC method
  cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
    type: object
    properties:
      operator_address:
        type: string
        description: operator_address defines the validator operator address.
      self_bond_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: self_bond_rewards defines the self delegations rewards.
      commission:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: commission defines the commission the validator received.
    description: >-
      QueryValidatorDistributionInfoResponse is the response type for the
      Query/ValidatorDistributionInfo RPC method.
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
    type: object
    properties:
      rewards:
        type: object
        properties:
          rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
        description: >-
          ValidatorOutstandingRewards represents outstanding (un-withdrawn)
          rewards

          for a validator inexpensive to track, allows simple sanity checks.
    description: |-
      QueryValidatorOutstandingRewardsResponse is the response type for the
      Query/ValidatorOutstandingRewards RPC method.
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
    type: object
    properties:
      slashes:
        type: array
        items:
          type: object
          properties:
            validator_period:
              type: string
              format: uint64
            fraction:
              type: string
          description: |-
            ValidatorSlashEvent represents a validator slash event.
            Height is implicit within the store key.
            This is needed to calculate appropriate amount of staking tokens
            for delegations which are withdrawn after a slash has occurred.
        description: slashes defines the slashes the validator received.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryValidatorSlashesResponse is the response type for the
      Query/ValidatorSlashes RPC method.
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    type: object
    properties:
      commission:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    description: |-
      ValidatorAccumulatedCommission represents accumulated commission
      for a validator kept as a running counter, can be withdrawn at any time.
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    description: |-
      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
      for a validator inexpensive to track, allows simple sanity checks.
  cosmos.distribution.v1beta1.ValidatorSlashEvent:
    type: object
    properties:
      validator_period:
        type: string
        format: uint64
      fraction:
        type: string
    description: |-
      ValidatorSlashEvent represents a validator slash event.
      Height is implicit within the store key.
      This is needed to calculate appropriate amount of staking tokens
      for delegations which are withdrawn after a slash has occurred.
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
    type: object
    properties:
      evidence:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON


            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        description: evidence returns all evidences.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllEvidenceResponse is the response type for the Query/AllEvidence
      RPC

      method.
  cosmos.evidence.v1beta1.QueryEvidenceResponse:
    type: object
    properties:
      evidence:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      QueryEvidenceResponse is the response type for the Query/Evidence RPC
      method.
  cosmos.feegrant.v1beta1.Grant:
    type: object
    properties:
      granter:
        type: string
        description: >-
          granter is the address of the user granting an allowance of their
          funds.
      grantee:
        type: string
        description: >-
          grantee is the address of the user being granted an allowance of
          another user's funds.
      allowance:
        description: allowance can be any of basic, periodic, allowed fee allowance.
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
    title: Grant is stored in the KVStore to record a grant with full context
  cosmos.feegrant.v1beta1.QueryAllowanceResponse:
    type: object
    properties:
      allowance:
        description: allowance is a allowance granted for grantee by granter.
        type: object
        properties:
          granter:
            type: string
            description: >-
              granter is the address of the user granting an allowance of their
              funds.
          grantee:
            type: string
            description: >-
              grantee is the address of the user being granted an allowance of
              another user's funds.
          allowance:
            description: allowance can be any of basic, periodic, allowed fee allowance.
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
        title: Grant is stored in the KVStore to record a grant with full context
    description: >-
      QueryAllowanceResponse is the response type for the Query/Allowance RPC
      method.
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
    type: object
    properties:
      allowances:
        type: array
        items:
          type: object
          properties:
            granter:
              type: string
              description: >-
                granter is the address of the user granting an allowance of
                their funds.
            grantee:
              type: string
              description: >-
                grantee is the address of the user being granted an allowance of
                another user's funds.
            allowance:
              description: allowance can be any of basic, periodic, allowed fee allowance.
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
          title: Grant is stored in the KVStore to record a grant with full context
        description: allowances that have been issued by the granter.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllowancesByGranterResponse is the response type for the
      Query/AllowancesByGranter RPC method.


      Since: cosmos-sdk 0.46
  cosmos.feegrant.v1beta1.QueryAllowancesResponse:
    type: object
    properties:
      allowances:
        type: array
        items:
          type: object
          properties:
            granter:
              type: string
              description: >-
                granter is the address of the user granting an allowance of
                their funds.
            grantee:
              type: string
              description: >-
                grantee is the address of the user being granted an allowance of
                another user's funds.
            allowance:
              description: allowance can be any of basic, periodic, allowed fee allowance.
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
          title: Grant is stored in the KVStore to record a grant with full context
        description: allowances are allowance's granted for grantee by granter.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllowancesResponse is the response type for the Query/Allowances RPC
      method.
  cosmos.gov.v1.Deposit:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
        description: proposal_id defines the unique id of the proposal.
      depositor:
        type: string
        description: depositor defines the deposit addresses from the proposals.
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: amount to be deposited by depositor.
    description: |-
      Deposit defines an amount deposited by an account address to an active
      proposal.
  cosmos.gov.v1.DepositParams:
    type: object
    properties:
      min_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: Minimum deposit for a proposal to enter voting period.
      max_deposit_period:
        type: string
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.
    description: DepositParams defines the params for deposits on governance proposals.
  cosmos.gov.v1.Params:
    type: object
    properties:
      min_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: Minimum deposit for a proposal to enter voting period.
      max_deposit_period:
        type: string
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.
      voting_period:
        type: string
        description: Duration of the voting period.
      quorum:
        type: string
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
           considered valid.
      threshold:
        type: string
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.5.
      veto_threshold:
        type: string
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
           vetoed. Default value: 1/3.
      min_initial_deposit_ratio:
        type: string
        description: >-
          The ratio representing the proportion of the deposit value that must
          be paid at proposal submission.
      burn_vote_quorum:
        type: boolean
        title: burn deposits if a proposal does not meet quorum
      burn_proposal_deposit_prevote:
        type: boolean
        title: burn deposits if the proposal does not enter voting period
      burn_vote_veto:
        type: boolean
        title: burn deposits if quorum with vote type no_veto is met
    description: |-
      Params defines the parameters for the x/gov module.

      Since: cosmos-sdk 0.47
  cosmos.gov.v1.Proposal:
    type: object
    properties:
      id:
        type: string
        format: uint64
        description: id defines the unique id of the proposal.
      messages:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON


            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        description: >-
          messages are the arbitrary messages to be executed if the proposal
          passes.
      status:
        description: status defines the proposal status.
        type: string
        enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        default: PROPOSAL_STATUS_UNSPECIFIED
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        type: object
        properties:
          yes_count:
            type: string
            description: yes_count is the number of yes votes on a proposal.
          abstain_count:
            type: string
            description: abstain_count is the number of abstain votes on a proposal.
          no_count:
            type: string
            description: no_count is the number of no votes on a proposal.
          no_with_veto_count:
            type: string
            description: >-
              no_with_veto_count is the number of no with veto votes on a
              proposal.
      submit_time:
        type: string
        format: date-time
        description: submit_time is the time of proposal submission.
      deposit_end_time:
        type: string
        format: date-time
        description: deposit_end_time is the end time for deposition.
      total_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: total_deposit is the total deposit on the proposal.
      voting_start_time:
        type: string
        format: date-time
        description: voting_start_time is the starting time to vote on a proposal.
      voting_end_time:
        type: string
        format: date-time
        description: voting_end_time is the end time of voting on a proposal.
      metadata:
        type: string
        description: metadata is any arbitrary metadata attached to the proposal.
      title:
        type: string
        description: 'Since: cosmos-sdk 0.47'
        title: title is the title of the proposal
      summary:
        type: string
        description: 'Since: cosmos-sdk 0.47'
        title: summary is a short summary of the proposal
      proposer:
        type: string
        description: 'Since: cosmos-sdk 0.47'
        title: Proposer is the address of the proposal sumbitter
    description: Proposal defines the core field members of a governance proposal.
  cosmos.gov.v1.ProposalStatus:
    type: string
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
  cosmos.gov.v1.QueryDepositResponse:
    type: object
    properties:
      deposit:
        type: object
        properties:
          proposal_id:
            type: string
            format: uint64
            description: proposal_id defines the unique id of the proposal.
          depositor:
            type: string
            description: depositor defines the deposit addresses from the proposals.
          amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: amount to be deposited by depositor.
        description: |-
          Deposit defines an amount deposited by an account address to an active
          proposal.
    description: >-
      QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
  cosmos.gov.v1.QueryDepositsResponse:
    type: object
    properties:
      deposits:
        type: array
        items:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
              description: proposal_id defines the unique id of the proposal.
            depositor:
              type: string
              description: depositor defines the deposit addresses from the proposals.
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: amount to be deposited by depositor.
          description: >-
            Deposit defines an amount deposited by an account address to an
            active

            proposal.
        description: deposits defines the requested deposits.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryDepositsResponse is the response type for the Query/Deposits RPC
      method.
  cosmos.gov.v1.QueryParamsResponse:
    type: object
    properties:
      voting_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          voting_params defines the parameters related to voting.
        type: object
        properties:
          voting_period:
            type: string
            description: Duration of the voting period.
      deposit_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          deposit_params defines the parameters related to deposit.
        type: object
        properties:
          min_deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: Minimum deposit for a proposal to enter voting period.
          max_deposit_period:
            type: string
            description: >-
              Maximum period for Atom holders to deposit on a proposal. Initial
              value: 2

              months.
      tally_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          tally_params defines the parameters related to tally.
        type: object
        properties:
          quorum:
            type: string
            description: >-
              Minimum percentage of total stake needed to vote for a result to
              be

              considered valid.
          threshold:
            type: string
            description: >-
              Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.
          veto_threshold:
            type: string
            description: >-
              Minimum value of Veto votes to Total votes ratio for proposal to
              be

              vetoed. Default value: 1/3.
      params:
        description: |-
          params defines all the paramaters of x/gov module.

          Since: cosmos-sdk 0.47
        type: object
        properties:
          min_deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: Minimum deposit for a proposal to enter voting period.
          max_deposit_period:
            type: string
            description: >-
              Maximum period for Atom holders to deposit on a proposal. Initial
              value: 2

              months.
          voting_period:
            type: string
            description: Duration of the voting period.
          quorum:
            type: string
            description: >-
              Minimum percentage of total stake needed to vote for a result to
              be
               considered valid.
          threshold:
            type: string
            description: >-
              Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.
          veto_threshold:
            type: string
            description: >-
              Minimum value of Veto votes to Total votes ratio for proposal to
              be
               vetoed. Default value: 1/3.
          min_initial_deposit_ratio:
            type: string
            description: >-
              The ratio representing the proportion of the deposit value that
              must be paid at proposal submission.
          burn_vote_quorum:
            type: boolean
            title: burn deposits if a proposal does not meet quorum
          burn_proposal_deposit_prevote:
            type: boolean
            title: burn deposits if the proposal does not enter voting period
          burn_vote_veto:
            type: boolean
            title: burn deposits if quorum with vote type no_veto is met
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.gov.v1.QueryProposalResponse:
    type: object
    properties:
      proposal:
        type: object
        properties:
          id:
            type: string
            format: uint64
            description: id defines the unique id of the proposal.
          messages:
            type: array
            items:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            description: >-
              messages are the arbitrary messages to be executed if the proposal
              passes.
          status:
            description: status defines the proposal status.
            type: string
            enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            default: PROPOSAL_STATUS_UNSPECIFIED
          final_tally_result:
            description: >-
              final_tally_result is the final tally result of the proposal. When

              querying a proposal via gRPC, this field is not populated until
              the

              proposal's voting period has ended.
            type: object
            properties:
              yes_count:
                type: string
                description: yes_count is the number of yes votes on a proposal.
              abstain_count:
                type: string
                description: abstain_count is the number of abstain votes on a proposal.
              no_count:
                type: string
                description: no_count is the number of no votes on a proposal.
              no_with_veto_count:
                type: string
                description: >-
                  no_with_veto_count is the number of no with veto votes on a
                  proposal.
          submit_time:
            type: string
            format: date-time
            description: submit_time is the time of proposal submission.
          deposit_end_time:
            type: string
            format: date-time
            description: deposit_end_time is the end time for deposition.
          total_deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: total_deposit is the total deposit on the proposal.
          voting_start_time:
            type: string
            format: date-time
            description: voting_start_time is the starting time to vote on a proposal.
          voting_end_time:
            type: string
            format: date-time
            description: voting_end_time is the end time of voting on a proposal.
          metadata:
            type: string
            description: metadata is any arbitrary metadata attached to the proposal.
          title:
            type: string
            description: 'Since: cosmos-sdk 0.47'
            title: title is the title of the proposal
          summary:
            type: string
            description: 'Since: cosmos-sdk 0.47'
            title: summary is a short summary of the proposal
          proposer:
            type: string
            description: 'Since: cosmos-sdk 0.47'
            title: Proposer is the address of the proposal sumbitter
        description: Proposal defines the core field members of a governance proposal.
    description: >-
      QueryProposalResponse is the response type for the Query/Proposal RPC
      method.
  cosmos.gov.v1.QueryProposalsResponse:
    type: object
    properties:
      proposals:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              description: id defines the unique id of the proposal.
            messages:
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON


                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              description: >-
                messages are the arbitrary messages to be executed if the
                proposal passes.
            status:
              description: status defines the proposal status.
              type: string
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              default: PROPOSAL_STATUS_UNSPECIFIED
            final_tally_result:
              description: >-
                final_tally_result is the final tally result of the proposal.
                When

                querying a proposal via gRPC, this field is not populated until
                the

                proposal's voting period has ended.
              type: object
              properties:
                yes_count:
                  type: string
                  description: yes_count is the number of yes votes on a proposal.
                abstain_count:
                  type: string
                  description: abstain_count is the number of abstain votes on a proposal.
                no_count:
                  type: string
                  description: no_count is the number of no votes on a proposal.
                no_with_veto_count:
                  type: string
                  description: >-
                    no_with_veto_count is the number of no with veto votes on a
                    proposal.
            submit_time:
              type: string
              format: date-time
              description: submit_time is the time of proposal submission.
            deposit_end_time:
              type: string
              format: date-time
              description: deposit_end_time is the end time for deposition.
            total_deposit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: total_deposit is the total deposit on the proposal.
            voting_start_time:
              type: string
              format: date-time
              description: voting_start_time is the starting time to vote on a proposal.
            voting_end_time:
              type: string
              format: date-time
              description: voting_end_time is the end time of voting on a proposal.
            metadata:
              type: string
              description: metadata is any arbitrary metadata attached to the proposal.
            title:
              type: string
              description: 'Since: cosmos-sdk 0.47'
              title: title is the title of the proposal
            summary:
              type: string
              description: 'Since: cosmos-sdk 0.47'
              title: summary is a short summary of the proposal
            proposer:
              type: string
              description: 'Since: cosmos-sdk 0.47'
              title: Proposer is the address of the proposal sumbitter
          description: Proposal defines the core field members of a governance proposal.
        description: proposals defines all the requested governance proposals.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryProposalsResponse is the response type for the Query/Proposals RPC
      method.
  cosmos.gov.v1.QueryTallyResultResponse:
    type: object
    properties:
      tally:
        description: tally defines the requested tally.
        type: object
        properties:
          yes_count:
            type: string
            description: yes_count is the number of yes votes on a proposal.
          abstain_count:
            type: string
            description: abstain_count is the number of abstain votes on a proposal.
          no_count:
            type: string
            description: no_count is the number of no votes on a proposal.
          no_with_veto_count:
            type: string
            description: >-
              no_with_veto_count is the number of no with veto votes on a
              proposal.
    description: >-
      QueryTallyResultResponse is the response type for the Query/Tally RPC
      method.
  cosmos.gov.v1.QueryVoteResponse:
    type: object
    properties:
      vote:
        type: object
        properties:
          proposal_id:
            type: string
            format: uint64
            description: proposal_id defines the unique id of the proposal.
          voter:
            type: string
            description: voter is the voter address of the proposal.
          options:
            type: array
            items:
              type: object
              properties:
                option:
                  description: >-
                    option defines the valid vote options, it must not contain
                    duplicate vote options.
                  type: string
                  enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                  default: VOTE_OPTION_UNSPECIFIED
                weight:
                  type: string
                  description: weight is the vote weight associated with the vote option.
              description: WeightedVoteOption defines a unit of vote for vote split.
            description: options is the weighted vote options.
          metadata:
            type: string
            description: metadata is any  arbitrary metadata to attached to the vote.
        description: |-
          Vote defines a vote on a governance proposal.
          A Vote consists of a proposal ID, the voter, and the vote option.
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
  cosmos.gov.v1.QueryVotesResponse:
    type: object
    properties:
      votes:
        type: array
        items:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
              description: proposal_id defines the unique id of the proposal.
            voter:
              type: string
              description: voter is the voter address of the proposal.
            options:
              type: array
              items:
                type: object
                properties:
                  option:
                    description: >-
                      option defines the valid vote options, it must not contain
                      duplicate vote options.
                    type: string
                    enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    default: VOTE_OPTION_UNSPECIFIED
                  weight:
                    type: string
                    description: weight is the vote weight associated with the vote option.
                description: WeightedVoteOption defines a unit of vote for vote split.
              description: options is the weighted vote options.
            metadata:
              type: string
              description: metadata is any  arbitrary metadata to attached to the vote.
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
        description: votes defines the queried votes.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
  cosmos.gov.v1.TallyParams:
    type: object
    properties:
      quorum:
        type: string
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
          considered valid.
      threshold:
        type: string
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.5.
      veto_threshold:
        type: string
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
          vetoed. Default value: 1/3.
    description: TallyParams defines the params for tallying votes on governance proposals.
  cosmos.gov.v1.TallyResult:
    type: object
    properties:
      yes_count:
        type: string
        description: yes_count is the number of yes votes on a proposal.
      abstain_count:
        type: string
        description: abstain_count is the number of abstain votes on a proposal.
      no_count:
        type: string
        description: no_count is the number of no votes on a proposal.
      no_with_veto_count:
        type: string
        description: no_with_veto_count is the number of no with veto votes on a proposal.
    description: TallyResult defines a standard tally for a governance proposal.
  cosmos.gov.v1.Vote:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
        description: proposal_id defines the unique id of the proposal.
      voter:
        type: string
        description: voter is the voter address of the proposal.
      options:
        type: array
        items:
          type: object
          properties:
            option:
              description: >-
                option defines the valid vote options, it must not contain
                duplicate vote options.
              type: string
              enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              default: VOTE_OPTION_UNSPECIFIED
            weight:
              type: string
              description: weight is the vote weight associated with the vote option.
          description: WeightedVoteOption defines a unit of vote for vote split.
        description: options is the weighted vote options.
      metadata:
        type: string
        description: metadata is any  arbitrary metadata to attached to the vote.
    description: |-
      Vote defines a vote on a governance proposal.
      A Vote consists of a proposal ID, the voter, and the vote option.
  cosmos.gov.v1.VoteOption:
    type: string
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    default: VOTE_OPTION_UNSPECIFIED
    description: >-
      VoteOption enumerates the valid vote options for a given governance
      proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  cosmos.gov.v1.VotingParams:
    type: object
    properties:
      voting_period:
        type: string
        description: Duration of the voting period.
    description: VotingParams defines the params for voting on governance proposals.
  cosmos.gov.v1.WeightedVoteOption:
    type: object
    properties:
      option:
        description: >-
          option defines the valid vote options, it must not contain duplicate
          vote options.
        type: string
        enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        default: VOTE_OPTION_UNSPECIFIED
      weight:
        type: string
        description: weight is the vote weight associated with the vote option.
    description: WeightedVoteOption defines a unit of vote for vote split.
  cosmos.mint.v1beta1.Params:
    type: object
    properties:
      mint_denom:
        type: string
        title: type of coin to mint
      inflation_rate_change:
        type: string
        title: maximum annual change in inflation rate
      inflation_max:
        type: string
        title: maximum inflation rate
      inflation_min:
        type: string
        title: minimum inflation rate
      goal_bonded:
        type: string
        title: goal of percent bonded atoms
      blocks_per_year:
        type: string
        format: uint64
        title: expected blocks per year
    description: Params defines the parameters for the x/mint module.
  cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
    type: object
    properties:
      annual_provisions:
        type: string
        format: byte
        description: annual_provisions is the current minting annual provisions value.
    description: |-
      QueryAnnualProvisionsResponse is the response type for the
      Query/AnnualProvisions RPC method.
  cosmos.mint.v1beta1.QueryInflationResponse:
    type: object
    properties:
      inflation:
        type: string
        format: byte
        description: inflation is the current minting inflation value.
    description: |-
      QueryInflationResponse is the response type for the Query/Inflation RPC
      method.
  cosmos.mint.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          mint_denom:
            type: string
            title: type of coin to mint
          inflation_rate_change:
            type: string
            title: maximum annual change in inflation rate
          inflation_max:
            type: string
            title: maximum inflation rate
          inflation_min:
            type: string
            title: minimum inflation rate
          goal_bonded:
            type: string
            title: goal of percent bonded atoms
          blocks_per_year:
            type: string
            format: uint64
            title: expected blocks per year
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.params.v1beta1.ParamChange:
    type: object
    properties:
      subspace:
        type: string
      key:
        type: string
      value:
        type: string
    description: |-
      ParamChange defines an individual parameter change, for use in
      ParameterChangeProposal.
  cosmos.params.v1beta1.QueryParamsResponse:
    type: object
    properties:
      param:
        description: param defines the queried parameter.
        type: object
        properties:
          subspace:
            type: string
          key:
            type: string
          value:
            type: string
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  cosmos.params.v1beta1.QuerySubspacesResponse:
    type: object
    properties:
      subspaces:
        type: array
        items:
          type: object
          properties:
            subspace:
              type: string
            keys:
              type: array
              items:
                type: string
          description: >-
            Subspace defines a parameter subspace name and all the keys that
            exist for

            the subspace.


            Since: cosmos-sdk 0.46
    description: |-
      QuerySubspacesResponse defines the response types for querying for all
      registered subspaces and all keys for a subspace.

      Since: cosmos-sdk 0.46
  cosmos.params.v1beta1.Subspace:
    type: object
    properties:
      subspace:
        type: string
      keys:
        type: array
        items:
          type: string
    description: |-
      Subspace defines a parameter subspace name and all the keys that exist for
      the subspace.

      Since: cosmos-sdk 0.46
  cosmos.slashing.v1beta1.Params:
    type: object
    properties:
      signed_blocks_window:
        type: string
        format: int64
      min_signed_per_window:
        type: string
        format: byte
      downtime_jail_duration:
        type: string
      slash_fraction_double_sign:
        type: string
        format: byte
      slash_fraction_downtime:
        type: string
        format: byte
    description: Params represents the parameters used for by the slashing module.
  cosmos.slashing.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          signed_blocks_window:
            type: string
            format: int64
          min_signed_per_window:
            type: string
            format: byte
          downtime_jail_duration:
            type: string
          slash_fraction_double_sign:
            type: string
            format: byte
          slash_fraction_downtime:
            type: string
            format: byte
        description: Params represents the parameters used for by the slashing module.
    title: QueryParamsResponse is the response type for the Query/Params RPC method
  cosmos.slashing.v1beta1.QuerySigningInfoResponse:
    type: object
    properties:
      val_signing_info:
        type: object
        properties:
          address:
            type: string
          start_height:
            type: string
            format: int64
            title: Height at which validator was first a candidate OR was unjailed
          index_offset:
            type: string
            format: int64
            description: >-
              Index which is incremented each time the validator was a bonded

              in a block and may have signed a precommit or not. This in
              conjunction with the

              `SignedBlocksWindow` param determines the index in the
              `MissedBlocksBitArray`.
          jailed_until:
            type: string
            format: date-time
            description: >-
              Timestamp until which the validator is jailed due to liveness
              downtime.
          tombstoned:
            type: boolean
            description: >-
              Whether or not a validator has been tombstoned (killed out of
              validator set). It is set

              once the validator commits an equivocation or for any other
              configured misbehiavor.
          missed_blocks_counter:
            type: string
            format: int64
            description: >-
              A counter kept to avoid unnecessary array reads.

              Note that `Sum(MissedBlocksBitArray)` always equals
              `MissedBlocksCounter`.
        description: >-
          ValidatorSigningInfo defines a validator's signing info for monitoring
          their

          liveness activity.
        title: val_signing_info is the signing info of requested val cons address
    title: >-
      QuerySigningInfoResponse is the response type for the Query/SigningInfo
      RPC

      method
  cosmos.slashing.v1beta1.QuerySigningInfosResponse:
    type: object
    properties:
      info:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            start_height:
              type: string
              format: int64
              title: Height at which validator was first a candidate OR was unjailed
            index_offset:
              type: string
              format: int64
              description: >-
                Index which is incremented each time the validator was a bonded

                in a block and may have signed a precommit or not. This in
                conjunction with the

                `SignedBlocksWindow` param determines the index in the
                `MissedBlocksBitArray`.
            jailed_until:
              type: string
              format: date-time
              description: >-
                Timestamp until which the validator is jailed due to liveness
                downtime.
            tombstoned:
              type: boolean
              description: >-
                Whether or not a validator has been tombstoned (killed out of
                validator set). It is set

                once the validator commits an equivocation or for any other
                configured misbehiavor.
            missed_blocks_counter:
              type: string
              format: int64
              description: >-
                A counter kept to avoid unnecessary array reads.

                Note that `Sum(MissedBlocksBitArray)` always equals
                `MissedBlocksCounter`.
          description: >-
            ValidatorSigningInfo defines a validator's signing info for
            monitoring their

            liveness activity.
        title: info is the signing info of all validators
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QuerySigningInfosResponse is the response type for the Query/SigningInfos
      RPC

      method
  cosmos.slashing.v1beta1.ValidatorSigningInfo:
    type: object
    properties:
      address:
        type: string
      start_height:
        type: string
        format: int64
        title: Height at which validator was first a candidate OR was unjailed
      index_offset:
        type: string
        format: int64
        description: >-
          Index which is incremented each time the validator was a bonded

          in a block and may have signed a precommit or not. This in conjunction
          with the

          `SignedBlocksWindow` param determines the index in the
          `MissedBlocksBitArray`.
      jailed_until:
        type: string
        format: date-time
        description: >-
          Timestamp until which the validator is jailed due to liveness
          downtime.
      tombstoned:
        type: boolean
        description: >-
          Whether or not a validator has been tombstoned (killed out of
          validator set). It is set

          once the validator commits an equivocation or for any other configured
          misbehiavor.
      missed_blocks_counter:
        type: string
        format: int64
        description: >-
          A counter kept to avoid unnecessary array reads.

          Note that `Sum(MissedBlocksBitArray)` always equals
          `MissedBlocksCounter`.
    description: >-
      ValidatorSigningInfo defines a validator's signing info for monitoring
      their

      liveness activity.
  cosmos.staking.v1beta1.BondStatus:
    type: string
    enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
    default: BOND_STATUS_UNSPECIFIED
    description: |-
      BondStatus is the status of a validator.

       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
  cosmos.staking.v1beta1.Commission:
    type: object
    properties:
      commission_rates:
        description: >-
          commission_rates defines the initial commission rates to be used for
          creating a validator.
        type: object
        properties:
          rate:
            type: string
            description: rate is the commission rate charged to delegators, as a fraction.
          max_rate:
            type: string
            description: >-
              max_rate defines the maximum commission rate which validator can
              ever charge, as a fraction.
          max_change_rate:
            type: string
            description: >-
              max_change_rate defines the maximum daily increase of the
              validator commission, as a fraction.
      update_time:
        type: string
        format: date-time
        description: update_time is the last time the commission rate was changed.
    description: Commission defines commission parameters for a given validator.
  cosmos.staking.v1beta1.CommissionRates:
    type: object
    properties:
      rate:
        type: string
        description: rate is the commission rate charged to delegators, as a fraction.
      max_rate:
        type: string
        description: >-
          max_rate defines the maximum commission rate which validator can ever
          charge, as a fraction.
      max_change_rate:
        type: string
        description: >-
          max_change_rate defines the maximum daily increase of the validator
          commission, as a fraction.
    description: >-
      CommissionRates defines the initial commission rates to be used for
      creating

      a validator.
  cosmos.staking.v1beta1.Delegation:
    type: object
    properties:
      delegator_address:
        type: string
        description: delegator_address is the bech32-encoded address of the delegator.
      validator_address:
        type: string
        description: validator_address is the bech32-encoded address of the validator.
      shares:
        type: string
        description: shares define the delegation shares received.
    description: |-
      Delegation represents the bond with tokens held by an account. It is
      owned by one delegator, and is associated with the voting power of one
      validator.
  cosmos.staking.v1beta1.DelegationResponse:
    type: object
    properties:
      delegation:
        type: object
        properties:
          delegator_address:
            type: string
            description: delegator_address is the bech32-encoded address of the delegator.
          validator_address:
            type: string
            description: validator_address is the bech32-encoded address of the validator.
          shares:
            type: string
            description: shares define the delegation shares received.
        description: |-
          Delegation represents the bond with tokens held by an account. It is
          owned by one delegator, and is associated with the voting power of one
          validator.
      balance:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: |-
      DelegationResponse is equivalent to Delegation except that it contains a
      balance in addition to shares which is more suitable for client responses.
  cosmos.staking.v1beta1.Description:
    type: object
    properties:
      moniker:
        type: string
        description: moniker defines a human-readable name for the validator.
      identity:
        type: string
        description: >-
          identity defines an optional identity signature (ex. UPort or
          Keybase).
      website:
        type: string
        description: website defines an optional website link.
      security_contact:
        type: string
        description: security_contact defines an optional email for security contact.
      details:
        type: string
        description: details define other optional details.
    description: Description defines a validator description.
  cosmos.staking.v1beta1.HistoricalInfo:
    type: object
    properties:
      header:
        type: object
        properties:
          version:
            title: basic block info
            type: object
            properties:
              block:
                type: string
                format: uint64
              app:
                type: string
                format: uint64
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
          chain_id:
            type: string
          height:
            type: string
            format: int64
          time:
            type: string
            format: date-time
          last_block_id:
            title: prev block info
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
          last_commit_hash:
            type: string
            format: byte
            title: hashes of block data
          data_hash:
            type: string
            format: byte
          validators_hash:
            type: string
            format: byte
            title: hashes from the app output from the prev block
          next_validators_hash:
            type: string
            format: byte
          consensus_hash:
            type: string
            format: byte
          app_hash:
            type: string
            format: byte
          last_results_hash:
            type: string
            format: byte
          evidence_hash:
            type: string
            format: byte
            title: consensus info
          proposer_address:
            type: string
            format: byte
        description: Header defines the structure of a Tendermint block header.
      valset:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
              description: >-
                operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: >-
                jailed defined whether the validator has been jailed from bonded
                status or not.
            status:
              description: status is the validator status (bonded/unbonding/unbonded).
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: >-
                delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              description: description defines the description terms for the validator.
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: >-
                    identity defines an optional identity signature (ex. UPort
                    or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: >-
                    security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
            unbonding_height:
              type: string
              format: int64
              description: >-
                unbonding_height defines, if unbonding, the height at which this
                validator has begun unbonding.
            unbonding_time:
              type: string
              format: date-time
              description: >-
                unbonding_time defines, if unbonding, the min time for the
                validator to complete unbonding.
            commission:
              description: commission defines the commission parameters.
              type: object
              properties:
                commission_rates:
                  description: >-
                    commission_rates defines the initial commission rates to be
                    used for creating a validator.
                  type: object
                  properties:
                    rate:
                      type: string
                      description: >-
                        rate is the commission rate charged to delegators, as a
                        fraction.
                    max_rate:
                      type: string
                      description: >-
                        max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: >-
                        max_change_rate defines the maximum daily increase of
                        the validator commission, as a fraction.
                update_time:
                  type: string
                  format: date-time
                  description: >-
                    update_time is the last time the commission rate was
                    changed.
            min_self_delegation:
              type: string
              description: >-
                min_self_delegation is the validator's self declared minimum
                self delegation.


                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              type: string
              format: int64
              title: >-
                strictly positive if this validator's unbonding has been stopped
                by external modules
            unbonding_ids:
              type: array
              items:
                type: string
                format: uint64
              title: >-
                list of unbonding ids, each uniquely identifing an unbonding of
                this validator
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
    description: >-
      HistoricalInfo contains header and validator information for a given
      block.

      It is stored as part of staking module's state, which persists the `n`
      most

      recent HistoricalInfo

      (`n` is set by the staking module's `historical_entries` parameter).
  cosmos.staking.v1beta1.Params:
    type: object
    properties:
      unbonding_time:
        type: string
        description: unbonding_time is the time duration of unbonding.
      max_validators:
        type: integer
        format: int64
        description: max_validators is the maximum number of validators.
      max_entries:
        type: integer
        format: int64
        description: >-
          max_entries is the max entries for either unbonding delegation or
          redelegation (per pair/trio).
      historical_entries:
        type: integer
        format: int64
        description: historical_entries is the number of historical entries to persist.
      bond_denom:
        type: string
        description: bond_denom defines the bondable coin denomination.
      min_commission_rate:
        type: string
        title: >-
          min_commission_rate is the chain-wide minimum commission rate that a
          validator can charge their delegators
    description: Params defines the parameters for the x/staking module.
  cosmos.staking.v1beta1.Pool:
    type: object
    properties:
      not_bonded_tokens:
        type: string
      bonded_tokens:
        type: string
    description: |-
      Pool is used for tracking bonded and not-bonded token supply of the bond
      denomination.
  cosmos.staking.v1beta1.QueryDelegationResponse:
    type: object
    properties:
      delegation_response:
        type: object
        properties:
          delegation:
            type: object
            properties:
              delegator_address:
                type: string
                description: >-
                  delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: >-
                  validator_address is the bech32-encoded address of the
                  validator.
              shares:
                type: string
                description: shares define the delegation shares received.
            description: >-
              Delegation represents the bond with tokens held by an account. It
              is

              owned by one delegator, and is associated with the voting power of
              one

              validator.
          balance:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
        description: >-
          DelegationResponse is equivalent to Delegation except that it contains
          a

          balance in addition to shares which is more suitable for client
          responses.
    description: >-
      QueryDelegationResponse is response type for the Query/Delegation RPC
      method.
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
    type: object
    properties:
      delegation_responses:
        type: array
        items:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: >-
                    delegator_address is the bech32-encoded address of the
                    delegator.
                validator_address:
                  type: string
                  description: >-
                    validator_address is the bech32-encoded address of the
                    validator.
                shares:
                  type: string
                  description: shares define the delegation shares received.
              description: >-
                Delegation represents the bond with tokens held by an account.
                It is

                owned by one delegator, and is associated with the voting power
                of one

                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            DelegationResponse is equivalent to Delegation except that it
            contains a

            balance in addition to shares which is more suitable for client
            responses.
        description: delegation_responses defines all the delegations' info of a delegator.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryDelegatorDelegationsResponse is response type for the
      Query/DelegatorDelegations RPC method.
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
    type: object
    properties:
      unbonding_responses:
        type: array
        items:
          type: object
          properties:
            delegator_address:
              type: string
              description: >-
                delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: >-
                validator_address is the bech32-encoded address of the
                validator.
            entries:
              type: array
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                    description: >-
                      creation_height is the height which the unbonding took
                      place.
                  completion_time:
                    type: string
                    format: date-time
                    description: completion_time is the unix time for unbonding completion.
                  initial_balance:
                    type: string
                    description: >-
                      initial_balance defines the tokens initially scheduled to
                      receive at completion.
                  balance:
                    type: string
                    description: balance defines the tokens to receive at completion.
                  unbonding_id:
                    type: string
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                  unbonding_on_hold_ref_count:
                    type: string
                    format: int64
                    title: >-
                      Strictly positive if this entry's unbonding has been
                      stopped by external modules
                description: >-
                  UnbondingDelegationEntry defines an unbonding object with
                  relevant metadata.
              description: entries are the unbonding delegation entries.
          description: >-
            UnbondingDelegation stores all of a single delegator's unbonding
            bonds

            for a single validator in an time-ordered list.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryUnbondingDelegatorDelegationsResponse is response type for the
      Query/UnbondingDelegatorDelegations RPC method.
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
    type: object
    properties:
      validator:
        type: object
        properties:
          operator_address:
            type: string
            description: >-
              operator_address defines the address of the validator's operator;
              bech encoded in JSON.
          consensus_pubkey:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          jailed:
            type: boolean
            description: >-
              jailed defined whether the validator has been jailed from bonded
              status or not.
          status:
            description: status is the validator status (bonded/unbonding/unbonded).
            type: string
            enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            default: BOND_STATUS_UNSPECIFIED
          tokens:
            type: string
            description: tokens define the delegated tokens (incl. self-delegation).
          delegator_shares:
            type: string
            description: >-
              delegator_shares defines total shares issued to a validator's
              delegators.
          description:
            description: description defines the description terms for the validator.
            type: object
            properties:
              moniker:
                type: string
                description: moniker defines a human-readable name for the validator.
              identity:
                type: string
                description: >-
                  identity defines an optional identity signature (ex. UPort or
                  Keybase).
              website:
                type: string
                description: website defines an optional website link.
              security_contact:
                type: string
                description: >-
                  security_contact defines an optional email for security
                  contact.
              details:
                type: string
                description: details define other optional details.
          unbonding_height:
            type: string
            format: int64
            description: >-
              unbonding_height defines, if unbonding, the height at which this
              validator has begun unbonding.
          unbonding_time:
            type: string
            format: date-time
            description: >-
              unbonding_time defines, if unbonding, the min time for the
              validator to complete unbonding.
          commission:
            description: commission defines the commission parameters.
            type: object
            properties:
              commission_rates:
                description: >-
                  commission_rates defines the initial commission rates to be
                  used for creating a validator.
                type: object
                properties:
                  rate:
                    type: string
                    description: >-
                      rate is the commission rate charged to delegators, as a
                      fraction.
                  max_rate:
                    type: string
                    description: >-
                      max_rate defines the maximum commission rate which
                      validator can ever charge, as a fraction.
                  max_change_rate:
                    type: string
                    description: >-
                      max_change_rate defines the maximum daily increase of the
                      validator commission, as a fraction.
              update_time:
                type: string
                format: date-time
                description: update_time is the last time the commission rate was changed.
          min_self_delegation:
            type: string
            description: >-
              min_self_delegation is the validator's self declared minimum self
              delegation.


              Since: cosmos-sdk 0.46
          unbonding_on_hold_ref_count:
            type: string
            format: int64
            title: >-
              strictly positive if this validator's unbonding has been stopped
              by external modules
          unbonding_ids:
            type: array
            items:
              type: string
              format: uint64
            title: >-
              list of unbonding ids, each uniquely identifing an unbonding of
              this validator
        description: >-
          Validator defines a validator, together with the total amount of the

          Validator's bond shares and their exchange rate to coins. Slashing
          results in

          a decrease in the exchange rate, allowing correct calculation of
          future

          undelegations without iterating over delegators. When coins are
          delegated to

          this validator, the validator is credited with a delegation whose
          number of

          bond shares is based on the amount of coins delegated divided by the
          current

          exchange rate. Voting power can be calculated as total bonded shares

          multiplied by exchange rate.
    description: |-
      QueryDelegatorValidatorResponse response type for the
      Query/DelegatorValidator RPC method.
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
              description: >-
                operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: >-
                jailed defined whether the validator has been jailed from bonded
                status or not.
            status:
              description: status is the validator status (bonded/unbonding/unbonded).
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: >-
                delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              description: description defines the description terms for the validator.
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: >-
                    identity defines an optional identity signature (ex. UPort
                    or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: >-
                    security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
            unbonding_height:
              type: string
              format: int64
              description: >-
                unbonding_height defines, if unbonding, the height at which this
                validator has begun unbonding.
            unbonding_time:
              type: string
              format: date-time
              description: >-
                unbonding_time defines, if unbonding, the min time for the
                validator to complete unbonding.
            commission:
              description: commission defines the commission parameters.
              type: object
              properties:
                commission_rates:
                  description: >-
                    commission_rates defines the initial commission rates to be
                    used for creating a validator.
                  type: object
                  properties:
                    rate:
                      type: string
                      description: >-
                        rate is the commission rate charged to delegators, as a
                        fraction.
                    max_rate:
                      type: string
                      description: >-
                        max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: >-
                        max_change_rate defines the maximum daily increase of
                        the validator commission, as a fraction.
                update_time:
                  type: string
                  format: date-time
                  description: >-
                    update_time is the last time the commission rate was
                    changed.
            min_self_delegation:
              type: string
              description: >-
                min_self_delegation is the validator's self declared minimum
                self delegation.


                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              type: string
              format: int64
              title: >-
                strictly positive if this validator's unbonding has been stopped
                by external modules
            unbonding_ids:
              type: array
              items:
                type: string
                format: uint64
              title: >-
                list of unbonding ids, each uniquely identifing an unbonding of
                this validator
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
        description: validators defines the validators' info of a delegator.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryDelegatorValidatorsResponse is response type for the
      Query/DelegatorValidators RPC method.
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
    type: object
    properties:
      hist:
        description: hist defines the historical info at the given height.
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                title: prev block info
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                format: byte
            description: Header defines the structure of a Tendermint block header.
          valset:
            type: array
            items:
              type: object
              properties:
                operator_address:
                  type: string
                  description: >-
                    operator_address defines the address of the validator's
                    operator; bech encoded in JSON.
                consensus_pubkey:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                jailed:
                  type: boolean
                  description: >-
                    jailed defined whether the validator has been jailed from
                    bonded status or not.
                status:
                  description: status is the validator status (bonded/unbonding/unbonded).
                  type: string
                  enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                  default: BOND_STATUS_UNSPECIFIED
                tokens:
                  type: string
                  description: tokens define the delegated tokens (incl. self-delegation).
                delegator_shares:
                  type: string
                  description: >-
                    delegator_shares defines total shares issued to a
                    validator's delegators.
                description:
                  description: description defines the description terms for the validator.
                  type: object
                  properties:
                    moniker:
                      type: string
                      description: moniker defines a human-readable name for the validator.
                    identity:
                      type: string
                      description: >-
                        identity defines an optional identity signature (ex.
                        UPort or Keybase).
                    website:
                      type: string
                      description: website defines an optional website link.
                    security_contact:
                      type: string
                      description: >-
                        security_contact defines an optional email for security
                        contact.
                    details:
                      type: string
                      description: details define other optional details.
                unbonding_height:
                  type: string
                  format: int64
                  description: >-
                    unbonding_height defines, if unbonding, the height at which
                    this validator has begun unbonding.
                unbonding_time:
                  type: string
                  format: date-time
                  description: >-
                    unbonding_time defines, if unbonding, the min time for the
                    validator to complete unbonding.
                commission:
                  description: commission defines the commission parameters.
                  type: object
                  properties:
                    commission_rates:
                      description: >-
                        commission_rates defines the initial commission rates to
                        be used for creating a validator.
                      type: object
                      properties:
                        rate:
                          type: string
                          description: >-
                            rate is the commission rate charged to delegators,
                            as a fraction.
                        max_rate:
                          type: string
                          description: >-
                            max_rate defines the maximum commission rate which
                            validator can ever charge, as a fraction.
                        max_change_rate:
                          type: string
                          description: >-
                            max_change_rate defines the maximum daily increase
                            of the validator commission, as a fraction.
                    update_time:
                      type: string
                      format: date-time
                      description: >-
                        update_time is the last time the commission rate was
                        changed.
                min_self_delegation:
                  type: string
                  description: >-
                    min_self_delegation is the validator's self declared minimum
                    self delegation.


                    Since: cosmos-sdk 0.46
                unbonding_on_hold_ref_count:
                  type: string
                  format: int64
                  title: >-
                    strictly positive if this validator's unbonding has been
                    stopped by external modules
                unbonding_ids:
                  type: array
                  items:
                    type: string
                    format: uint64
                  title: >-
                    list of unbonding ids, each uniquely identifing an unbonding
                    of this validator
              description: >-
                Validator defines a validator, together with the total amount of
                the

                Validator's bond shares and their exchange rate to coins.
                Slashing results in

                a decrease in the exchange rate, allowing correct calculation of
                future

                undelegations without iterating over delegators. When coins are
                delegated to

                this validator, the validator is credited with a delegation
                whose number of

                bond shares is based on the amount of coins delegated divided by
                the current

                exchange rate. Voting power can be calculated as total bonded
                shares

                multiplied by exchange rate.
    description: >-
      QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
      RPC

      method.
  cosmos.staking.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          unbonding_time:
            type: string
            description: unbonding_time is the time duration of unbonding.
          max_validators:
            type: integer
            format: int64
            description: max_validators is the maximum number of validators.
          max_entries:
            type: integer
            format: int64
            description: >-
              max_entries is the max entries for either unbonding delegation or
              redelegation (per pair/trio).
          historical_entries:
            type: integer
            format: int64
            description: historical_entries is the number of historical entries to persist.
          bond_denom:
            type: string
            description: bond_denom defines the bondable coin denomination.
          min_commission_rate:
            type: string
            title: >-
              min_commission_rate is the chain-wide minimum commission rate that
              a validator can charge their delegators
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  cosmos.staking.v1beta1.QueryPoolResponse:
    type: object
    properties:
      pool:
        description: pool defines the pool info.
        type: object
        properties:
          not_bonded_tokens:
            type: string
          bonded_tokens:
            type: string
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
  cosmos.staking.v1beta1.QueryRedelegationsResponse:
    type: object
    properties:
      redelegation_responses:
        type: array
        items:
          type: object
          properties:
            redelegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: >-
                    delegator_address is the bech32-encoded address of the
                    delegator.
                validator_src_address:
                  type: string
                  description: >-
                    validator_src_address is the validator redelegation source
                    operator address.
                validator_dst_address:
                  type: string
                  description: >-
                    validator_dst_address is the validator redelegation
                    destination operator address.
                entries:
                  type: array
                  items:
                    type: object
                    properties:
                      creation_height:
                        type: string
                        format: int64
                        description: >-
                          creation_height  defines the height which the
                          redelegation took place.
                      completion_time:
                        type: string
                        format: date-time
                        description: >-
                          completion_time defines the unix time for redelegation
                          completion.
                      initial_balance:
                        type: string
                        description: >-
                          initial_balance defines the initial balance when
                          redelegation started.
                      shares_dst:
                        type: string
                        description: >-
                          shares_dst is the amount of destination-validator
                          shares created by redelegation.
                      unbonding_id:
                        type: string
                        format: uint64
                        title: Incrementing id that uniquely identifies this entry
                      unbonding_on_hold_ref_count:
                        type: string
                        format: int64
                        title: >-
                          Strictly positive if this entry's unbonding has been
                          stopped by external modules
                    description: >-
                      RedelegationEntry defines a redelegation object with
                      relevant metadata.
                  description: entries are the redelegation entries.
              description: >-
                Redelegation contains the list of a particular delegator's
                redelegating bonds

                from a particular source validator to a particular destination
                validator.
            entries:
              type: array
              items:
                type: object
                properties:
                  redelegation_entry:
                    type: object
                    properties:
                      creation_height:
                        type: string
                        format: int64
                        description: >-
                          creation_height  defines the height which the
                          redelegation took place.
                      completion_time:
                        type: string
                        format: date-time
                        description: >-
                          completion_time defines the unix time for redelegation
                          completion.
                      initial_balance:
                        type: string
                        description: >-
                          initial_balance defines the initial balance when
                          redelegation started.
                      shares_dst:
                        type: string
                        description: >-
                          shares_dst is the amount of destination-validator
                          shares created by redelegation.
                      unbonding_id:
                        type: string
                        format: uint64
                        title: Incrementing id that uniquely identifies this entry
                      unbonding_on_hold_ref_count:
                        type: string
                        format: int64
                        title: >-
                          Strictly positive if this entry's unbonding has been
                          stopped by external modules
                    description: >-
                      RedelegationEntry defines a redelegation object with
                      relevant metadata.
                  balance:
                    type: string
                description: >-
                  RedelegationEntryResponse is equivalent to a RedelegationEntry
                  except that it

                  contains a balance in addition to shares which is more
                  suitable for client

                  responses.
          description: >-
            RedelegationResponse is equivalent to a Redelegation except that its
            entries

            contain a balance in addition to shares which is more suitable for
            client

            responses.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryRedelegationsResponse is response type for the Query/Redelegations
      RPC

      method.
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
    type: object
    properties:
      unbond:
        type: object
        properties:
          delegator_address:
            type: string
            description: delegator_address is the bech32-encoded address of the delegator.
          validator_address:
            type: string
            description: validator_address is the bech32-encoded address of the validator.
          entries:
            type: array
            items:
              type: object
              properties:
                creation_height:
                  type: string
                  format: int64
                  description: >-
                    creation_height is the height which the unbonding took
                    place.
                completion_time:
                  type: string
                  format: date-time
                  description: completion_time is the unix time for unbonding completion.
                initial_balance:
                  type: string
                  description: >-
                    initial_balance defines the tokens initially scheduled to
                    receive at completion.
                balance:
                  type: string
                  description: balance defines the tokens to receive at completion.
                unbonding_id:
                  type: string
                  format: uint64
                  title: Incrementing id that uniquely identifies this entry
                unbonding_on_hold_ref_count:
                  type: string
                  format: int64
                  title: >-
                    Strictly positive if this entry's unbonding has been stopped
                    by external modules
              description: >-
                UnbondingDelegationEntry defines an unbonding object with
                relevant metadata.
            description: entries are the unbonding delegation entries.
        description: |-
          UnbondingDelegation stores all of a single delegator's unbonding bonds
          for a single validator in an time-ordered list.
    description: |-
      QueryDelegationResponse is response type for the Query/UnbondingDelegation
      RPC method.
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
    type: object
    properties:
      delegation_responses:
        type: array
        items:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: >-
                    delegator_address is the bech32-encoded address of the
                    delegator.
                validator_address:
                  type: string
                  description: >-
                    validator_address is the bech32-encoded address of the
                    validator.
                shares:
                  type: string
                  description: shares define the delegation shares received.
              description: >-
                Delegation represents the bond with tokens held by an account.
                It is

                owned by one delegator, and is associated with the voting power
                of one

                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            DelegationResponse is equivalent to Delegation except that it
            contains a

            balance in addition to shares which is more suitable for client
            responses.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryValidatorDelegationsResponse is response type for the
      Query/ValidatorDelegations RPC method
  cosmos.staking.v1beta1.QueryValidatorResponse:
    type: object
    properties:
      validator:
        type: object
        properties:
          operator_address:
            type: string
            description: >-
              operator_address defines the address of the validator's operator;
              bech encoded in JSON.
          consensus_pubkey:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          jailed:
            type: boolean
            description: >-
              jailed defined whether the validator has been jailed from bonded
              status or not.
          status:
            description: status is the validator status (bonded/unbonding/unbonded).
            type: string
            enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            default: BOND_STATUS_UNSPECIFIED
          tokens:
            type: string
            description: tokens define the delegated tokens (incl. self-delegation).
          delegator_shares:
            type: string
            description: >-
              delegator_shares defines total shares issued to a validator's
              delegators.
          description:
            description: description defines the description terms for the validator.
            type: object
            properties:
              moniker:
                type: string
                description: moniker defines a human-readable name for the validator.
              identity:
                type: string
                description: >-
                  identity defines an optional identity signature (ex. UPort or
                  Keybase).
              website:
                type: string
                description: website defines an optional website link.
              security_contact:
                type: string
                description: >-
                  security_contact defines an optional email for security
                  contact.
              details:
                type: string
                description: details define other optional details.
          unbonding_height:
            type: string
            format: int64
            description: >-
              unbonding_height defines, if unbonding, the height at which this
              validator has begun unbonding.
          unbonding_time:
            type: string
            format: date-time
            description: >-
              unbonding_time defines, if unbonding, the min time for the
              validator to complete unbonding.
          commission:
            description: commission defines the commission parameters.
            type: object
            properties:
              commission_rates:
                description: >-
                  commission_rates defines the initial commission rates to be
                  used for creating a validator.
                type: object
                properties:
                  rate:
                    type: string
                    description: >-
                      rate is the commission rate charged to delegators, as a
                      fraction.
                  max_rate:
                    type: string
                    description: >-
                      max_rate defines the maximum commission rate which
                      validator can ever charge, as a fraction.
                  max_change_rate:
                    type: string
                    description: >-
                      max_change_rate defines the maximum daily increase of the
                      validator commission, as a fraction.
              update_time:
                type: string
                format: date-time
                description: update_time is the last time the commission rate was changed.
          min_self_delegation:
            type: string
            description: >-
              min_self_delegation is the validator's self declared minimum self
              delegation.


              Since: cosmos-sdk 0.46
          unbonding_on_hold_ref_count:
            type: string
            format: int64
            title: >-
              strictly positive if this validator's unbonding has been stopped
              by external modules
          unbonding_ids:
            type: array
            items:
              type: string
              format: uint64
            title: >-
              list of unbonding ids, each uniquely identifing an unbonding of
              this validator
        description: >-
          Validator defines a validator, together with the total amount of the

          Validator's bond shares and their exchange rate to coins. Slashing
          results in

          a decrease in the exchange rate, allowing correct calculation of
          future

          undelegations without iterating over delegators. When coins are
          delegated to

          this validator, the validator is credited with a delegation whose
          number of

          bond shares is based on the amount of coins delegated divided by the
          current

          exchange rate. Voting power can be calculated as total bonded shares

          multiplied by exchange rate.
    title: QueryValidatorResponse is response type for the Query/Validator RPC method
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
    type: object
    properties:
      unbonding_responses:
        type: array
        items:
          type: object
          properties:
            delegator_address:
              type: string
              description: >-
                delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: >-
                validator_address is the bech32-encoded address of the
                validator.
            entries:
              type: array
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                    description: >-
                      creation_height is the height which the unbonding took
                      place.
                  completion_time:
                    type: string
                    format: date-time
                    description: completion_time is the unix time for unbonding completion.
                  initial_balance:
                    type: string
                    description: >-
                      initial_balance defines the tokens initially scheduled to
                      receive at completion.
                  balance:
                    type: string
                    description: balance defines the tokens to receive at completion.
                  unbonding_id:
                    type: string
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                  unbonding_on_hold_ref_count:
                    type: string
                    format: int64
                    title: >-
                      Strictly positive if this entry's unbonding has been
                      stopped by external modules
                description: >-
                  UnbondingDelegationEntry defines an unbonding object with
                  relevant metadata.
              description: entries are the unbonding delegation entries.
          description: >-
            UnbondingDelegation stores all of a single delegator's unbonding
            bonds

            for a single validator in an time-ordered list.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryValidatorUnbondingDelegationsResponse is response type for the
      Query/ValidatorUnbondingDelegations RPC method.
  cosmos.staking.v1beta1.QueryValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
              description: >-
                operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: >-
                jailed defined whether the validator has been jailed from bonded
                status or not.
            status:
              description: status is the validator status (bonded/unbonding/unbonded).
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: >-
                delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              description: description defines the description terms for the validator.
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: >-
                    identity defines an optional identity signature (ex. UPort
                    or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: >-
                    security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
            unbonding_height:
              type: string
              format: int64
              description: >-
                unbonding_height defines, if unbonding, the height at which this
                validator has begun unbonding.
            unbonding_time:
              type: string
              format: date-time
              description: >-
                unbonding_time defines, if unbonding, the min time for the
                validator to complete unbonding.
            commission:
              description: commission defines the commission parameters.
              type: object
              properties:
                commission_rates:
                  description: >-
                    commission_rates defines the initial commission rates to be
                    used for creating a validator.
                  type: object
                  properties:
                    rate:
                      type: string
                      description: >-
                        rate is the commission rate charged to delegators, as a
                        fraction.
                    max_rate:
                      type: string
                      description: >-
                        max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: >-
                        max_change_rate defines the maximum daily increase of
                        the validator commission, as a fraction.
                update_time:
                  type: string
                  format: date-time
                  description: >-
                    update_time is the last time the commission rate was
                    changed.
            min_self_delegation:
              type: string
              description: >-
                min_self_delegation is the validator's self declared minimum
                self delegation.


                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              type: string
              format: int64
              title: >-
                strictly positive if this validator's unbonding has been stopped
                by external modules
            unbonding_ids:
              type: array
              items:
                type: string
                format: uint64
              title: >-
                list of unbonding ids, each uniquely identifing an unbonding of
                this validator
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
        description: validators contains all the queried validators.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      QueryValidatorsResponse is response type for the Query/Validators RPC
      method
  cosmos.staking.v1beta1.Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
        description: delegator_address is the bech32-encoded address of the delegator.
      validator_src_address:
        type: string
        description: >-
          validator_src_address is the validator redelegation source operator
          address.
      validator_dst_address:
        type: string
        description: >-
          validator_dst_address is the validator redelegation destination
          operator address.
      entries:
        type: array
        items:
          type: object
          properties:
            creation_height:
              type: string
              format: int64
              description: >-
                creation_height  defines the height which the redelegation took
                place.
            completion_time:
              type: string
              format: date-time
              description: >-
                completion_time defines the unix time for redelegation
                completion.
            initial_balance:
              type: string
              description: >-
                initial_balance defines the initial balance when redelegation
                started.
            shares_dst:
              type: string
              description: >-
                shares_dst is the amount of destination-validator shares created
                by redelegation.
            unbonding_id:
              type: string
              format: uint64
              title: Incrementing id that uniquely identifies this entry
            unbonding_on_hold_ref_count:
              type: string
              format: int64
              title: >-
                Strictly positive if this entry's unbonding has been stopped by
                external modules
          description: >-
            RedelegationEntry defines a redelegation object with relevant
            metadata.
        description: entries are the redelegation entries.
    description: >-
      Redelegation contains the list of a particular delegator's redelegating
      bonds

      from a particular source validator to a particular destination validator.
  cosmos.staking.v1beta1.RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: string
        format: int64
        description: creation_height  defines the height which the redelegation took place.
      completion_time:
        type: string
        format: date-time
        description: completion_time defines the unix time for redelegation completion.
      initial_balance:
        type: string
        description: initial_balance defines the initial balance when redelegation started.
      shares_dst:
        type: string
        description: >-
          shares_dst is the amount of destination-validator shares created by
          redelegation.
      unbonding_id:
        type: string
        format: uint64
        title: Incrementing id that uniquely identifies this entry
      unbonding_on_hold_ref_count:
        type: string
        format: int64
        title: >-
          Strictly positive if this entry's unbonding has been stopped by
          external modules
    description: RedelegationEntry defines a redelegation object with relevant metadata.
  cosmos.staking.v1beta1.RedelegationEntryResponse:
    type: object
    properties:
      redelegation_entry:
        type: object
        properties:
          creation_height:
            type: string
            format: int64
            description: >-
              creation_height  defines the height which the redelegation took
              place.
          completion_time:
            type: string
            format: date-time
            description: completion_time defines the unix time for redelegation completion.
          initial_balance:
            type: string
            description: >-
              initial_balance defines the initial balance when redelegation
              started.
          shares_dst:
            type: string
            description: >-
              shares_dst is the amount of destination-validator shares created
              by redelegation.
          unbonding_id:
            type: string
            format: uint64
            title: Incrementing id that uniquely identifies this entry
          unbonding_on_hold_ref_count:
            type: string
            format: int64
            title: >-
              Strictly positive if this entry's unbonding has been stopped by
              external modules
        description: >-
          RedelegationEntry defines a redelegation object with relevant
          metadata.
      balance:
        type: string
    description: >-
      RedelegationEntryResponse is equivalent to a RedelegationEntry except that
      it

      contains a balance in addition to shares which is more suitable for client

      responses.
  cosmos.staking.v1beta1.RedelegationResponse:
    type: object
    properties:
      redelegation:
        type: object
        properties:
          delegator_address:
            type: string
            description: delegator_address is the bech32-encoded address of the delegator.
          validator_src_address:
            type: string
            description: >-
              validator_src_address is the validator redelegation source
              operator address.
          validator_dst_address:
            type: string
            description: >-
              validator_dst_address is the validator redelegation destination
              operator address.
          entries:
            type: array
            items:
              type: object
              properties:
                creation_height:
                  type: string
                  format: int64
                  description: >-
                    creation_height  defines the height which the redelegation
                    took place.
                completion_time:
                  type: string
                  format: date-time
                  description: >-
                    completion_time defines the unix time for redelegation
                    completion.
                initial_balance:
                  type: string
                  description: >-
                    initial_balance defines the initial balance when
                    redelegation started.
                shares_dst:
                  type: string
                  description: >-
                    shares_dst is the amount of destination-validator shares
                    created by redelegation.
                unbonding_id:
                  type: string
                  format: uint64
                  title: Incrementing id that uniquely identifies this entry
                unbonding_on_hold_ref_count:
                  type: string
                  format: int64
                  title: >-
                    Strictly positive if this entry's unbonding has been stopped
                    by external modules
              description: >-
                RedelegationEntry defines a redelegation object with relevant
                metadata.
            description: entries are the redelegation entries.
        description: >-
          Redelegation contains the list of a particular delegator's
          redelegating bonds

          from a particular source validator to a particular destination
          validator.
      entries:
        type: array
        items:
          type: object
          properties:
            redelegation_entry:
              type: object
              properties:
                creation_height:
                  type: string
                  format: int64
                  description: >-
                    creation_height  defines the height which the redelegation
                    took place.
                completion_time:
                  type: string
                  format: date-time
                  description: >-
                    completion_time defines the unix time for redelegation
                    completion.
                initial_balance:
                  type: string
                  description: >-
                    initial_balance defines the initial balance when
                    redelegation started.
                shares_dst:
                  type: string
                  description: >-
                    shares_dst is the amount of destination-validator shares
                    created by redelegation.
                unbonding_id:
                  type: string
                  format: uint64
                  title: Incrementing id that uniquely identifies this entry
                unbonding_on_hold_ref_count:
                  type: string
                  format: int64
                  title: >-
                    Strictly positive if this entry's unbonding has been stopped
                    by external modules
              description: >-
                RedelegationEntry defines a redelegation object with relevant
                metadata.
            balance:
              type: string
          description: >-
            RedelegationEntryResponse is equivalent to a RedelegationEntry
            except that it

            contains a balance in addition to shares which is more suitable for
            client

            responses.
    description: >-
      RedelegationResponse is equivalent to a Redelegation except that its
      entries

      contain a balance in addition to shares which is more suitable for client

      responses.
  cosmos.staking.v1beta1.UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
        description: delegator_address is the bech32-encoded address of the delegator.
      validator_address:
        type: string
        description: validator_address is the bech32-encoded address of the validator.
      entries:
        type: array
        items:
          type: object
          properties:
            creation_height:
              type: string
              format: int64
              description: creation_height is the height which the unbonding took place.
            completion_time:
              type: string
              format: date-time
              description: completion_time is the unix time for unbonding completion.
            initial_balance:
              type: string
              description: >-
                initial_balance defines the tokens initially scheduled to
                receive at completion.
            balance:
              type: string
              description: balance defines the tokens to receive at completion.
            unbonding_id:
              type: string
              format: uint64
              title: Incrementing id that uniquely identifies this entry
            unbonding_on_hold_ref_count:
              type: string
              format: int64
              title: >-
                Strictly positive if this entry's unbonding has been stopped by
                external modules
          description: >-
            UnbondingDelegationEntry defines an unbonding object with relevant
            metadata.
        description: entries are the unbonding delegation entries.
    description: |-
      UnbondingDelegation stores all of a single delegator's unbonding bonds
      for a single validator in an time-ordered list.
  cosmos.staking.v1beta1.UnbondingDelegationEntry:
    type: object
    properties:
      creation_height:
        type: string
        format: int64
        description: creation_height is the height which the unbonding took place.
      completion_time:
        type: string
        format: date-time
        description: completion_time is the unix time for unbonding completion.
      initial_balance:
        type: string
        description: >-
          initial_balance defines the tokens initially scheduled to receive at
          completion.
      balance:
        type: string
        description: balance defines the tokens to receive at completion.
      unbonding_id:
        type: string
        format: uint64
        title: Incrementing id that uniquely identifies this entry
      unbonding_on_hold_ref_count:
        type: string
        format: int64
        title: >-
          Strictly positive if this entry's unbonding has been stopped by
          external modules
    description: >-
      UnbondingDelegationEntry defines an unbonding object with relevant
      metadata.
  cosmos.staking.v1beta1.Validator:
    type: object
    properties:
      operator_address:
        type: string
        description: >-
          operator_address defines the address of the validator's operator; bech
          encoded in JSON.
      consensus_pubkey:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      jailed:
        type: boolean
        description: >-
          jailed defined whether the validator has been jailed from bonded
          status or not.
      status:
        description: status is the validator status (bonded/unbonding/unbonded).
        type: string
        enum:
          - BOND_STATUS_UNSPECIFIED
          - BOND_STATUS_UNBONDED
          - BOND_STATUS_UNBONDING
          - BOND_STATUS_BONDED
        default: BOND_STATUS_UNSPECIFIED
      tokens:
        type: string
        description: tokens define the delegated tokens (incl. self-delegation).
      delegator_shares:
        type: string
        description: >-
          delegator_shares defines total shares issued to a validator's
          delegators.
      description:
        description: description defines the description terms for the validator.
        type: object
        properties:
          moniker:
            type: string
            description: moniker defines a human-readable name for the validator.
          identity:
            type: string
            description: >-
              identity defines an optional identity signature (ex. UPort or
              Keybase).
          website:
            type: string
            description: website defines an optional website link.
          security_contact:
            type: string
            description: security_contact defines an optional email for security contact.
          details:
            type: string
            description: details define other optional details.
      unbonding_height:
        type: string
        format: int64
        description: >-
          unbonding_height defines, if unbonding, the height at which this
          validator has begun unbonding.
      unbonding_time:
        type: string
        format: date-time
        description: >-
          unbonding_time defines, if unbonding, the min time for the validator
          to complete unbonding.
      commission:
        description: commission defines the commission parameters.
        type: object
        properties:
          commission_rates:
            description: >-
              commission_rates defines the initial commission rates to be used
              for creating a validator.
            type: object
            properties:
              rate:
                type: string
                description: >-
                  rate is the commission rate charged to delegators, as a
                  fraction.
              max_rate:
                type: string
                description: >-
                  max_rate defines the maximum commission rate which validator
                  can ever charge, as a fraction.
              max_change_rate:
                type: string
                description: >-
                  max_change_rate defines the maximum daily increase of the
                  validator commission, as a fraction.
          update_time:
            type: string
            format: date-time
            description: update_time is the last time the commission rate was changed.
      min_self_delegation:
        type: string
        description: >-
          min_self_delegation is the validator's self declared minimum self
          delegation.


          Since: cosmos-sdk 0.46
      unbonding_on_hold_ref_count:
        type: string
        format: int64
        title: >-
          strictly positive if this validator's unbonding has been stopped by
          external modules
      unbonding_ids:
        type: array
        items:
          type: string
          format: uint64
        title: >-
          list of unbonding ids, each uniquely identifing an unbonding of this
          validator
    description: >-
      Validator defines a validator, together with the total amount of the

      Validator's bond shares and their exchange rate to coins. Slashing results
      in

      a decrease in the exchange rate, allowing correct calculation of future

      undelegations without iterating over delegators. When coins are delegated
      to

      this validator, the validator is credited with a delegation whose number
      of

      bond shares is based on the amount of coins delegated divided by the
      current

      exchange rate. Voting power can be calculated as total bonded shares

      multiplied by exchange rate.
  cosmos.upgrade.v1beta1.ModuleVersion:
    type: object
    properties:
      name:
        type: string
        title: name of the app module
      version:
        type: string
        format: uint64
        title: consensus version of the app module
    description: |-
      ModuleVersion specifies a module and its consensus version.

      Since: cosmos-sdk 0.43
  cosmos.upgrade.v1beta1.Plan:
    type: object
    properties:
      name:
        type: string
        description: >-
          Sets the name for the upgrade. This name will be used by the upgraded

          version of the software to apply any special "on-upgrade" commands
          during

          the first BeginBlock method after the upgrade is applied. It is also
          used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will
          be

          assumed that the software is out-of-date when the upgrade Time or
          Height is

          reached and the software will exit.
      time:
        type: string
        format: date-time
        description: >-
          Deprecated: Time based upgrades have been deprecated. Time based
          upgrade logic

          has been removed from the SDK.

          If this field is not empty, an error will be thrown.
      height:
        type: string
        format: int64
        description: The height at which the upgrade must be performed.
      info:
        type: string
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
      upgraded_client_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
    type: object
    properties:
      height:
        type: string
        format: int64
        description: height is the block height at which the plan was applied.
    description: >-
      QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
      RPC

      method.
  cosmos.upgrade.v1beta1.QueryAuthorityResponse:
    type: object
    properties:
      address:
        type: string
    description: 'Since: cosmos-sdk 0.46'
    title: QueryAuthorityResponse is the response type for Query/Authority
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
    type: object
    properties:
      plan:
        description: plan is the current upgrade plan.
        type: object
        properties:
          name:
            type: string
            description: >-
              Sets the name for the upgrade. This name will be used by the
              upgraded

              version of the software to apply any special "on-upgrade" commands
              during

              the first BeginBlock method after the upgrade is applied. It is
              also used

              to detect whether a software version can handle a given upgrade.
              If no

              upgrade handler with this name has been set in the software, it
              will be

              assumed that the software is out-of-date when the upgrade Time or
              Height is

              reached and the software will exit.
          time:
            type: string
            format: date-time
            description: >-
              Deprecated: Time based upgrades have been deprecated. Time based
              upgrade logic

              has been removed from the SDK.

              If this field is not empty, an error will be thrown.
          height:
            type: string
            format: int64
            description: The height at which the upgrade must be performed.
          info:
            type: string
            title: >-
              Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade
              to
          upgraded_client_state:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
    description: >-
      QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
      RPC

      method.
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
    type: object
    properties:
      module_versions:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: name of the app module
            version:
              type: string
              format: uint64
              title: consensus version of the app module
          description: |-
            ModuleVersion specifies a module and its consensus version.

            Since: cosmos-sdk 0.43
        description: >-
          module_versions is a list of module names with their consensus
          versions.
    description: >-
      QueryModuleVersionsResponse is the response type for the
      Query/ModuleVersions

      RPC method.


      Since: cosmos-sdk 0.43
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
    type: object
    properties:
      upgraded_consensus_state:
        type: string
        format: byte
        title: 'Since: cosmos-sdk 0.43'
    description: >-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState

      RPC method.
  ibc.applications.transfer.v1.DenomTrace:
    type: object
    properties:
      path:
        type: string
        description: >-
          path defines the chain of port/channel identifiers used for tracing
          the

          source of the fungible token.
      base_denom:
        type: string
        description: base denomination of the relayed fungible token.
    description: >-
      DenomTrace contains the base denomination for ICS20 fungible tokens and
      the

      source tracing information path.
  ibc.applications.transfer.v1.Params:
    type: object
    properties:
      send_enabled:
        type: boolean
        description: >-
          send_enabled enables or disables all cross-chain token transfers from
          this

          chain.
      receive_enabled:
        type: boolean
        description: >-
          receive_enabled enables or disables all cross-chain token transfers to
          this

          chain.
    description: >-
      Params defines the set of IBC transfer parameters.

      NOTE: To prevent a single token from being transferred, set the

      TransfersEnabled parameter to true and then set the bank module's
      SendEnabled

      parameter for the denomination to false.
  ibc.applications.transfer.v1.QueryDenomHashResponse:
    type: object
    properties:
      hash:
        type: string
        description: hash (in hex format) of the denomination trace information.
    description: |-
      QueryDenomHashResponse is the response type for the Query/DenomHash RPC
      method.
  ibc.applications.transfer.v1.QueryDenomTraceResponse:
    type: object
    properties:
      denom_trace:
        type: object
        properties:
          path:
            type: string
            description: >-
              path defines the chain of port/channel identifiers used for
              tracing the

              source of the fungible token.
          base_denom:
            type: string
            description: base denomination of the relayed fungible token.
        description: >-
          DenomTrace contains the base denomination for ICS20 fungible tokens
          and the

          source tracing information path.
    description: |-
      QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
      method.
  ibc.applications.transfer.v1.QueryDenomTracesResponse:
    type: object
    properties:
      denom_traces:
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                path defines the chain of port/channel identifiers used for
                tracing the

                source of the fungible token.
            base_denom:
              type: string
              description: base denomination of the relayed fungible token.
          description: >-
            DenomTrace contains the base denomination for ICS20 fungible tokens
            and the

            source tracing information path.
        description: denom_traces returns all denominations trace information.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryConnectionsResponse is the response type for the Query/DenomTraces
      RPC

      method.
  ibc.applications.transfer.v1.QueryEscrowAddressResponse:
    type: object
    properties:
      escrow_address:
        type: string
        title: the escrow account address
    description: >-
      QueryEscrowAddressResponse is the response type of the EscrowAddress RPC
      method.
  ibc.applications.transfer.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          send_enabled:
            type: boolean
            description: >-
              send_enabled enables or disables all cross-chain token transfers
              from this

              chain.
          receive_enabled:
            type: boolean
            description: >-
              receive_enabled enables or disables all cross-chain token
              transfers to this

              chain.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QueryTotalEscrowForDenomResponse is the response type for
      TotalEscrowForDenom RPC method.
  ibc.core.channel.v1.Channel:
    type: object
    properties:
      state:
        title: current state of the channel end
        type: string
        enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
          - STATE_FLUSHING
          - STATE_FLUSHCOMPLETE
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
          State defines if a channel is in one of the following states:
          CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
           - STATE_INIT: A channel has just started the opening handshake.
           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
           - STATE_OPEN: A channel has completed the handshake. Open channels are
          ready to send and receive packets.
           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
          packets.
           - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
           - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
      ordering:
        title: whether the channel is ordered or unordered
        type: string
        enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        default: ORDER_NONE_UNSPECIFIED
        description: |-
          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
          which they were sent.
           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      counterparty:
        title: counterparty channel end
        type: object
        properties:
          port_id:
            type: string
            description: >-
              port on the counterparty chain which owns the other end of the
              channel.
          channel_id:
            type: string
            title: channel end on the counterparty chain
      connection_hops:
        type: array
        items:
          type: string
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
      version:
        type: string
        title: opaque channel version, which is agreed upon during the handshake
      upgrade_sequence:
        type: string
        format: uint64
        title: >-
          upgrade sequence indicates the latest upgrade attempt performed by
          this channel

          the value of 0 indicates the channel has never been upgraded
    description: |-
      Channel defines pipeline for exactly-once packet delivery between specific
      modules on separate blockchains, which has at least one end capable of
      sending packets and one end capable of receiving packets.
  ibc.core.channel.v1.Counterparty:
    type: object
    properties:
      port_id:
        type: string
        description: >-
          port on the counterparty chain which owns the other end of the
          channel.
      channel_id:
        type: string
        title: channel end on the counterparty chain
    title: Counterparty defines a channel end counterparty
  ibc.core.channel.v1.ErrorReceipt:
    type: object
    properties:
      sequence:
        type: string
        format: uint64
        title: the channel upgrade sequence
      message:
        type: string
        title: the error message detailing the cause of failure
    description: >-
      ErrorReceipt defines a type which encapsulates the upgrade sequence and
      error associated with the

      upgrade handshake failure. When a channel upgrade handshake is aborted
      both chains are expected to increment to the

      next sequence.
  ibc.core.channel.v1.IdentifiedChannel:
    type: object
    properties:
      state:
        title: current state of the channel end
        type: string
        enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
          - STATE_FLUSHING
          - STATE_FLUSHCOMPLETE
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
          State defines if a channel is in one of the following states:
          CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
           - STATE_INIT: A channel has just started the opening handshake.
           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
           - STATE_OPEN: A channel has completed the handshake. Open channels are
          ready to send and receive packets.
           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
          packets.
           - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
           - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
      ordering:
        title: whether the channel is ordered or unordered
        type: string
        enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        default: ORDER_NONE_UNSPECIFIED
        description: |-
          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
          which they were sent.
           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      counterparty:
        title: counterparty channel end
        type: object
        properties:
          port_id:
            type: string
            description: >-
              port on the counterparty chain which owns the other end of the
              channel.
          channel_id:
            type: string
            title: channel end on the counterparty chain
      connection_hops:
        type: array
        items:
          type: string
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
      version:
        type: string
        title: opaque channel version, which is agreed upon during the handshake
      port_id:
        type: string
        title: port identifier
      channel_id:
        type: string
        title: channel identifier
      upgrade_sequence:
        type: string
        format: uint64
        title: >-
          upgrade sequence indicates the latest upgrade attempt performed by
          this channel

          the value of 0 indicates the channel has never been upgraded
    description: |-
      IdentifiedChannel defines a channel with additional port and channel
      identifier fields.
  ibc.core.channel.v1.Order:
    type: string
    enum:
      - ORDER_NONE_UNSPECIFIED
      - ORDER_UNORDERED
      - ORDER_ORDERED
    default: ORDER_NONE_UNSPECIFIED
    description: |-
      - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
       - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
      which they were sent.
       - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
    title: Order defines if a channel is ORDERED or UNORDERED
  ibc.core.channel.v1.PacketState:
    type: object
    properties:
      port_id:
        type: string
        description: channel port identifier.
      channel_id:
        type: string
        description: channel unique identifier.
      sequence:
        type: string
        format: uint64
        description: packet sequence.
      data:
        type: string
        format: byte
        description: embedded data that represents packet state.
    description: |-
      PacketState defines the generic type necessary to retrieve and store
      packet commitments, acknowledgements, and receipts.
      Caller is responsible for knowing the context necessary to interpret this
      state as a commitment, acknowledgement, or a receipt.
  ibc.core.channel.v1.Params:
    type: object
    properties:
      upgrade_timeout:
        type: object
        properties:
          height:
            title: block height after which the packet or upgrade times out
            type: object
            properties:
              revision_number:
                type: string
                format: uint64
                title: the revision that the client is currently on
              revision_height:
                type: string
                format: uint64
                title: the height within the given revision
            description: >-
              Normally the RevisionHeight is incremented at each height while
              keeping

              RevisionNumber the same. However some consensus algorithms may
              choose to

              reset the height in certain conditions e.g. hard forks,
              state-machine

              breaking changes In these cases, the RevisionNumber is incremented
              so that

              height continues to be monitonically increasing even as the
              RevisionHeight

              gets reset
          timestamp:
            type: string
            format: uint64
            title: >-
              block timestamp (in nanoseconds) after which the packet or upgrade
              times out
        description: >-
          Timeout defines an execution deadline structure for 04-channel
          handlers.

          This includes packet lifecycle handlers as well as the upgrade
          handshake handlers.

          A valid Timeout contains either one or both of a timestamp and block
          height (sequence).
    description: Params defines the set of IBC channel parameters.
  ibc.core.channel.v1.QueryChannelClientStateResponse:
    type: object
    properties:
      identified_client_state:
        title: client state associated with the channel
        type: object
        properties:
          client_id:
            type: string
            title: client identifier
          client_state:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            title: client state
        description: |-
          IdentifiedClientState defines a client state with an additional client
          identifier field.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryChannelClientStateResponse is the Response type for the
      Query/QueryChannelClientState RPC method
  ibc.core.channel.v1.QueryChannelConsensusStateResponse:
    type: object
    properties:
      consensus_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: consensus state associated with the channel
      client_id:
        type: string
        title: client ID associated with the consensus state
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryChannelClientStateResponse is the Response type for the
      Query/QueryChannelClientState RPC method
  ibc.core.channel.v1.QueryChannelParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          upgrade_timeout:
            type: object
            properties:
              height:
                title: block height after which the packet or upgrade times out
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
              timestamp:
                type: string
                format: uint64
                title: >-
                  block timestamp (in nanoseconds) after which the packet or
                  upgrade times out
            description: >-
              Timeout defines an execution deadline structure for 04-channel
              handlers.

              This includes packet lifecycle handlers as well as the upgrade
              handshake handlers.

              A valid Timeout contains either one or both of a timestamp and
              block height (sequence).
    description: >-
      QueryChannelParamsResponse is the response type for the
      Query/ChannelParams RPC method.
  ibc.core.channel.v1.QueryChannelResponse:
    type: object
    properties:
      channel:
        title: channel associated with the request identifiers
        type: object
        properties:
          state:
            title: current state of the channel end
            type: string
            enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
              - STATE_FLUSHING
              - STATE_FLUSHCOMPLETE
            default: STATE_UNINITIALIZED_UNSPECIFIED
            description: >-
              State defines if a channel is in one of the following states:

              CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or
              UNINITIALIZED.

               - STATE_UNINITIALIZED_UNSPECIFIED: Default State
               - STATE_INIT: A channel has just started the opening handshake.
               - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
               - STATE_OPEN: A channel has completed the handshake. Open channels are
              ready to send and receive packets.
               - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
              packets.
               - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
               - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
          ordering:
            title: whether the channel is ordered or unordered
            type: string
            enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
            default: ORDER_NONE_UNSPECIFIED
            description: |-
              - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
               - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
              which they were sent.
               - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          counterparty:
            title: counterparty channel end
            type: object
            properties:
              port_id:
                type: string
                description: >-
                  port on the counterparty chain which owns the other end of the
                  channel.
              channel_id:
                type: string
                title: channel end on the counterparty chain
          connection_hops:
            type: array
            items:
              type: string
            title: >-
              list of connection identifiers, in order, along which packets sent
              on

              this channel will travel
          version:
            type: string
            title: opaque channel version, which is agreed upon during the handshake
          upgrade_sequence:
            type: string
            format: uint64
            title: >-
              upgrade sequence indicates the latest upgrade attempt performed by
              this channel

              the value of 0 indicates the channel has never been upgraded
        description: >-
          Channel defines pipeline for exactly-once packet delivery between
          specific

          modules on separate blockchains, which has at least one end capable of

          sending packets and one end capable of receiving packets.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    description: >-
      QueryChannelResponse is the response type for the Query/Channel RPC
      method.

      Besides the Channel end, it includes a proof and the height from which the

      proof was retrieved.
  ibc.core.channel.v1.QueryChannelsResponse:
    type: object
    properties:
      channels:
        type: array
        items:
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
                - STATE_FLUSHING
                - STATE_FLUSHCOMPLETE
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: >-
                State defines if a channel is in one of the following states:

                CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or
                UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
                 - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                 - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              default: ORDER_NONE_UNSPECIFIED
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: >-
                    port on the counterparty chain which owns the other end of
                    the channel.
                channel_id:
                  type: string
                  title: channel end on the counterparty chain
            connection_hops:
              type: array
              items:
                type: string
              title: >-
                list of connection identifiers, in order, along which packets
                sent on

                this channel will travel
            version:
              type: string
              title: >-
                opaque channel version, which is agreed upon during the
                handshake
            port_id:
              type: string
              title: port identifier
            channel_id:
              type: string
              title: channel identifier
            upgrade_sequence:
              type: string
              format: uint64
              title: >-
                upgrade sequence indicates the latest upgrade attempt performed
                by this channel

                the value of 0 indicates the channel has never been upgraded
          description: |-
            IdentifiedChannel defines a channel with additional port and channel
            identifier fields.
        description: list of stored channels of the chain.
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    description: >-
      QueryChannelsResponse is the response type for the Query/Channels RPC
      method.
  ibc.core.channel.v1.QueryConnectionChannelsResponse:
    type: object
    properties:
      channels:
        type: array
        items:
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
                - STATE_FLUSHING
                - STATE_FLUSHCOMPLETE
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: >-
                State defines if a channel is in one of the following states:

                CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or
                UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
                 - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                 - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              default: ORDER_NONE_UNSPECIFIED
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: >-
                    port on the counterparty chain which owns the other end of
                    the channel.
                channel_id:
                  type: string
                  title: channel end on the counterparty chain
            connection_hops:
              type: array
              items:
                type: string
              title: >-
                list of connection identifiers, in order, along which packets
                sent on

                this channel will travel
            version:
              type: string
              title: >-
                opaque channel version, which is agreed upon during the
                handshake
            port_id:
              type: string
              title: port identifier
            channel_id:
              type: string
              title: channel identifier
            upgrade_sequence:
              type: string
              format: uint64
              title: >-
                upgrade sequence indicates the latest upgrade attempt performed
                by this channel

                the value of 0 indicates the channel has never been upgraded
          description: |-
            IdentifiedChannel defines a channel with additional port and channel
            identifier fields.
        description: list of channels associated with a connection.
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryConnectionChannelsResponse is the Response type for the
      Query/QueryConnectionChannels RPC method
  ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
    type: object
    properties:
      next_sequence_receive:
        type: string
        format: uint64
        title: next sequence receive number
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QuerySequenceResponse is the response type for the
      Query/QueryNextSequenceReceiveResponse RPC method
  ibc.core.channel.v1.QueryNextSequenceSendResponse:
    type: object
    properties:
      next_sequence_send:
        type: string
        format: uint64
        title: next sequence send number
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryNextSequenceSendResponse is the request type for the
      Query/QueryNextSequenceSend RPC method
  ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
    type: object
    properties:
      acknowledgement:
        type: string
        format: byte
        title: packet associated with the request fields
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryPacketAcknowledgementResponse defines the client query response for a
      packet which also includes a proof and the height from which the
      proof was retrieved
  ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
    type: object
    properties:
      acknowledgements:
        type: array
        items:
          type: object
          properties:
            port_id:
              type: string
              description: channel port identifier.
            channel_id:
              type: string
              description: channel unique identifier.
            sequence:
              type: string
              format: uint64
              description: packet sequence.
            data:
              type: string
              format: byte
              description: embedded data that represents packet state.
          description: >-
            PacketState defines the generic type necessary to retrieve and store

            packet commitments, acknowledgements, and receipts.

            Caller is responsible for knowing the context necessary to interpret
            this

            state as a commitment, acknowledgement, or a receipt.
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryPacketAcknowledgemetsResponse is the request type for the
      Query/QueryPacketAcknowledgements RPC method
  ibc.core.channel.v1.QueryPacketCommitmentResponse:
    type: object
    properties:
      commitment:
        type: string
        format: byte
        title: packet associated with the request fields
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: >-
      QueryPacketCommitmentResponse defines the client query response for a
      packet

      which also includes a proof and the height from which the proof was

      retrieved
  ibc.core.channel.v1.QueryPacketCommitmentsResponse:
    type: object
    properties:
      commitments:
        type: array
        items:
          type: object
          properties:
            port_id:
              type: string
              description: channel port identifier.
            channel_id:
              type: string
              description: channel unique identifier.
            sequence:
              type: string
              format: uint64
              description: packet sequence.
            data:
              type: string
              format: byte
              description: embedded data that represents packet state.
          description: >-
            PacketState defines the generic type necessary to retrieve and store

            packet commitments, acknowledgements, and receipts.

            Caller is responsible for knowing the context necessary to interpret
            this

            state as a commitment, acknowledgement, or a receipt.
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryPacketCommitmentsResponse is the request type for the
      Query/QueryPacketCommitments RPC method
  ibc.core.channel.v1.QueryPacketReceiptResponse:
    type: object
    properties:
      received:
        type: boolean
        title: success flag for if receipt exists
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: >-
      QueryPacketReceiptResponse defines the client query response for a packet

      receipt which also includes a proof, and the height from which the proof
      was

      retrieved
  ibc.core.channel.v1.QueryUnreceivedAcksResponse:
    type: object
    properties:
      sequences:
        type: array
        items:
          type: string
          format: uint64
        title: list of unreceived acknowledgement sequences
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryUnreceivedAcksResponse is the response type for the
      Query/UnreceivedAcks RPC method
  ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
    type: object
    properties:
      sequences:
        type: array
        items:
          type: string
          format: uint64
        title: list of unreceived packet sequences
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryUnreceivedPacketsResponse is the response type for the
      Query/UnreceivedPacketCommitments RPC method
  ibc.core.channel.v1.QueryUpgradeErrorResponse:
    type: object
    properties:
      error_receipt:
        type: object
        properties:
          sequence:
            type: string
            format: uint64
            title: the channel upgrade sequence
          message:
            type: string
            title: the error message detailing the cause of failure
        description: >-
          ErrorReceipt defines a type which encapsulates the upgrade sequence
          and error associated with the

          upgrade handshake failure. When a channel upgrade handshake is aborted
          both chains are expected to increment to the

          next sequence.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: >-
      QueryUpgradeErrorResponse is the response type for the
      Query/QueryUpgradeError RPC method
  ibc.core.channel.v1.QueryUpgradeResponse:
    type: object
    properties:
      upgrade:
        type: object
        properties:
          fields:
            type: object
            properties:
              ordering:
                type: string
                enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                default: ORDER_NONE_UNSPECIFIED
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                title: Order defines if a channel is ORDERED or UNORDERED
              connection_hops:
                type: array
                items:
                  type: string
              version:
                type: string
            description: |-
              UpgradeFields are the fields in a channel end which may be changed
              during a channel upgrade.
          timeout:
            type: object
            properties:
              height:
                title: block height after which the packet or upgrade times out
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may
                  choose to

                  reset the height in certain conditions e.g. hard forks,
                  state-machine

                  breaking changes In these cases, the RevisionNumber is
                  incremented so that

                  height continues to be monitonically increasing even as the
                  RevisionHeight

                  gets reset
              timestamp:
                type: string
                format: uint64
                title: >-
                  block timestamp (in nanoseconds) after which the packet or
                  upgrade times out
            description: >-
              Timeout defines an execution deadline structure for 04-channel
              handlers.

              This includes packet lifecycle handlers as well as the upgrade
              handshake handlers.

              A valid Timeout contains either one or both of a timestamp and
              block height (sequence).
          next_sequence_send:
            type: string
            format: uint64
        description: >-
          Upgrade is a verifiable type which contains the relevant information

          for an attempted upgrade. It provides the proposed changes to the
          channel

          end, the timeout for this upgrade attempt and the next packet sequence

          which allows the counterparty to efficiently know the highest sequence
          it has received.

          The next sequence send is used for pruning and upgrading from
          unordered to ordered channels.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: >-
      QueryUpgradeResponse is the response type for the QueryUpgradeResponse RPC
      method
  ibc.core.channel.v1.State:
    type: string
    enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
      - STATE_CLOSED
      - STATE_FLUSHING
      - STATE_FLUSHCOMPLETE
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: |-
      State defines if a channel is in one of the following states:
      CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A channel has just started the opening handshake.
       - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
       - STATE_OPEN: A channel has completed the handshake. Open channels are
      ready to send and receive packets.
       - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
      packets.
       - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
       - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
  ibc.core.channel.v1.Timeout:
    type: object
    properties:
      height:
        title: block height after which the packet or upgrade times out
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
      timestamp:
        type: string
        format: uint64
        title: >-
          block timestamp (in nanoseconds) after which the packet or upgrade
          times out
    description: >-
      Timeout defines an execution deadline structure for 04-channel handlers.

      This includes packet lifecycle handlers as well as the upgrade handshake
      handlers.

      A valid Timeout contains either one or both of a timestamp and block
      height (sequence).
  ibc.core.channel.v1.Upgrade:
    type: object
    properties:
      fields:
        type: object
        properties:
          ordering:
            type: string
            enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
            default: ORDER_NONE_UNSPECIFIED
            description: |-
              - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
               - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
              which they were sent.
               - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
            title: Order defines if a channel is ORDERED or UNORDERED
          connection_hops:
            type: array
            items:
              type: string
          version:
            type: string
        description: |-
          UpgradeFields are the fields in a channel end which may be changed
          during a channel upgrade.
      timeout:
        type: object
        properties:
          height:
            title: block height after which the packet or upgrade times out
            type: object
            properties:
              revision_number:
                type: string
                format: uint64
                title: the revision that the client is currently on
              revision_height:
                type: string
                format: uint64
                title: the height within the given revision
            description: >-
              Normally the RevisionHeight is incremented at each height while
              keeping

              RevisionNumber the same. However some consensus algorithms may
              choose to

              reset the height in certain conditions e.g. hard forks,
              state-machine

              breaking changes In these cases, the RevisionNumber is incremented
              so that

              height continues to be monitonically increasing even as the
              RevisionHeight

              gets reset
          timestamp:
            type: string
            format: uint64
            title: >-
              block timestamp (in nanoseconds) after which the packet or upgrade
              times out
        description: >-
          Timeout defines an execution deadline structure for 04-channel
          handlers.

          This includes packet lifecycle handlers as well as the upgrade
          handshake handlers.

          A valid Timeout contains either one or both of a timestamp and block
          height (sequence).
      next_sequence_send:
        type: string
        format: uint64
    description: >-
      Upgrade is a verifiable type which contains the relevant information

      for an attempted upgrade. It provides the proposed changes to the channel

      end, the timeout for this upgrade attempt and the next packet sequence

      which allows the counterparty to efficiently know the highest sequence it
      has received.

      The next sequence send is used for pruning and upgrading from unordered to
      ordered channels.
  ibc.core.channel.v1.UpgradeFields:
    type: object
    properties:
      ordering:
        type: string
        enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        default: ORDER_NONE_UNSPECIFIED
        description: |-
          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
          which they were sent.
           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
        title: Order defines if a channel is ORDERED or UNORDERED
      connection_hops:
        type: array
        items:
          type: string
      version:
        type: string
    description: |-
      UpgradeFields are the fields in a channel end which may be changed
      during a channel upgrade.
  ibc.core.client.v1.Height:
    type: object
    properties:
      revision_number:
        type: string
        format: uint64
        title: the revision that the client is currently on
      revision_height:
        type: string
        format: uint64
        title: the height within the given revision
    description: |-
      Normally the RevisionHeight is incremented at each height while keeping
      RevisionNumber the same. However some consensus algorithms may choose to
      reset the height in certain conditions e.g. hard forks, state-machine
      breaking changes In these cases, the RevisionNumber is incremented so that
      height continues to be monitonically increasing even as the RevisionHeight
      gets reset
    title: >-
      Height is a monotonically increasing data type

      that can be compared against another Height for the purposes of updating
      and

      freezing clients
  ibc.core.client.v1.IdentifiedClientState:
    type: object
    properties:
      client_id:
        type: string
        title: client identifier
      client_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: client state
    description: |-
      IdentifiedClientState defines a client state with an additional client
      identifier field.
  ibc.core.client.v1.ConsensusStateWithHeight:
    type: object
    properties:
      height:
        title: consensus state height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
      consensus_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: consensus state
    description: >-
      ConsensusStateWithHeight defines a consensus state with an additional
      height

      field.
  ibc.core.client.v1.Params:
    type: object
    properties:
      allowed_clients:
        type: array
        items:
          type: string
        description: >-
          allowed_clients defines the list of allowed client state types which
          can be created

          and interacted with. If a client type is removed from the allowed
          clients list, usage

          of this client will be disabled until it is added again to the list.
    description: Params defines the set of IBC light client parameters.
  ibc.core.client.v1.QueryClientParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          allowed_clients:
            type: array
            items:
              type: string
            description: >-
              allowed_clients defines the list of allowed client state types
              which can be created

              and interacted with. If a client type is removed from the allowed
              clients list, usage

              of this client will be disabled until it is added again to the
              list.
    description: >-
      QueryClientParamsResponse is the response type for the Query/ClientParams
      RPC

      method.
  ibc.core.client.v1.QueryClientStateResponse:
    type: object
    properties:
      client_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: client state associated with the request identifier
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    description: >-
      QueryClientStateResponse is the response type for the Query/ClientState
      RPC

      method. Besides the client state, it includes a proof and the height from

      which the proof was retrieved.
  ibc.core.client.v1.QueryClientStatesResponse:
    type: object
    properties:
      client_states:
        type: array
        items:
          type: object
          properties:
            client_id:
              type: string
              title: client identifier
            client_state:
              title: client state
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: >-
            IdentifiedClientState defines a client state with an additional
            client

            identifier field.
        description: list of stored ClientStates of the chain.
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryClientStatesResponse is the response type for the Query/ClientStates
      RPC

      method.
  ibc.core.client.v1.QueryClientStatusResponse:
    type: object
    properties:
      status:
        type: string
    description: >-
      QueryClientStatusResponse is the response type for the Query/ClientStatus
      RPC

      method. It returns the current status of the IBC client.
  ibc.core.client.v1.QueryConsensusStateHeightsResponse:
    type: object
    properties:
      consensus_state_heights:
        type: array
        items:
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may
            choose to

            reset the height in certain conditions e.g. hard forks,
            state-machine

            breaking changes In these cases, the RevisionNumber is incremented
            so that

            height continues to be monitonically increasing even as the
            RevisionHeight

            gets reset
          title: >-
            Height is a monotonically increasing data type

            that can be compared against another Height for the purposes of
            updating and

            freezing clients
        title: consensus state heights
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: |-
      QueryConsensusStateHeightsResponse is the response type for the
      Query/ConsensusStateHeights RPC method
  ibc.core.client.v1.QueryConsensusStateResponse:
    type: object
    properties:
      consensus_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: >-
          consensus state associated with the client identifier at the given
          height
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
    title: >-
      QueryConsensusStateResponse is the response type for the
      Query/ConsensusState

      RPC method
  ibc.core.client.v1.QueryConsensusStatesResponse:
    type: object
    properties:
      consensus_states:
        type: array
        items:
          type: object
          properties:
            height:
              title: consensus state height
              type: object
              properties:
                revision_number:
                  type: string
                  format: uint64
                  title: the revision that the client is currently on
                revision_height:
                  type: string
                  format: uint64
                  title: the height within the given revision
              description: >-
                Normally the RevisionHeight is incremented at each height while
                keeping

                RevisionNumber the same. However some consensus algorithms may
                choose to

                reset the height in certain conditions e.g. hard forks,
                state-machine

                breaking changes In these cases, the RevisionNumber is
                incremented so that

                height continues to be monitonically increasing even as the
                RevisionHeight

                gets reset
            consensus_state:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              title: consensus state
          description: >-
            ConsensusStateWithHeight defines a consensus state with an
            additional height

            field.
        title: consensus states associated with the identifier
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: |-
      QueryConsensusStatesResponse is the response type for the
      Query/ConsensusStates RPC method
  ibc.core.client.v1.QueryUpgradedClientStateResponse:
    type: object
    properties:
      upgraded_client_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: client state associated with the request identifier
    description: |-
      QueryUpgradedClientStateResponse is the response type for the
      Query/UpgradedClientState RPC method.
  ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
    type: object
    properties:
      upgraded_consensus_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: Consensus state associated with the request identifier
    description: |-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState RPC method.
  ibc.core.commitment.v1.MerklePrefix:
    type: object
    properties:
      key_prefix:
        type: string
        format: byte
    title: |-
      MerklePrefix is merkle path prefixed to the key.
      The constructed key from the Path and the key will be append(Path.KeyPath,
      append(Path.KeyPrefix, key...))
  ibc.core.connection.v1.ConnectionEnd:
    type: object
    properties:
      client_id:
        type: string
        description: client associated with this connection.
      versions:
        type: array
        items:
          type: object
          properties:
            identifier:
              type: string
              title: unique version identifier
            features:
              type: array
              items:
                type: string
              title: list of features compatible with the specified identifier
          description: >-
            Version defines the versioning scheme used to negotiate the IBC
            version in

            the connection handshake.
        description: >-
          IBC version which can be utilised to determine encodings or protocols
          for

          channels or packets utilising this connection.
      state:
        description: current state of the connection end.
        type: string
        enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        default: STATE_UNINITIALIZED_UNSPECIFIED
      counterparty:
        description: counterparty chain associated with this connection.
        type: object
        properties:
          client_id:
            type: string
            description: >-
              identifies the client on the counterparty chain associated with a
              given

              connection.
          connection_id:
            type: string
            description: >-
              identifies the connection end on the counterparty chain associated
              with a

              given connection.
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            type: object
            properties:
              key_prefix:
                type: string
                format: byte
            title: >-
              MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be
              append(Path.KeyPath,

              append(Path.KeyPrefix, key...))
      delay_period:
        type: string
        format: uint64
        description: >-
          delay period that must pass before a consensus state can be used for

          packet-verification NOTE: delay period logic is only implemented by
          some

          clients.
    description: |-
      ConnectionEnd defines a stateful object on a chain connected to another
      separate one.
      NOTE: there must only be 2 defined ConnectionEnds to establish
      a connection between two chains.
  ibc.core.connection.v1.Counterparty:
    type: object
    properties:
      client_id:
        type: string
        description: >-
          identifies the client on the counterparty chain associated with a
          given

          connection.
      connection_id:
        type: string
        description: >-
          identifies the connection end on the counterparty chain associated
          with a

          given connection.
      prefix:
        description: commitment merkle prefix of the counterparty chain.
        type: object
        properties:
          key_prefix:
            type: string
            format: byte
        title: >-
          MerklePrefix is merkle path prefixed to the key.

          The constructed key from the Path and the key will be
          append(Path.KeyPath,

          append(Path.KeyPrefix, key...))
    description: >-
      Counterparty defines the counterparty chain associated with a connection
      end.
  ibc.core.connection.v1.IdentifiedConnection:
    type: object
    properties:
      id:
        type: string
        description: connection identifier.
      client_id:
        type: string
        description: client associated with this connection.
      versions:
        type: array
        items:
          type: object
          properties:
            identifier:
              type: string
              title: unique version identifier
            features:
              type: array
              items:
                type: string
              title: list of features compatible with the specified identifier
          description: >-
            Version defines the versioning scheme used to negotiate the IBC
            version in

            the connection handshake.
        title: >-
          IBC version which can be utilised to determine encodings or protocols
          for

          channels or packets utilising this connection
      state:
        description: current state of the connection end.
        type: string
        enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        default: STATE_UNINITIALIZED_UNSPECIFIED
      counterparty:
        description: counterparty chain associated with this connection.
        type: object
        properties:
          client_id:
            type: string
            description: >-
              identifies the client on the counterparty chain associated with a
              given

              connection.
          connection_id:
            type: string
            description: >-
              identifies the connection end on the counterparty chain associated
              with a

              given connection.
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            type: object
            properties:
              key_prefix:
                type: string
                format: byte
            title: >-
              MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be
              append(Path.KeyPath,

              append(Path.KeyPrefix, key...))
      delay_period:
        type: string
        format: uint64
        description: delay period associated with this connection.
    description: |-
      IdentifiedConnection defines a connection with additional connection
      identifier field.
  ibc.core.connection.v1.Params:
    type: object
    properties:
      max_expected_time_per_block:
        type: string
        format: uint64
        description: >-
          maximum expected time per block (in nanoseconds), used to enforce
          block delay. This parameter should reflect the

          largest amount of time that the chain might reasonably take to produce
          the next block under normal operating

          conditions. A safe choice is 3-5x the expected time per block.
    description: Params defines the set of Connection parameters.
  ibc.core.connection.v1.QueryClientConnectionsResponse:
    type: object
    properties:
      connection_paths:
        type: array
        items:
          type: string
        description: slice of all the connection paths associated with a client.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was generated
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryClientConnectionsResponse is the response type for the
      Query/ClientConnections RPC method
  ibc.core.connection.v1.QueryConnectionClientStateResponse:
    type: object
    properties:
      identified_client_state:
        title: client state associated with the channel
        type: object
        properties:
          client_id:
            type: string
            title: client identifier
          client_state:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            title: client state
        description: |-
          IdentifiedClientState defines a client state with an additional client
          identifier field.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryConnectionClientStateResponse is the response type for the
      Query/ConnectionClientState RPC method
  ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
    type: object
    properties:
      consensus_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: consensus state associated with the channel
      client_id:
        type: string
        title: client ID associated with the consensus state
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    title: |-
      QueryConnectionConsensusStateResponse is the response type for the
      Query/ConnectionConsensusState RPC method
  ibc.core.connection.v1.QueryConnectionParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_expected_time_per_block:
            type: string
            format: uint64
            description: >-
              maximum expected time per block (in nanoseconds), used to enforce
              block delay. This parameter should reflect the

              largest amount of time that the chain might reasonably take to
              produce the next block under normal operating

              conditions. A safe choice is 3-5x the expected time per block.
    description: >-
      QueryConnectionParamsResponse is the response type for the
      Query/ConnectionParams RPC method.
  ibc.core.connection.v1.QueryConnectionResponse:
    type: object
    properties:
      connection:
        title: connection associated with the request identifier
        type: object
        properties:
          client_id:
            type: string
            description: client associated with this connection.
          versions:
            type: array
            items:
              type: object
              properties:
                identifier:
                  type: string
                  title: unique version identifier
                features:
                  type: array
                  items:
                    type: string
                  title: list of features compatible with the specified identifier
              description: >-
                Version defines the versioning scheme used to negotiate the IBC
                version in

                the connection handshake.
            description: >-
              IBC version which can be utilised to determine encodings or
              protocols for

              channels or packets utilising this connection.
          state:
            description: current state of the connection end.
            type: string
            enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
            default: STATE_UNINITIALIZED_UNSPECIFIED
          counterparty:
            description: counterparty chain associated with this connection.
            type: object
            properties:
              client_id:
                type: string
                description: >-
                  identifies the client on the counterparty chain associated
                  with a given

                  connection.
              connection_id:
                type: string
                description: >-
                  identifies the connection end on the counterparty chain
                  associated with a

                  given connection.
              prefix:
                description: commitment merkle prefix of the counterparty chain.
                type: object
                properties:
                  key_prefix:
                    type: string
                    format: byte
                title: >-
                  MerklePrefix is merkle path prefixed to the key.

                  The constructed key from the Path and the key will be
                  append(Path.KeyPath,

                  append(Path.KeyPrefix, key...))
          delay_period:
            type: string
            format: uint64
            description: >-
              delay period that must pass before a consensus state can be used
              for

              packet-verification NOTE: delay period logic is only implemented
              by some

              clients.
        description: >-
          ConnectionEnd defines a stateful object on a chain connected to
          another

          separate one.

          NOTE: there must only be 2 defined ConnectionEnds to establish

          a connection between two chains.
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    description: >-
      QueryConnectionResponse is the response type for the Query/Connection RPC

      method. Besides the connection end, it includes a proof and the height
      from

      which the proof was retrieved.
  ibc.core.connection.v1.QueryConnectionsResponse:
    type: object
    properties:
      connections:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: connection identifier.
            client_id:
              type: string
              description: client associated with this connection.
            versions:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                    title: unique version identifier
                  features:
                    type: array
                    items:
                      type: string
                    title: list of features compatible with the specified identifier
                description: >-
                  Version defines the versioning scheme used to negotiate the
                  IBC version in

                  the connection handshake.
              title: >-
                IBC version which can be utilised to determine encodings or
                protocols for

                channels or packets utilising this connection
            state:
              description: current state of the connection end.
              type: string
              enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
              default: STATE_UNINITIALIZED_UNSPECIFIED
            counterparty:
              description: counterparty chain associated with this connection.
              type: object
              properties:
                client_id:
                  type: string
                  description: >-
                    identifies the client on the counterparty chain associated
                    with a given

                    connection.
                connection_id:
                  type: string
                  description: >-
                    identifies the connection end on the counterparty chain
                    associated with a

                    given connection.
                prefix:
                  description: commitment merkle prefix of the counterparty chain.
                  type: object
                  properties:
                    key_prefix:
                      type: string
                      format: byte
                  title: >-
                    MerklePrefix is merkle path prefixed to the key.

                    The constructed key from the Path and the key will be
                    append(Path.KeyPath,

                    append(Path.KeyPrefix, key...))
            delay_period:
              type: string
              format: uint64
              description: delay period associated with this connection.
          description: |-
            IdentifiedConnection defines a connection with additional connection
            identifier field.
        description: list of stored connections of the chain.
      pagination:
        title: pagination response
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
      height:
        title: query block height
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
    description: >-
      QueryConnectionsResponse is the response type for the Query/Connections
      RPC

      method.
  ibc.core.connection.v1.State:
    type: string
    enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: |-
      State defines if a connection is in one of the following states:
      INIT, TRYOPEN, OPEN or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A connection end has just started the opening handshake.
       - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
      chain.
       - STATE_OPEN: A connection end has completed the handshake.
  ibc.core.connection.v1.Version:
    type: object
    properties:
      identifier:
        type: string
        title: unique version identifier
      features:
        type: array
        items:
          type: string
        title: list of features compatible with the specified identifier
    description: |-
      Version defines the versioning scheme used to negotiate the IBC version in
      the connection handshake.
  packetforward.v1.Params:
    type: object
    properties:
      fee_percentage:
        type: string
    description: Params defines the set of packetforward parameters.
  packetforward.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          fee_percentage:
            type: string
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmwasm.wasm.v1.AbsoluteTxPosition:
    type: object
    properties:
      block_height:
        type: string
        format: uint64
        title: BlockHeight is the block the contract was created at
      tx_index:
        type: string
        format: uint64
        title: >-
          TxIndex is a monotonic counter within the block (actual transaction
          index,

          or gas consumed)
    description: |-
      AbsoluteTxPosition is a unique transaction position that allows for global
      ordering of transactions.
  cosmwasm.wasm.v1.AccessConfig:
    type: object
    properties:
      permission:
        type: string
        enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
        default: ACCESS_TYPE_UNSPECIFIED
        description: >-
          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
          value
           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
        title: AccessType permission types
      addresses:
        type: array
        items:
          type: string
    description: AccessConfig access control type.
  cosmwasm.wasm.v1.AccessType:
    type: string
    enum:
      - ACCESS_TYPE_UNSPECIFIED
      - ACCESS_TYPE_NOBODY
      - ACCESS_TYPE_EVERYBODY
      - ACCESS_TYPE_ANY_OF_ADDRESSES
    default: ACCESS_TYPE_UNSPECIFIED
    description: >-
      - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
      value
       - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
       - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
       - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
    title: AccessType permission types
  cosmwasm.wasm.v1.CodeInfoResponse:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
      creator:
        type: string
      data_hash:
        type: string
        format: byte
      instantiate_permission:
        type: object
        properties:
          permission:
            type: string
            enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            default: ACCESS_TYPE_UNSPECIFIED
            description: >-
              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for
              empty value
               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
            title: AccessType permission types
          addresses:
            type: array
            items:
              type: string
        description: AccessConfig access control type.
    title: CodeInfoResponse contains code meta data from CodeInfo
  cosmwasm.wasm.v1.ContractCodeHistoryEntry:
    type: object
    properties:
      operation:
        type: string
        enum:
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        description: >-
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
          ContractCodeHistoryOperationTypeUnspecified placeholder for empty
          value
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
        title: ContractCodeHistoryOperationType actions that caused a code change
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored WASM code
      updated:
        description: Updated Tx position when the operation was executed.
        type: object
        properties:
          block_height:
            type: string
            format: uint64
            title: BlockHeight is the block the contract was created at
          tx_index:
            type: string
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index,

              or gas consumed)
      msg:
        type: string
        format: byte
    description: ContractCodeHistoryEntry metadata to a contract.
  cosmwasm.wasm.v1.ContractCodeHistoryOperationType:
    type: string
    enum:
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
    default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
    description: >-
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
      ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
    title: ContractCodeHistoryOperationType actions that caused a code change
  cosmwasm.wasm.v1.ContractInfo:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored Wasm code
      creator:
        type: string
        title: Creator address who initially instantiated the contract
      admin:
        type: string
        title: Admin is an optional address that can execute migrations
      label:
        type: string
        description: Label is optional metadata to be stored with a contract instance.
      created:
        description: Created Tx position when the contract was instantiated.
        type: object
        properties:
          block_height:
            type: string
            format: uint64
            title: BlockHeight is the block the contract was created at
          tx_index:
            type: string
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index,

              or gas consumed)
      ibc_port_id:
        type: string
      extension:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    title: ContractInfo stores a WASM contract instance
  cosmwasm.wasm.v1.Model:
    type: object
    properties:
      key:
        type: string
        format: byte
        title: hex-encode key to read it better (this is often ascii)
      value:
        type: string
        format: byte
        title: base64-encode raw value
    title: Model is a struct that holds a KV pair
  cosmwasm.wasm.v1.Params:
    type: object
    properties:
      code_upload_access:
        type: object
        properties:
          permission:
            type: string
            enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            default: ACCESS_TYPE_UNSPECIFIED
            description: >-
              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for
              empty value
               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
            title: AccessType permission types
          addresses:
            type: array
            items:
              type: string
        description: AccessConfig access control type.
      instantiate_default_permission:
        type: string
        enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
        default: ACCESS_TYPE_UNSPECIFIED
        description: >-
          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
          value
           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
        title: AccessType permission types
    description: Params defines the set of wasm parameters.
  cosmwasm.wasm.v1.QueryAllContractStateResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              format: byte
              title: hex-encode key to read it better (this is often ascii)
            value:
              type: string
              format: byte
              title: base64-encode raw value
          title: Model is a struct that holds a KV pair
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryAllContractStateResponse is the response type for the
      Query/AllContractState RPC method
  cosmwasm.wasm.v1.QueryCodeResponse:
    type: object
    properties:
      code_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
          creator:
            type: string
          data_hash:
            type: string
            format: byte
          instantiate_permission:
            type: object
            properties:
              permission:
                type: string
                enum:
                  - ACCESS_TYPE_UNSPECIFIED
                  - ACCESS_TYPE_NOBODY
                  - ACCESS_TYPE_EVERYBODY
                  - ACCESS_TYPE_ANY_OF_ADDRESSES
                default: ACCESS_TYPE_UNSPECIFIED
                description: >-
                  - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder
                  for empty value
                   - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                   - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                   - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                title: AccessType permission types
              addresses:
                type: array
                items:
                  type: string
            description: AccessConfig access control type.
        title: CodeInfoResponse contains code meta data from CodeInfo
      data:
        type: string
        format: byte
    title: QueryCodeResponse is the response type for the Query/Code RPC method
  cosmwasm.wasm.v1.QueryCodesResponse:
    type: object
    properties:
      code_infos:
        type: array
        items:
          type: object
          properties:
            code_id:
              type: string
              format: uint64
            creator:
              type: string
            data_hash:
              type: string
              format: byte
            instantiate_permission:
              type: object
              properties:
                permission:
                  type: string
                  enum:
                    - ACCESS_TYPE_UNSPECIFIED
                    - ACCESS_TYPE_NOBODY
                    - ACCESS_TYPE_EVERYBODY
                    - ACCESS_TYPE_ANY_OF_ADDRESSES
                  default: ACCESS_TYPE_UNSPECIFIED
                  description: >-
                    - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder
                    for empty value
                     - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                     - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                     - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                  title: AccessType permission types
                addresses:
                  type: array
                  items:
                    type: string
              description: AccessConfig access control type.
          title: CodeInfoResponse contains code meta data from CodeInfo
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: QueryCodesResponse is the response type for the Query/Codes RPC method
  cosmwasm.wasm.v1.QueryContractHistoryResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          properties:
            operation:
              type: string
              enum:
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
              default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
              description: >-
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                ContractCodeHistoryOperationTypeUnspecified placeholder for
                empty value
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
              title: >-
                ContractCodeHistoryOperationType actions that caused a code
                change
            code_id:
              type: string
              format: uint64
              title: CodeID is the reference to the stored WASM code
            updated:
              description: Updated Tx position when the operation was executed.
              type: object
              properties:
                block_height:
                  type: string
                  format: uint64
                  title: BlockHeight is the block the contract was created at
                tx_index:
                  type: string
                  format: uint64
                  title: >-
                    TxIndex is a monotonic counter within the block (actual
                    transaction index,

                    or gas consumed)
            msg:
              type: string
              format: byte
          description: ContractCodeHistoryEntry metadata to a contract.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryContractHistoryResponse is the response type for the
      Query/ContractHistory RPC method
  cosmwasm.wasm.v1.QueryContractInfoResponse:
    type: object
    properties:
      address:
        type: string
        title: address is the address of the contract
      contract_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
            title: CodeID is the reference to the stored Wasm code
          creator:
            type: string
            title: Creator address who initially instantiated the contract
          admin:
            type: string
            title: Admin is an optional address that can execute migrations
          label:
            type: string
            description: Label is optional metadata to be stored with a contract instance.
          created:
            description: Created Tx position when the contract was instantiated.
            type: object
            properties:
              block_height:
                type: string
                format: uint64
                title: BlockHeight is the block the contract was created at
              tx_index:
                type: string
                format: uint64
                title: >-
                  TxIndex is a monotonic counter within the block (actual
                  transaction index,

                  or gas consumed)
          ibc_port_id:
            type: string
          extension:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        title: ContractInfo stores a WASM contract instance
    title: >-
      QueryContractInfoResponse is the response type for the Query/ContractInfo
      RPC

      method
  cosmwasm.wasm.v1.QueryContractsByCodeResponse:
    type: object
    properties:
      contracts:
        type: array
        items:
          type: string
        title: contracts are a set of contract addresses
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryContractsByCodeResponse is the response type for the
      Query/ContractsByCode RPC method
  cosmwasm.wasm.v1.QueryContractsByCreatorResponse:
    type: object
    properties:
      contract_addresses:
        type: array
        items:
          type: string
        title: ContractAddresses result set
      pagination:
        description: Pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryContractsByCreatorResponse is the response type for the
      Query/ContractsByCreator RPC method.
  cosmwasm.wasm.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          code_upload_access:
            type: object
            properties:
              permission:
                type: string
                enum:
                  - ACCESS_TYPE_UNSPECIFIED
                  - ACCESS_TYPE_NOBODY
                  - ACCESS_TYPE_EVERYBODY
                  - ACCESS_TYPE_ANY_OF_ADDRESSES
                default: ACCESS_TYPE_UNSPECIFIED
                description: >-
                  - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder
                  for empty value
                   - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                   - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                   - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                title: AccessType permission types
              addresses:
                type: array
                items:
                  type: string
            description: AccessConfig access control type.
          instantiate_default_permission:
            type: string
            enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            default: ACCESS_TYPE_UNSPECIFIED
            description: >-
              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for
              empty value
               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
            title: AccessType permission types
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmwasm.wasm.v1.QueryPinnedCodesResponse:
    type: object
    properties:
      code_ids:
        type: array
        items:
          type: string
          format: uint64
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryPinnedCodesResponse is the response type for the
      Query/PinnedCodes RPC method
  cosmwasm.wasm.v1.QueryRawContractStateResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the raw store data
    title: |-
      QueryRawContractStateResponse is the response type for the
      Query/RawContractState RPC method
  cosmwasm.wasm.v1.QuerySmartContractStateResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the json data returned from the smart contract
    title: |-
      QuerySmartContractStateResponse is the response type for the
      Query/SmartContractState RPC method
